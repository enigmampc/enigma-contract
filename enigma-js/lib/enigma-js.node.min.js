!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("enigma-js",[],t):"object"==typeof exports?exports["enigma-js"]=t():e["enigma-js"]=t()}(global,(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=14)}([function(e,t){e.exports=require("node-forge")},function(e,t){e.exports=require("eventemitter3")},function(e,t){e.exports=require("jsbi")},function(e,t){e.exports=require("web3-utils")},function(e,t){e.exports=require("buffer")},function(e,t){e.exports=require("zlib")},function(e,t){e.exports=require("eth-crypto")},function(e,t){e.exports=require("elliptic")},function(e){e.exports=JSON.parse('{"contractName":"Enigma","abi":[{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"address","name":"_principal","type":"address"},{"internalType":"address","name":"_exchangeRate","type":"address"},{"internalType":"uint256","name":"_epochSize","type":"uint256"},{"internalType":"uint256","name":"_timeoutThreshold","type":"uint256"},{"internalType":"bytes","name":"_mrSigner","type":"bytes"},{"internalType":"bytes","name":"_isvSvn","type":"bytes"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"}],"name":"LoggedIn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"}],"name":"LoggedOut","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"taskId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"scAddr","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"gasUsed","type":"uint256"},{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"taskId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"scAddr","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"gasUsed","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasUsedTotal","type":"uint256"},{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"gasUsed","type":"uint64"},{"indexed":false,"internalType":"address","name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"internalType":"bytes32[4]","name":"bytes32s","type":"bytes32[4]"},{"indexed":false,"internalType":"uint256","name":"deltaHashIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasUsedTotal","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"optionalEthereumData","type":"bytes"},{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"custodian","type":"address"},{"indexed":false,"internalType":"address","name":"signer","type":"address"}],"name":"Registered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"gasUsed","type":"uint64"},{"indexed":false,"internalType":"address","name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"internalType":"bytes32[4]","name":"bytes32s","type":"bytes32[4]"},{"indexed":false,"internalType":"uint256","name":"gasUsedTotal","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"optionalEthereumData","type":"bytes"},{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"}],"name":"SecretContractDeployed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"taskId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"inputsHash","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"gasLimit","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"gasPx","type":"uint64"},{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"seed","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"firstBlockNumber","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"internalType":"address[]","name":"workers","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"stakes","type":"uint256[]"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event"},{"constant":true,"inputs":[],"name":"getAllSecretContractAddresses","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEpochSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getIsvSvn","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getMrSigner","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_scAddr","type":"bytes32"}],"name":"getSecretContract","outputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes32","name":"preCodeHash","type":"bytes32"},{"internalType":"bytes32","name":"codeHash","type":"bytes32"},{"internalType":"bytes32[]","name":"stateDeltaHashes","type":"bytes32[]"},{"internalType":"enum EnigmaCommon.SecretContractStatus","name":"status","type":"uint8"}],"internalType":"struct EnigmaCommon.SecretContract","name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSigningAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_taskId","type":"bytes32"}],"name":"getTaskRecord","outputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes32","name":"inputsHash","type":"bytes32"},{"internalType":"bytes32","name":"outputHash","type":"bytes32"},{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasPx","type":"uint64"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"enum EnigmaCommon.TaskStatus","name":"status","type":"uint8"},{"internalType":"bytes","name":"proof","type":"bytes"}],"internalType":"struct EnigmaCommon.TaskRecord","name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getTaskTimeoutSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getUpdatedEnigmaContractAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_sender","type":"address"}],"name":"getUserTaskDeployments","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_worker","type":"address"}],"name":"getWorker","outputs":[{"components":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"enum EnigmaCommon.WorkerStatus","name":"status","type":"uint8"},{"internalType":"bytes","name":"report","type":"bytes"},{"internalType":"uint256","name":"balance","type":"uint256"},{"components":[{"internalType":"enum EnigmaCommon.WorkerLogType","name":"workerEventType","type":"uint8"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"uint256","name":"balance","type":"uint256"}],"internalType":"struct EnigmaCommon.WorkerLog[]","name":"workerLogs","type":"tuple[]"}],"internalType":"struct EnigmaCommon.Worker","name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_signer","type":"address"}],"name":"getWorkerFromSigningAddress","outputs":[{"internalType":"address","name":"","type":"address"},{"components":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"enum EnigmaCommon.WorkerStatus","name":"status","type":"uint8"},{"internalType":"bytes","name":"report","type":"bytes"},{"internalType":"uint256","name":"balance","type":"uint256"},{"components":[{"internalType":"enum EnigmaCommon.WorkerLogType","name":"workerEventType","type":"uint8"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"uint256","name":"balance","type":"uint256"}],"internalType":"struct EnigmaCommon.WorkerLog[]","name":"workerLogs","type":"tuple[]"}],"internalType":"struct EnigmaCommon.Worker","name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getWorkersParams","outputs":[{"components":[{"internalType":"uint256","name":"firstBlockNumber","type":"uint256"},{"internalType":"address[]","name":"workers","type":"address[]"},{"internalType":"uint256[]","name":"stakes","type":"uint256[]"},{"internalType":"uint256","name":"seed","type":"uint256"}],"internalType":"struct EnigmaCommon.WorkersParams[5]","name":"","type":"tuple[5]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_signer","type":"address"},{"internalType":"bytes","name":"_report","type":"bytes"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_custodian","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"login","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"logout","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_taskId","type":"bytes32"},{"internalType":"bytes32","name":"_codeHash","type":"bytes32"},{"internalType":"uint64","name":"_gasUsed","type":"uint64"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"deploySecretContractFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint64","name":"_gasUsed","type":"uint64"},{"internalType":"address","name":"_optionalEthereumContractAddress","type":"address"},{"internalType":"bytes32[4]","name":"_bytes32s","type":"bytes32[4]"},{"internalType":"bytes","name":"_optionalEthereumData","type":"bytes"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"deploySecretContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"countSecretContracts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_start","type":"uint256"},{"internalType":"uint256","name":"_stop","type":"uint256"}],"name":"getSecretContractAddresses","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_inputsHash","type":"bytes32"},{"internalType":"uint64","name":"_gasLimit","type":"uint64"},{"internalType":"uint64","name":"_gasPx","type":"uint64"},{"internalType":"uint256","name":"_firstBlockNumber","type":"uint256"},{"internalType":"uint256","name":"_nonce","type":"uint256"}],"name":"createDeploymentTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_inputsHash","type":"bytes32"},{"internalType":"uint64","name":"_gasLimit","type":"uint64"},{"internalType":"uint64","name":"_gasPx","type":"uint64"},{"internalType":"uint256","name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint64","name":"_gasUsed","type":"uint64"},{"internalType":"address","name":"_optionalEthereumContractAddress","type":"address"},{"internalType":"bytes32[4]","name":"_bytes32s","type":"bytes32[4]"},{"internalType":"bytes","name":"_optionalEthereumData","type":"bytes"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"commitReceipt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_scAddr","type":"bytes32"},{"internalType":"bytes32","name":"_taskId","type":"bytes32"},{"internalType":"bytes32","name":"_outputHash","type":"bytes32"},{"internalType":"uint64","name":"_gasUsed","type":"uint64"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"commitTaskFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_taskId","type":"bytes32"}],"name":"returnFeesForTask","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_blockNumber","type":"uint256"},{"internalType":"uint256","name":"_seed","type":"uint256"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"setWorkersParams","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_blockNumber","type":"uint256"}],"name":"getActiveWorkers","outputs":[{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_blockNumber","type":"uint256"}],"name":"getFirstBlockNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_blockNumber","type":"uint256"}],"name":"getWorkerParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_blockNumber","type":"uint256"},{"internalType":"bytes32","name":"_scAddr","type":"bytes32"}],"name":"getWorkerGroup","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_custodian","type":"address"}],"name":"getReport","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes","name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"verifyReport","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_updatedEnigmaContractAddress","type":"address"}],"name":"upgradeEnigmaContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_workerAddress","type":"address"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"transferWorkerStakePostUpgrade","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes","name":"_mrSigner","type":"bytes"}],"name":"setMrSigner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes","name":"_isvSvn","type":"bytes"}],"name":"setIsvSvn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.12+commit.7709ece9\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_tokenAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_principal\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_exchangeRate\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_epochSize\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_timeoutThreshold\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_mrSigner\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_isvSvn\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"DepositSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"LoggedIn\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"LoggedOut\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"previousOwner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes\\",\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailed\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasUsedTotal\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes\\",\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailedETH\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes32[4]\\",\\"name\\":\\"bytes32s\\",\\"type\\":\\"bytes32[4]\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"deltaHashIndex\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasUsedTotal\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes\\",\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes\\",\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"custodian\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"Registered\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes32[4]\\",\\"name\\":\\"bytes32s\\",\\"type\\":\\"bytes32[4]\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasUsedTotal\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes\\",\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"SecretContractDeployed\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"TaskFeeReturned\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WithdrawSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"inclusionBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"address[]\\",\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WorkersParameterized\\",\\"type\\":\\"event\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes32[4]\\",\\"name\\":\\"_bytes32s\\",\\"type\\":\\"bytes32[4]\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitReceipt\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitTaskFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"countSecretContracts\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createDeploymentTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes32[4]\\",\\"name\\":\\"_bytes32s\\",\\"type\\":\\"bytes32[4]\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContractFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"deposit\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getActiveWorkers\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getAllSecretContractAddresses\\",\\"outputs\\":[{\\"internalType\\":\\"bytes32[]\\",\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getEpochSize\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getFirstBlockNumber\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getIsvSvn\\",\\"outputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getMrSigner\\",\\"outputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getReport\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getSecretContract\\",\\"outputs\\":[{\\"components\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32[]\\",\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"internalType\\":\\"enum EnigmaCommon.SecretContractStatus\\",\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"}],\\"internalType\\":\\"struct EnigmaCommon.SecretContract\\",\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_start\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_stop\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getSecretContractAddresses\\",\\"outputs\\":[{\\"internalType\\":\\"bytes32[]\\",\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getSigningAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getTaskRecord\\",\\"outputs\\":[{\\"components\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"enum EnigmaCommon.TaskStatus\\",\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"proof\\",\\"type\\":\\"bytes\\"}],\\"internalType\\":\\"struct EnigmaCommon.TaskRecord\\",\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getTaskTimeoutSize\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getUpdatedEnigmaContractAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_sender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getUserTaskDeployments\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_worker\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorker\\",\\"outputs\\":[{\\"components\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"enum EnigmaCommon.WorkerStatus\\",\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"internalType\\":\\"enum EnigmaCommon.WorkerLogType\\",\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"internalType\\":\\"struct EnigmaCommon.WorkerLog[]\\",\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"internalType\\":\\"struct EnigmaCommon.Worker\\",\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorkerFromSigningAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"components\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"enum EnigmaCommon.WorkerStatus\\",\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"internalType\\":\\"enum EnigmaCommon.WorkerLogType\\",\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"internalType\\":\\"struct EnigmaCommon.WorkerLog[]\\",\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"internalType\\":\\"struct EnigmaCommon.Worker\\",\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getWorkerGroup\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getWorkerParams\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getWorkersParams\\",\\"outputs\\":[{\\"components\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address[]\\",\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"}],\\"internalType\\":\\"struct EnigmaCommon.WorkersParams[5]\\",\\"name\\":\\"\\",\\"type\\":\\"tuple[5]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"isOwner\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"login\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"logout\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"owner\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_report\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"register\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"renounceOwnership\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"returnFeesForTask\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_isvSvn\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setIsvSvn\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_mrSigner\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setMrSigner\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_seed\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setWorkersParams\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_workerAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"transferWorkerStakePostUpgrade\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_updatedEnigmaContractAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"upgradeEnigmaContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_data\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"verifyReport\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdraw\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"methods\\":{\\"commitReceipt(uint64,address,bytes32[4],bytes,bytes)\\":{\\"params\\":{\\"_bytes32s\\":\\"[scAddr, taskId, stateDeltaHash, outputHash]\\",\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_optionalEthereumContractAddress\\":\\"Output state hash\\",\\"_optionalEthereumData\\":\\"Output state hash\\",\\"_sig\\":\\"Worker\'s signature\\"}},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"countSecretContracts()\\":{\\"return\\":\\"Number of deployed secret contracts\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\",\\"_nonce\\":\\"Locally-computed nonce value for this deployment\\"}},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"deploySecretContract(uint64,address,bytes32[4],bytes,bytes)\\":{\\"params\\":{\\"_bytes32s\\":\\"[taskId, preCodeHash, codeHash, initStateDeltaHash]\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_optionalEthereumContractAddress\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumData\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_sig\\":\\"Worker\'s signature for deployment\\"}},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deposit(address,uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\",\\"_custodian\\":\\"The worker\'s ETH address\\"}},\\"getActiveWorkers(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"}},\\"getAllSecretContractAddresses()\\":{\\"return\\":\\"Array of secret contract addresses\\"},\\"getEpochSize()\\":{\\"return\\":\\"Epoch size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Block number\\"},\\"getIsvSvn()\\":{\\"return\\":\\"isvSvn\\"},\\"getMrSigner()\\":{\\"return\\":\\"mrSigner\\"},\\"getReport(address)\\":{\\"params\\":{\\"_custodian\\":\\"The worker\'s custodian address\\"}},\\"getSecretContract(bytes32)\\":{\\"params\\":{\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"SecretContract struct\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"params\\":{\\"_start\\":\\"Start of range\\",\\"_stop\\":\\"End of range\\"},\\"return\\":\\"Subset of deployed secret contract addresses\\"},\\"getSigningAddress()\\":{\\"return\\":\\"Signing address\\"},\\"getTaskRecord(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique identifier for a given task\\"},\\"return\\":\\"TaskRecord struct\\"},\\"getTaskTimeoutSize()\\":{\\"return\\":\\"task timeout\\"},\\"getUpdatedEnigmaContractAddress()\\":{\\"return\\":\\"Updated Enigma contract address\\"},\\"getUserTaskDeployments(address)\\":{\\"params\\":{\\"_sender\\":\\"Task sender\'s ethereum address\\"},\\"return\\":\\"Current number for task deployments for user\\"},\\"getWorker(address)\\":{\\"params\\":{\\"_worker\\":\\"Worker\'s ethereum address\\"},\\"return\\":\\"Worker struct\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"params\\":{\\"_signer\\":\\"Worker\'s signing address\\"},\\"return\\":\\"Ethereum addressWorker struct\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number the task record was mined\\",\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"Selected workers\' addresses\\"},\\"getWorkerParams(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes\\"},\\"getWorkersParams()\\":{\\"return\\":\\"Array of WorkersParams structs\\"},\\"isOwner()\\":{\\"details\\":\\"Returns true if the caller is the current owner.\\"},\\"owner()\\":{\\"details\\":\\"Returns the address of the current owner.\\"},\\"register(address,bytes,bytes)\\":{\\"params\\":{\\"_report\\":\\"The RLP encoded report returned by the IAS\\",\\"_signature\\":\\"Signature\\",\\"_signer\\":\\"The signer address, derived from the enclave public key\\"}},\\"renounceOwnership()\\":{\\"details\\":\\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\\"},\\"returnFeesForTask(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique taskId\\"}},\\"setIsvSvn(bytes)\\":{\\"params\\":{\\"_isvSvn\\":\\"mrSigner\\"}},\\"setMrSigner(bytes)\\":{\\"params\\":{\\"_mrSigner\\":\\"mrSigner\\"}},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number principal node is attempting to set worker params\\",\\"_seed\\":\\"The random integer generated by the enclave\\",\\"_sig\\":\\"Principal node\'s signature\\"}},\\"transferOwnership(address)\\":{\\"details\\":\\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\\"},\\"transferWorkerStakePostUpgrade(address,bytes)\\":{\\"params\\":{\\"_sig\\":\\"Signature\\",\\"_workerAddress\\":\\"Newly-registered worker address\\"}},\\"upgradeEnigmaContract(address)\\":{\\"params\\":{\\"_updatedEnigmaContractAddress\\":\\"Updated newly-deployed Enigma contract address\\"}},\\"verifyReport(bytes,bytes)\\":{\\"params\\":{\\"_data\\":\\"The report itself\\",\\"_signature\\":\\"The signature of the report\\"}},\\"withdraw(uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\"}}}},\\"userdoc\\":{\\"methods\\":{\\"commitReceipt(uint64,address,bytes32[4],bytes,bytes)\\":{\\"notice\\":\\"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee.\\"},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure.\\"},\\"countSecretContracts()\\":{\\"notice\\":\\"Check if secret contract has been deployed\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"notice\\":\\"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid.\\"},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"notice\\":\\"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"deploySecretContract(uint64,address,bytes32[4],bytes,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deposit(address,uint256)\\":{\\"notice\\":\\"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\"},\\"getActiveWorkers(uint256)\\":{\\"notice\\":\\"Get active workers before a certain block number\\"},\\"getAllSecretContractAddresses()\\":{\\"notice\\":\\"Get all secret contract addresses\\"},\\"getEpochSize()\\":{\\"notice\\":\\"Get the epoch block size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"notice\\":\\"Get the first block number of an epoch that a given block number belongs to\\"},\\"getIsvSvn()\\":{\\"notice\\":\\"Get isvSvn\\"},\\"getMrSigner()\\":{\\"notice\\":\\"Get mrSigner\\"},\\"getReport(address)\\":{\\"notice\\":\\"The RLP encoded report returned by the IAS server\\"},\\"getSecretContract(bytes32)\\":{\\"notice\\":\\"Get a SecretContract struct given a particular secret contract address\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"notice\\":\\"Get deployed secret contract addresses within a range\\"},\\"getSigningAddress()\\":{\\"notice\\":\\"Get signing address of calling worker\\"},\\"getTaskRecord(bytes32)\\":{\\"notice\\":\\"Get a TaskRecord struct given a particular task\'s ID\\"},\\"getTaskTimeoutSize()\\":{\\"notice\\":\\"Get the task timeout size\\"},\\"getUpdatedEnigmaContractAddress()\\":{\\"notice\\":\\"Get updated Enigma contract address\\"},\\"getUserTaskDeployments(address)\\":{\\"notice\\":\\"Get the current number/index (used as unique nonce value) of task deployments for a given user user\\"},\\"getWorker(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s ethereum address\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s signing address\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"notice\\":\\"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address.\\"},\\"getWorkerParams(uint256)\\":{\\"notice\\":\\"Get worker params for an epoch given a particular block number\\"},\\"getWorkersParams()\\":{\\"notice\\":\\"Get epoch-based history of worker params information\\"},\\"login()\\":{\\"notice\\":\\"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process.\\"},\\"logout()\\":{\\"notice\\":\\"Logout worker. Worker must be logged in to do so.\\"},\\"register(address,bytes,bytes)\\":{\\"notice\\":\\"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks.\\"},\\"returnFeesForTask(bytes32)\\":{\\"notice\\":\\"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\"},\\"setIsvSvn(bytes)\\":{\\"notice\\":\\"Set isvSvn\\"},\\"setMrSigner(bytes)\\":{\\"notice\\":\\"Set mrSigner\\"},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"notice\\":\\"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node\\"},\\"transferWorkerStakePostUpgrade(address,bytes)\\":{\\"notice\\":\\"Transfer worker stake from old contract to new contract upon registration\\"},\\"upgradeEnigmaContract(address)\\":{\\"notice\\":\\"Upgrade Enigma Contract\\"},\\"verifyReport(bytes,bytes)\\":{\\"notice\\":\\"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\"},\\"withdraw(uint256)\\":{\\"notice\\":\\"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\"}}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/Enigma.sol\\":\\"Enigma\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/Enigma.sol\\":{\\"keccak256\\":\\"0xa433b07c0bed719050eb1a7955fdc8dc0b12841bff96acfe9e73cd60df8f6958\\",\\"urls\\":[\\"bzz-raw://355628a77891b95cde75356f4bdf838e6ab8d98861d75873635801d821805ba3\\",\\"dweb:/ipfs/QmWEMzqaWDt5T1gwe1G5GqA22YB8xs91cRwvcSjXoSKuYM\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaCommon.sol\\":{\\"keccak256\\":\\"0x14afecf484aee26ed212d36f48f342b5332856d6c6519a8e02d4a71039240b28\\",\\"urls\\":[\\"bzz-raw://b64ffcf2e8bf756f08a729d5a445a21b393400d4589f3adf4f3997bccb93e621\\",\\"dweb:/ipfs/QmaKC6yRnm8HhGkRiDjpzUBsV1HzkaMTzckvTFpH3iMbxP\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaEvents.sol\\":{\\"keccak256\\":\\"0xa03c7485b1181be87377003502e3674fd2fd877d0115698ad938b78bfe16d53c\\",\\"urls\\":[\\"bzz-raw://b9da4c37e63eb41320cd3b9844e0de963b635092b050773a742a2b50ab56ea1b\\",\\"dweb:/ipfs/QmfH9S53Y98xFJc2aoR2AvqpUvFmK1YuwBGAMHDF6ZnJvn\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaState.sol\\":{\\"keccak256\\":\\"0xfbfc6902250cd99001bf88a27ac6fe66c32349cbbd2329000053930574326bb7\\",\\"urls\\":[\\"bzz-raw://4e3ec9d18856771256ae46f69c1b72c4dea0c485ad6b66faead3ad968dedd9bd\\",\\"dweb:/ipfs/QmfVwDTZwD4UbXzxwqHo5Lapcmncua5MfFFtkGAxf5VEdM\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaStorage.sol\\":{\\"keccak256\\":\\"0xd7ce9ab44bc7239498b55a8a9ac1d64c1b1fa7ad56aabe59585de77fb21e37db\\",\\"urls\\":[\\"bzz-raw://a1653dd4bbbfa0c2415338afba52aee0d32c3f0c395b252247cf669e2595ea4d\\",\\"dweb:/ipfs/QmcZJtNkMnrkzLdhXC6QE1hDiLx22N9m3Be8x2YbyHiTxd\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/Getters.sol\\":{\\"keccak256\\":\\"0x10f9e5329eab3f24f9b98eb52eda594017f2a5cda132b04d255d7bc96a105c6a\\",\\"urls\\":[\\"bzz-raw://9f1776321930ba9c765f17745885d0b4fe039f5d7433c1304d5e070be5ffaa08\\",\\"dweb:/ipfs/QmbySRnwGfeLgyFENw6XJmM1u6iAw5Y8cH8bTGqiHJooGe\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/PrincipalImpl.sol\\":{\\"keccak256\\":\\"0x35a66b5ae64db01822739961a8176eba2898daff9bce5d54667aa306737c289a\\",\\"urls\\":[\\"bzz-raw://2c437f745dc51ba58b0c520371ff8919f21c16137aa024fefcdf858057568395\\",\\"dweb:/ipfs/QmZi8kkuF6FKuCBSwjBjutp9wc2TUw74EMeKoEZN84npBi\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/SecretContractImpl.sol\\":{\\"keccak256\\":\\"0x6b77e8e0924ae55ad17e609e23d096f8e54f6f67ca88cc1e9b751d400b2cbe31\\",\\"urls\\":[\\"bzz-raw://cada7f8518df930e2cc3e6e0ae1fefdd6a1ba50dfa53be5bf6e238dae4c5f887\\",\\"dweb:/ipfs/QmexqtRPaFdXsbxdS6RAL83QNvxPZM4kuSgdezrfj5Gy2h\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/TaskImpl.sol\\":{\\"keccak256\\":\\"0x0c3fb1e1a0ff47c4cffb77fe36782d0238ea23b17e3fd5a529ba51a4dd41a1de\\",\\"urls\\":[\\"bzz-raw://0151866020012eabd1577ad53cf6635816f5963848fb18ab539b4c866abbb306\\",\\"dweb:/ipfs/QmV7yiRMHot5NkiWndjWsah3rVieYuSHVn9yCcmhPoJihW\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/UpgradeImpl.sol\\":{\\"keccak256\\":\\"0xe22cb5d41ed126665f72c49ead70f4f1ffe2b65460bb255bcb166f554b886147\\",\\"urls\\":[\\"bzz-raw://2831a8250df5aa15cfb5ae3106ca94e7ca83f66bc5fe84e370f0be0deb6675e0\\",\\"dweb:/ipfs/QmTwthxqG1S4miwCzDR6QXNebwjjVwrCv58EWfFW3u95PU\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/WorkersImpl.sol\\":{\\"keccak256\\":\\"0x6497037ed5bbbeaf6fdc8df99b319a0adb8fbbef8a7bce1f0bddcc33b856dd89\\",\\"urls\\":[\\"bzz-raw://61e2709ec5c7707264d3a626129b719a1f0c54c78f67206a1fe4fcf9bc698c10\\",\\"dweb:/ipfs/QmRR99U8ZQKk9A3rHstZ6rHQWoBqhFGJyv2Q6Dm4QGZdx9\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/interfaces/ERC20.sol\\":{\\"keccak256\\":\\"0x11b6c01cdb9e1ff4ba857a4718ce1171258d84110906ada1c33447c40dba8ad6\\",\\"urls\\":[\\"bzz-raw://33460d163c92ef5a8706dff534be88fcb8f2258f0705a50fb519f2f94cd60cd4\\",\\"dweb:/ipfs/QmSc8CnUbAgybSAPzwLoEhXZVZHapWVdfV8ScXuBBVyvR7\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/interfaces/IExchangeRate.sol\\":{\\"keccak256\\":\\"0x72684d1da1c6ddaadf849beddac8011ff9269d8636c260588b71c326b4cdbf43\\",\\"urls\\":[\\"bzz-raw://de98a9ccd1c5223961221774ceb26e3c7558a430cb1ef9ae45e0aa74562d687b\\",\\"dweb:/ipfs/QmXgdoUC5GL4DpZZqXB7xNrAGh8vRpwbwhuK5DvbXabqEd\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/Base64.sol\\":{\\"keccak256\\":\\"0xbfcd1367551dde54f9ffc9356abc09d046b7ff7844194cc0990ef7447cebb877\\",\\"urls\\":[\\"bzz-raw://f29e15a2635f2b49bb860869c30ae906e2682f3bae11e4d05dfe8f0e07195dfc\\",\\"dweb:/ipfs/Qmdj1PELeNPx5SRWmMofUCNHUrWDwynx7YXLNAUqgNzW6U\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/Bytes.sol\\":{\\"keccak256\\":\\"0x84392879b363a868f71f3870633e82e7fe2af4e196eb60d997bbfcf2d0dc181f\\",\\"urls\\":[\\"bzz-raw://c8ecd1e882532601f67f36250da3e47b21e34bd3bad195a8612446f9ca608f36\\",\\"dweb:/ipfs/QmT3SrvDqVXn82X7je4mhTYZjfwPdvb9dXurgAbbVC7tAe\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/Memory.sol\\":{\\"keccak256\\":\\"0xc1b5d2074bf8c427993f284502618a3db6c5adebb29162d5b72da26260855f62\\",\\"urls\\":[\\"bzz-raw://f01a3d6f19bde637ea68af0096c459409d3ab79424f3239e68698d395a165aff\\",\\"dweb:/ipfs/QmWGq9TmYyQCmSirs5R7AVpPXKh8Rr7mrk2xsoEMdC1TSp\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/SolRsaVerify.sol\\":{\\"keccak256\\":\\"0x2a48149b76c46dde6b8161e0a990e82cd4632de8bb65b9ebabc9e85531f00870\\",\\"urls\\":[\\"bzz-raw://b43df5d21392467e152fab29af01a1d7a8142bdd9d035cd9f7d10dd73f6f5473\\",\\"dweb:/ipfs/QmPbZBMCs9Y7Uv5jDCiSANwnd5NKUFghYKuYUkeZoq6s6P\\"]},\\"openzeppelin-solidity/contracts/GSN/Context.sol\\":{\\"keccak256\\":\\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\\",\\"urls\\":[\\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\\",\\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\\"]},\\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\":{\\"keccak256\\":\\"0xc89ea7e48ba477b1781b24ae963442fff1bb2af33b6178dad679a3fa2f5ab2de\\",\\"urls\\":[\\"bzz-raw://b736ddad8143f8f1cd13c20809d4ebce5f5a8c7725081b0b703294078bd506d1\\",\\"dweb:/ipfs/QmdhTWCXFCuwG9JaPMjwnhkQoDj9su8R7KMPNvD5z9KeWD\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\\",\\"urls\\":[\\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\\",\\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\\"]},\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\":{\\"keccak256\\":\\"0xecd8ab29d9a5771c3964d0cd1788c4a5098a0081b20fb275da850a22b1c59806\\",\\"urls\\":[\\"bzz-raw://696a75bc2c55407ce8251ccc7d19ecb1b7b2be1796a160a6524312babcc7e3d4\\",\\"dweb:/ipfs/QmQViKEp3y99h9uhRssE29TmjBKRnFMaoz3eJZ4eggggg2\\"]}},\\"version\\":1}","bytecode":"0x60806040523480156200001157600080fd5b50604051620051a3380380620051a383398101604081905262000034916200024a565b620000476001600160e01b036200012716565b602680546001600160a01b0319166001600160a01b0392831617908190556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600080546001600160a01b03808a166001600160a01b0319928316179092556001868155858702600255600380548a85169084161790556004805493891693831693909317909255600580549091163017905560228190556023558151620001039060249060208501906200012c565b508051620001199060259060208401906200012c565b5050505050505050620003de565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200016f57805160ff19168380011785556200019f565b828001600101855582156200019f579182015b828111156200019f57825182559160200191906001019062000182565b50620001ad929150620001b1565b5090565b6200012991905b80821115620001ad5760008155600101620001b8565b8051620001db81620003b9565b92915050565b600082601f830112620001f357600080fd5b81516200020a62000204826200034c565b62000325565b915080825260208301602083018583830111156200022757600080fd5b6200023483828462000386565b50505092915050565b8051620001db81620003d3565b600080600080600080600060e0888a0312156200026657600080fd5b6000620002748a8a620001ce565b9750506020620002878a828b01620001ce565b96505060406200029a8a828b01620001ce565b9550506060620002ad8a828b016200023d565b9450506080620002c08a828b016200023d565b93505060a08801516001600160401b03811115620002dd57600080fd5b620002eb8a828b01620001e1565b92505060c08801516001600160401b038111156200030857600080fd5b620003168a828b01620001e1565b91505092959891949750929550565b6040518181016001600160401b03811182821017156200034457600080fd5b604052919050565b60006001600160401b038211156200036357600080fd5b506020601f91909101601f19160190565b60006001600160a01b038216620001db565b60005b83811015620003a357818101518382015260200162000389565b83811115620003b3576000848401525b50505050565b620003c48162000374565b8114620003d057600080fd5b50565b620003c48162000129565b614db580620003ee6000396000f3fe608060405234801561001057600080fd5b506004361061025e5760003560e01c80638ed0573711610146578063c011b1c3116100c3578063d855a57911610087578063d855a57914610552578063df4da4611461055a578063ee6dcef914610562578063f2fde38b14610575578063f74e6e1d14610588578063f9a9b7ae1461059b5761025e565b8063c011b1c3146104e6578063c25d94d214610506578063c652b91914610519578063ca2af5f21461052c578063cbbc061d1461053f5761025e565b8063a3bdae3e1161010a578063a3bdae3e1461048f578063b34e97e8146104b0578063b5c14992146104b8578063b9758c95146104cb578063ba252688146104d35761025e565b80638ed05737146104035780638f32d59b146104235780639836ca3114610438578063a0c399821461045b578063a153ec601461047c5761025e565b80635f25f850116101df5780637624281e116101a35780637624281e14610382578063786cd4d7146103a25780637a743832146103b55780637c438de9146103c85780638da5cb5b146103db5780638e055b8b146103f05761025e565b80635f25f85014610340578063700dd4df1461035557806370266a471461035d578063715018a61461037257806375bbf75b1461037a5761025e565b80633a92d44c116102265780633a92d44c146102dd57806347e7ef24146102f257806350946a9f146103055780635486aa7014610318578063550baa2f1461032b5761025e565b806316f9a2a4146102635780631d40ff0b1461028d5780631f3c99c3146102ad5780632e1a7d4d146102b75780633480943b146102ca575b600080fd5b610276610271366004613850565b6105ae565b6040516102849291906146b3565b60405180910390f35b6102a061029b366004613ad4565b610648565b60405161028491906146a2565b6102b56106e4565b005b6102b56102c5366004613850565b610937565b6102b56102d8366004613a2f565b610c6f565b6102e5610caa565b6040516102849190614708565b6102b561030036600461375b565b610d41565b6102b5610313366004613b76565b610f86565b6102b5610326366004613ba8565b611204565b6103336114c6565b60405161028491906146d8565b610348611520565b6040516102849190614b61565b6102e5611526565b610365611587565b60405161028491906146e9565b6102b56116a1565b61034861170f565b610395610390366004613850565b61179e565b604051610284919061482e565b6102b56103b03660046136e0565b611863565b6102b56103c3366004613a2f565b61194b565b6103486103d6366004613648565b611982565b6103e3611a3b565b6040516102849190614654565b6103336103fe366004613ad4565b611a4a565b610416610411366004613850565b611add565b6040516102849190614b1f565b61042b611c1d565b60405161028491906146fa565b61044b610446366004613850565b611c43565b6040516102849493929190614b6f565b61046e610469366004613622565b611ce6565b604051610284929190614682565b6102b561048a3660046138fa565b611f29565b6104a261049d366004613622565b6121e8565b604051610284929190614662565b6102b5612464565b6103486104c6366004613a63565b6126c4565b6103e3612700565b6102b56104e1366004613972565b61270f565b6104f96104f4366004613622565b612779565b6040516102849190614b30565b6102b5610514366004613ba8565b61292a565b6102b56105273660046139c7565b612bb4565b6102b561053a36600461386e565b612c44565b61034861054d366004613850565b612ecc565b6103e3612f58565b610348612f74565b6102b5610570366004613850565b612f7a565b6102b5610583366004613622565b612ff5565b6102b5610596366004613622565b613025565b6103486105a9366004613622565b6130e0565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b81526004016105eb92919061490f565b60006040518083038186803b15801561060357600080fd5b505af4158015610617573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261063f91908101906137bf565b91509150915091565b604051635deadfbd60e11b815260609073__WorkersImpl___________________________9063bbd5bf7a906106879060009087908790600401614a6d565b60006040518083038186803b15801561069f57600080fd5b505af41580156106b3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106db919081019061378b565b90505b92915050565b336106ed613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561073557fe5b600281111561074057fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107dd5780601f106107b2576101008083540402835291602001916107dd565b820191906000526020600020905b8154815290600101906020018083116107c057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561088857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561085657fe5b600381111561086157fe5b81526020016001820154815260200160028201548152505081526020019060010190610815565b50505091525090915060019050816020015160028111156108a557fe5b146108cb5760405162461bcd60e51b81526004016108c2906147ce565b60405180910390fd5b6040516349e44f4960e01b815273__WorkersImpl___________________________906349e44f49906109039060009060040161483f565b60006040518083038186803b15801561091b57600080fd5b505af415801561092f573d6000803e3d6000fd5b505050505050565b33610940613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561098857fe5b600281111561099357fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a305780601f10610a0557610100808354040283529160200191610a30565b820191906000526020600020905b815481529060010190602001808311610a1357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610adb57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610aa957fe5b6003811115610ab457fe5b81526020016001820154815260200160028201548152505081526020019060010190610a68565b5050509152509091506002905081602001516002811115610af857fe5b14610b155760405162461bcd60e51b81526004016108c29061481e565b610b1d6131b1565b6040516328de336160e21b815273__WorkersImpl___________________________9063a378cd8490610b569085904390600401614b41565b60606040518083038186803b158015610b6e57600080fd5b505af4158015610b82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ba69190810190613a98565b9050600281516003811115610bb757fe5b14610bd45760405162461bcd60e51b81526004016108c29061476e565b8060200151610be243612ecc565b11610bff5760405162461bcd60e51b81526004016108c2906147be565b604051632fdb7d1960e21b815273__WorkersImpl___________________________9063bf6df46490610c3990600090889060040161490f565b60006040518083038186803b158015610c5157600080fd5b505af4158015610c65573d6000803e3d6000fd5b5050505050505050565b610c77611c1d565b610c935760405162461bcd60e51b81526004016108c2906147de565b8051610ca69060259060208401906131d3565b5050565b60258054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610d365780601f10610d0b57610100808354040283529160200191610d36565b820191906000526020600020905b815481529060010190602001808311610d1957829003601f168201915b505050505090505b90565b6005546001600160a01b03163014610d6b5760405162461bcd60e51b81526004016108c29061478e565b81610d74613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610dbc57fe5b6002811115610dc757fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e645780601f10610e3957610100808354040283529160200191610e64565b820191906000526020600020905b815481529060010190602001808311610e4757829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610f0f57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610edd57fe5b6003811115610ee857fe5b81526020016001820154815260200160028201548152505081526020019060010190610e9c565b5050509152509091506000905081602001516002811115610f2c57fe5b1415610f4a5760405162461bcd60e51b81526004016108c2906147ee565b604051630e80483160e21b815273__WorkersImpl___________________________90633a0120c490610c3990600090889088906004016148e7565b6005546001600160a01b03163014610fb05760405162461bcd60e51b81526004016108c29061478e565b33610fb9613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561100157fe5b600281111561100c57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110a95780601f1061107e576101008083540402835291602001916110a9565b820191906000526020600020905b81548152906001019060200180831161108c57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561115457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561112257fe5b600381111561112d57fe5b815260200160018201548152602001600282015481525050815260200190600101906110e1565b505050915250909150600090508160200151600281111561117157fe5b141561118f5760405162461bcd60e51b81526004016108c2906147ee565b60405163184e876360e31b815273__PrincipalImpl_________________________9063c2743b18906111cd90600090899089908990600401614a88565b60006040518083038186803b1580156111e557600080fd5b505af41580156111f9573d6000803e3d6000fd5b505050505050505050565b6005546001600160a01b0316301461122e5760405162461bcd60e51b81526004016108c29061478e565b33611237613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561127f57fe5b600281111561128a57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113275780601f106112fc57610100808354040283529160200191611327565b820191906000526020600020905b81548152906001019060200180831161130a57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156113d257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156113a057fe5b60038111156113ab57fe5b8152602001600182015481526020016002820154815250508152602001906001019061135f565b50505091525090915060019050816020015160028111156113ef57fe5b1461140c5760405162461bcd60e51b81526004016108c2906147ce565b8451600081815260208052604081206004015460ff16600181111561142d57fe5b1461144a5760405162461bcd60e51b81526004016108c2906147fe565b604051632dfb660d60e21b815273__TaskImpl______________________________9063b7ed98349061148c906000908c908c908c908c908c90600401614ac2565b60006040518083038186803b1580156114a457600080fd5b505af41580156114b8573d6000803e3d6000fd5b505050505050505050505050565b60606000601c01805480602002602001604051908101604052809291908181526020018280548015610d3657602002820191906000526020600020905b815481526020019060010190808311611503575050505050905090565b60025490565b60248054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610d365780601f10610d0b57610100808354040283529160200191610d36565b61158f613251565b6040805160a08101909152600760056000835b8282101561169857838260040201604051806080016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561161e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611600575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561167657602002820191906000526020600020905b815481526020019060010190808311611662575b50505050508152602001600382015481525050815260200190600101906115a2565b50505050905090565b6116a9611c1d565b6116c55760405162461bcd60e51b81526004016108c2906147de565b6026546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3602680546001600160a01b0319169055565b6040516302b519c360e11b815260009073__SecretContractImpl____________________9063056a33869061174990849060040161483f565b60206040518083038186803b15801561176157600080fd5b505af4158015611775573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117999190810190613ab6565b905090565b6117a661327e565b60008281526020808052604091829020825160a08101845281546001600160a01b03168152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561182c57602002820191906000526020600020905b815481526020019060010190808311611818575b5050509183525050600482015460209091019060ff16600181111561184d57fe5b600181111561185857fe5b90525090505b919050565b6005546001600160a01b0316301461188d5760405162461bcd60e51b81526004016108c29061478e565b8260005b601b5481101561190c57816001600160a01b03166000601d01600080601b0184815481106118bb57fe5b60009182526020808320909101546001600160a01b0390811684529083019390935260409091019020541614156119045760405162461bcd60e51b81526004016108c29061474e565b600101611891565b5060405163063e88f160e51b815273__WorkersImpl___________________________9063c7d11e2090610c399060009088908890889060040161489c565b611953611c1d565b61196f5760405162461bcd60e51b81526004016108c2906147de565b8051610ca69060249060208401906131d3565b6005546000906001600160a01b031633146119af5760405162461bcd60e51b81526004016108c29061480e565b60405163d3c0af8760e01b815273__UpgradeImpl___________________________9063d3c0af87906119eb906000908790879060040161486f565b60206040518083038186803b158015611a0357600080fd5b505af4158015611a17573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106db9190810190613ab6565b6026546001600160a01b031690565b60405163e5a2600960e01b815260609073__SecretContractImpl____________________9063e5a2600990611a899060009087908790600401614a6d565b60006040518083038186803b158015611aa157600080fd5b505af4158015611ab5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106db919081019061381c565b611ae56132a9565b6000828152601e602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101549282019290925260038201546001600160401b03808216606084015268010000000000000000909104166080820152600482015460a082015260058083015491929160c084019160ff90911690811115611b7457fe5b6005811115611b7f57fe5b815260068201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611c0d5780601f10611be257610100808354040283529160200191611c0d565b820191906000526020600020905b815481529060010190602001808311611bf057829003601f168201915b5050505050815250509050919050565b6026546000906001600160a01b0316611c346130fb565b6001600160a01b031614905090565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611c8392919061490f565b60006040518083038186803b158015611c9b57600080fd5b505af4158015611caf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611cd79190810190613af3565b93509350935093509193509193565b6000611cf0613181565b6000611cfa613181565b60005b601b54811015611f1e57601b8054601d9160009184908110611d1b57fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b909104166002811115611d7157fe5b6002811115611d7c57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e195780601f10611dee57610100808354040283529160200191611e19565b820191906000526020600020905b815481529060010190602001808311611dfc57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611ec457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611e9257fe5b6003811115611e9d57fe5b81526020016001820154815260200160028201548152505081526020019060010190611e51565b50505050815250509150856001600160a01b031682600001516001600160a01b03161415611f1657601b805482908110611efa57fe5b6000918252602090912001546001600160a01b03169250611f1e565b600101611cfd565b509092509050915091565b6005546001600160a01b03163014611f535760405162461bcd60e51b81526004016108c29061478e565b33611f5c613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115611fa457fe5b6002811115611faf57fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561204c5780601f106120215761010080835404028352916020019161204c565b820191906000526020600020905b81548152906001019060200180831161202f57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156120f757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156120c557fe5b60038111156120d057fe5b81526020016001820154815260200160028201548152505081526020019060010190612084565b505050915250909150600190508160200151600281111561211457fe5b146121315760405162461bcd60e51b81526004016108c2906147ce565b8560008082815260208052604090206004015460ff16600181111561215257fe5b1461216f5760405162461bcd60e51b81526004016108c2906147fe565b6040516301c7aeeb60e21b815273__TaskImpl______________________________9063071ebbac906121af906000908b908b908b908b9060040161498a565b60006040518083038186803b1580156121c757600080fd5b505af41580156121db573d6000803e3d6000fd5b5050505050505050505050565b60006060826121f5613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561223d57fe5b600281111561224857fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122e55780601f106122ba576101008083540402835291602001916122e5565b820191906000526020600020905b8154815290600101906020018083116122c857829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561239057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561235e57fe5b600381111561236957fe5b8152602001600182015481526020016002820154815250508152602001906001019061231d565b50505091525090915060009050816020015160028111156123ad57fe5b14156123cb5760405162461bcd60e51b81526004016108c2906147ee565b604051632f68f03160e01b815273__WorkersImpl___________________________90632f68f0319061240590600090899060040161484d565b60006040518083038186803b15801561241d57600080fd5b505af4158015612431573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124599190810190613699565b935093505050915091565b3361246d613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156124b557fe5b60028111156124c057fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561255d5780601f106125325761010080835404028352916020019161255d565b820191906000526020600020905b81548152906001019060200180831161254057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561260857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156125d657fe5b60038111156125e157fe5b81526020016001820154815260200160028201548152505081526020019060010190612595565b5050505081525050905061261b43612ecc565b6126375760405162461bcd60e51b81526004016108c2906147ae565b60028160200151600281111561264957fe5b146126665760405162461bcd60e51b81526004016108c29061481e565b6022546060820151101561268c5760405162461bcd60e51b81526004016108c29061473e565b6040516318a8dc7160e11b815273__WorkersImpl___________________________90633151b8e2906109039060009060040161483f565b6040516312c8c46d60e31b815260009073__WorkersImpl___________________________906396462368906119eb9086908690600401614719565b6005546001600160a01b031690565b6005546001600160a01b031630146127395760405162461bcd60e51b81526004016108c29061478e565b604051638c91056d60e01b815273__TaskImpl______________________________90638c91056d90610c399060009088908890889088906004016149dc565b612781613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156127c957fe5b60028111156127d457fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128715780601f1061284657610100808354040283529160200191612871565b820191906000526020600020905b81548152906001019060200180831161285457829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561291c57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156128ea57fe5b60038111156128f557fe5b815260200160018201548152602001600282015481525050815260200190600101906128a9565b505050915250909392505050565b6005546001600160a01b031630146129545760405162461bcd60e51b81526004016108c29061478e565b3361295d613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156129a557fe5b60028111156129b057fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a4d5780601f10612a2257610100808354040283529160200191612a4d565b820191906000526020600020905b815481529060010190602001808311612a3057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612af857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612ac657fe5b6003811115612ad157fe5b81526020016001820154815260200160028201548152505081526020019060010190612a85565b5050509152509091506001905081602001516002811115612b1557fe5b14612b325760405162461bcd60e51b81526004016108c2906147ce565b8451600081815260208052604090206004015460019060ff1681811115612b5557fe5b14612b725760405162461bcd60e51b81526004016108c29061477e565b60405163b1c57e7b60e01b815273__TaskImpl______________________________9063b1c57e7b9061148c906000908c908c908c908c908c90600401614ac2565b612bbc611c1d565b612bd85760405162461bcd60e51b81526004016108c2906147de565b6005546001600160a01b03163014612c025760405162461bcd60e51b81526004016108c29061478e565b6040516366e13f4360e01b815273__TaskImpl______________________________906366e13f43906111cd9060009089908990899089908990600401614a1e565b6005546001600160a01b03163014612c6e5760405162461bcd60e51b81526004016108c29061478e565b33612c77613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115612cbf57fe5b6002811115612cca57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d675780601f10612d3c57610100808354040283529160200191612d67565b820191906000526020600020905b815481529060010190602001808311612d4a57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612e1257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612de057fe5b6003811115612deb57fe5b81526020016001820154815260200160028201548152505081526020019060010190612d9f565b5050509152509091506001905081602001516002811115612e2f57fe5b14612e4c5760405162461bcd60e51b81526004016108c2906147ce565b866001600082815260208052604090206004015460ff166001811115612e6e57fe5b14612e8b5760405162461bcd60e51b81526004016108c29061477e565b6040516289b28160e61b815273__TaskImpl______________________________9063226ca0409061148c906000908c908c908c908c908c9060040161492a565b6040516304d5c11360e31b815260009073__WorkersImpl___________________________906326ae089890612f08908490869060040161490f565b60206040518083038186803b158015612f2057600080fd5b505af4158015612f34573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106de9190810190613ab6565b336000908152601d60205260409020546001600160a01b031690565b60015490565b8060016000828152601e6020526040902060059081015460ff1690811115612f9e57fe5b14612fbb5760405162461bcd60e51b81526004016108c29061479e565b604051631c9a715b60e01b815273__TaskImpl______________________________90631c9a715b9061090390600090869060040161490f565b612ffd611c1d565b6130195760405162461bcd60e51b81526004016108c2906147de565b613022816130ff565b50565b61302d611c1d565b6130495760405162461bcd60e51b81526004016108c2906147de565b6005546001600160a01b031630146130735760405162461bcd60e51b81526004016108c29061478e565b6040516368fac41b60e01b815273__UpgradeImpl___________________________906368fac41b906130ad90600090859060040161484d565b60006040518083038186803b1580156130c557600080fd5b505af41580156130d9573d6000803e3d6000fd5b5050505050565b6001600160a01b031660009081526021602052604090205490565b3390565b6001600160a01b0381166131255760405162461bcd60e51b81526004016108c29061475e565b6026546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3602680546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061321457805160ff1916838001178555613241565b82800160010185558215613241579182015b82811115613241578251825591602001919060010190613226565b5061324d9291506132ee565b5090565b6040518060a001604052806005905b613268613308565b8152602001906001900390816132605790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b610d3e91905b8082111561324d57600081556001016132f4565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b80356106de81614d3f565b80516106de81614d3f565b600082601f83011261335757600080fd5b815161336a61336582614bd6565b614bb0565b9150818183526020840193506020810190508385602084028201111561338f57600080fd5b60005b838110156133bb57816133a5888261333b565b8452506020928301929190910190600101613392565b5050505092915050565b600082601f8301126133d657600080fd5b60046133e461336582614bf6565b915081838560208402820111156133fa57600080fd5b60005b838110156133bb57816134108882613506565b84525060209283019291909101906001016133fd565b600082601f83011261343757600080fd5b815161344561336582614bd6565b9150818183526020840193506020810190508385602084028201111561346a57600080fd5b60005b838110156133bb57816134808882613511565b845250602092830192919091019060010161346d565b600082601f8301126134a757600080fd5b81516134b561336582614bd6565b915081818352602084019350602081019050838560208402820111156134da57600080fd5b60005b838110156133bb57816134f08882613511565b84525060209283019291909101906001016134dd565b80356106de81614d53565b80516106de81614d53565b600082601f83011261352d57600080fd5b813561353b61336582614c13565b9150808252602083016020830185838301111561355757600080fd5b613562838284614cd5565b50505092915050565b600082601f83011261357c57600080fd5b815161358a61336582614c13565b915080825260208301602083018583830111156135a657600080fd5b613562838284614ce1565b80516106de81614d5c565b6000606082840312156135ce57600080fd5b6135d86060614bb0565b905060006135e684846135b1565b82525060206135f784848301613511565b602083015250604061360b84828501613511565b60408301525092915050565b80356106de81614d69565b60006020828403121561363457600080fd5b60006136408484613330565b949350505050565b6000806040838503121561365b57600080fd5b60006136678585613330565b92505060208301356001600160401b0381111561368357600080fd5b61368f8582860161351c565b9150509250929050565b600080604083850312156136ac57600080fd5b60006136b8858561333b565b92505060208301516001600160401b038111156136d457600080fd5b61368f8582860161356b565b6000806000606084860312156136f557600080fd5b60006137018686613330565b93505060208401356001600160401b0381111561371d57600080fd5b6137298682870161351c565b92505060408401356001600160401b0381111561374557600080fd5b6137518682870161351c565b9150509250925092565b6000806040838503121561376e57600080fd5b600061377a8585613330565b925050602061368f85828601613506565b60006020828403121561379d57600080fd5b81516001600160401b038111156137b357600080fd5b61364084828501613346565b600080604083850312156137d257600080fd5b82516001600160401b038111156137e857600080fd5b6137f485828601613346565b92505060208301516001600160401b0381111561381057600080fd5b61368f85828601613496565b60006020828403121561382e57600080fd5b81516001600160401b0381111561384457600080fd5b61364084828501613426565b60006020828403121561386257600080fd5b60006136408484613506565b600080600080600060a0868803121561388657600080fd5b60006138928888613506565b95505060206138a388828901613506565b94505060406138b488828901613506565b93505060606138c588828901613617565b92505060808601356001600160401b038111156138e157600080fd5b6138ed8882890161351c565b9150509295509295909350565b6000806000806080858703121561391057600080fd5b600061391c8787613506565b945050602061392d87828801613506565b935050604061393e87828801613617565b92505060608501356001600160401b0381111561395a57600080fd5b6139668782880161351c565b91505092959194509250565b6000806000806080858703121561398857600080fd5b60006139948787613506565b94505060206139a587828801613617565b93505060406139b687828801613617565b925050606061396687828801613506565b600080600080600060a086880312156139df57600080fd5b60006139eb8888613506565b95505060206139fc88828901613617565b9450506040613a0d88828901613617565b9350506060613a1e88828901613506565b92505060806138ed88828901613506565b600060208284031215613a4157600080fd5b81356001600160401b03811115613a5757600080fd5b6136408482850161351c565b60008060408385031215613a7657600080fd5b82356001600160401b03811115613a8c57600080fd5b6136678582860161351c565b600060608284031215613aaa57600080fd5b600061364084846135bc565b600060208284031215613ac857600080fd5b60006136408484613511565b60008060408385031215613ae757600080fd5b600061377a8585613506565b60008060008060808587031215613b0957600080fd5b6000613b158787613511565b9450506020613b2687828801613511565b93505060408501516001600160401b03811115613b4257600080fd5b613b4e87828801613346565b92505060608501516001600160401b03811115613b6a57600080fd5b61396687828801613496565b600080600060608486031215613b8b57600080fd5b6000613b978686613506565b935050602061372986828701613506565b60008060008060006101008688031215613bc157600080fd5b6000613bcd8888613617565b9550506020613bde88828901613330565b9450506040613bef888289016133c5565b93505060c08601356001600160401b03811115613c0b57600080fd5b613c178882890161351c565b92505060e08601356001600160401b038111156138e157600080fd5b6000613c3f8383613c73565b505060200190565b6000613c3f8383613fc0565b6000613c5f83836144db565b505060600190565b60006106db83836145f0565b613c7c81614c59565b82525050565b6000613c8d82614c40565b613c978185614c50565b9350613ca283614c3a565b8060005b83811015613cd0578151613cba8882613c33565b9750613cc583614c3a565b925050600101613ca6565b509495945050505050565b6000613ce682614c40565b613cf08185614c50565b9350613cfb83614c3a565b8060005b83811015613cd0578151613d138882613c33565b9750613d1e83614c3a565b925050600101613cff565b613d3281614c44565b613d3c818461185e565b9250613d4782610d3e565b8060005b8381101561092f578151613d5f8782613c47565b9650613d6a83614c3a565b925050600101613d4b565b6000613d8082614c40565b613d8a8185614c50565b9350613d9583614c3a565b8060005b83811015613cd0578151613dad8882613c47565b9750613db883614c3a565b925050600101613d99565b6000613dce82614c40565b613dd88185614c50565b9350613de383614c3a565b8060005b83811015613cd0578151613dfb8882613c47565b9750613e0683614c3a565b925050600101613de7565b6000613e1c82614c40565b613e268185614c50565b9350613e3183614c3a565b8060005b83811015613cd0578151613e498882613c53565b9750613e5483614c3a565b925050600101613e35565b6000613e6a82614c40565b613e748185614c50565b9350613e7f83614c3a565b8060005b83811015613cd0578151613e978882613c53565b9750613ea283614c3a565b925050600101613e83565b6000613eb882614c4a565b613ec2818561185e565b935083602082028501613ed485610d3e565b8060005b85811015613f0e5784840389528151613ef18582613c67565b9450613efc83614c3a565b60209a909a0199925050600101613ed8565b5091979650505050505050565b6000613f2682614c40565b613f308185614c50565b9350613f3b83614c3a565b8060005b83811015613cd0578151613f538882613c47565b9750613f5e83614c3a565b925050600101613f3f565b6000613f7482614c40565b613f7e8185614c50565b9350613f8983614c3a565b8060005b83811015613cd0578151613fa18882613c47565b9750613fac83614c3a565b925050600101613f8d565b613c7c81614c64565b613c7c81610d3e565b6000613fd482614c40565b613fde8185614c50565b9350613fee818560208601614ce1565b613ff781614d0d565b9093019392505050565b613c7c81614ca9565b613c7c81614cb4565b613c7c81614cbf565b613c7c81614cca565b6000614032602283614c50565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152611b9d60f21b602082015260400192915050565b6000614076601883614c50565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b60006140af602683614c50565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b60006140f7602783614c50565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152667574207479706560c81b602082015260400192915050565b6000614140601c83614c50565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b6000614179601b83614c50565b7f4e6f74207570646174656420456e69676d6120636f6e74726163740000000000815260200192915050565b60006141b2601383614c50565b725461736b206973206e6f742077616974696e6760681b815260200192915050565b60006141e1602783614c50565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152661a585b1a5e995960ca1b602082015260400192915050565b600061422a602e83614c50565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381526d081b1bd9c81bdd5d08195d995b9d60921b602082015260400192915050565b600061427a601483614c50565b732bb7b935b2b9103737ba103637b3b3b2b21034b760611b815260200192915050565b60006142aa602083614c50565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b60006142e3601383614c50565b722ab73932b3b4b9ba32b932b2103bb7b935b2b960691b815260200192915050565b6000614312602083614c50565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b600061434b602083614c50565b7f4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374815260200192915050565b6000614384602783614c50565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f6781526619d959081bdd5d60ca1b602082015260400192915050565b805160009060a08401906143d48582613c73565b5060208301516143e76020860182613fc0565b5060408301516143fa6040860182613fc0565b50606083015184820360608601526144128282613dc3565b91505060808301516144276080860182614001565b509392505050565b9052565b80516000906101008401906144488582613c73565b50602083015161445b6020860182613fc0565b50604083015161446e6040860182613fc0565b506060830151614481606086018261464b565b506080830151614494608086018261464b565b5060a08301516144a760a0860182613fc0565b5060c08301516144ba60c086018261400a565b5060e083015184820360e08601526144d28282613fc9565b95945050505050565b805160608301906144ec8482614013565b5060208201516144ff6020850182613fc0565b5060408201516145126040850182613fc0565b50505050565b805160009060a084019061452c8582613c73565b50602083015161453f602086018261401c565b50604083015184820360408601526145578282613fc9565b915050606083015161456c6060860182613fc0565b50608083015184820360808601526144d28282613e11565b805160009060a08401906145988582613c73565b5060208301516145ab602086018261401c565b50604083015184820360408601526145c38282613fc9565b91505060608301516145d86060860182613fc0565b50608083015184820360808601526144d28282613e5f565b805160009060808401906146048582613fc0565b506020830151848203602086015261461c8282613cdb565b915050604083015184820360408601526146368282613f69565b91505060608301516144276060860182613fc0565b613c7c81614c9d565b602081016106de8284613c73565b604081016146708285613c73565b81810360208301526136408184613fc9565b604081016146908285613c73565b81810360208301526136408184614518565b602080825281016106db8184613c82565b604080825281016146c48185613c82565b905081810360208301526136408184613f1b565b602080825281016106db8184613d75565b602080825281016106db8184613ead565b602081016106de8284613fb7565b602080825281016106db8184613fc9565b6040808252810161472a8185613fc9565b905081810360208301526136408184613fc9565b602080825281016106de81614025565b602080825281016106de81614069565b602080825281016106de816140a2565b602080825281016106de816140ea565b602080825281016106de81614133565b602080825281016106de8161416c565b602080825281016106de816141a5565b602080825281016106de816141d4565b602080825281016106de8161421d565b602080825281016106de8161426d565b602080825281016106de8161429d565b602080825281016106de816142d6565b602080825281016106de81614305565b602080825281016106de8161433e565b602080825281016106de81614377565b602080825281016106db81846143c0565b602081016106de828461442f565b6040810161485b828561442f565b6148686020830184613c73565b9392505050565b6060810161487d828661442f565b61488a6020830185613c73565b81810360408301526144d28184613fc9565b608081016148aa828761442f565b6148b76020830186613c73565b81810360408301526148c98185613fc9565b905081810360608301526148dd8184613fc9565b9695505050505050565b606081016148f5828661442f565b6149026020830185613c73565b6136406040830184613fc0565b6040810161491d828561442f565b6148686020830184613fc0565b60c08101614938828961442f565b6149456020830188613fc0565b6149526040830187613fc0565b61495f6060830186613fc0565b61496c608083018561464b565b81810360a083015261497e8184613fc9565b98975050505050505050565b60a08101614998828861442f565b6149a56020830187613fc0565b6149b26040830186613fc0565b6149bf606083018561464b565b81810360808301526149d18184613fc9565b979650505050505050565b60a081016149ea828861442f565b6149f76020830187613fc0565b614a04604083018661464b565b614a11606083018561464b565b6148dd6080830184613fc0565b60c08101614a2c828961442f565b614a396020830188613fc0565b614a46604083018761464b565b614a53606083018661464b565b614a606080830185613fc0565b6149d160a0830184613fc0565b60608101614a7b828661442f565b6149026020830185613fc0565b60808101614a96828761442f565b614aa36020830186613fc0565b614ab06040830185613fc0565b81810360608301526148dd8184613fc9565b6101208101614ad1828961442f565b614ade602083018861464b565b614aeb6040830187613c73565b614af86060830186613d29565b81810360e0830152614b0a8185613fc9565b905081810361010083015261497e8184613fc9565b602080825281016106db8184614433565b602080825281016106db8184614518565b60408082528101614b528185614584565b90506148686020830184613fc0565b602081016106de8284613fc0565b60808101614b7d8287613fc0565b614b8a6020830186613fc0565b8181036040830152614b9c8185613c82565b905081810360608301526148dd8184613f1b565b6040518181016001600160401b0381118282101715614bce57600080fd5b604052919050565b60006001600160401b03821115614bec57600080fd5b5060209081020190565b60006001600160401b03821115614c0c57600080fd5b5060200290565b60006001600160401b03821115614c2957600080fd5b506020601f91909101601f19160190565b60200190565b5190565b50600490565b50600590565b90815260200190565b60006106de82614c91565b151590565b8061185e81614d17565b8061185e81614d21565b8061185e81614d2b565b8061185e81614d35565b6001600160a01b031690565b6001600160401b031690565b60006106de82614c69565b60006106de82614c73565b60006106de82614c7d565b60006106de82614c87565b82818337506000910152565b60005b83811015614cfc578181015183820152602001614ce4565b838111156145125750506000910152565b601f01601f191690565b6002811061302257fe5b6006811061302257fe5b6004811061302257fe5b6003811061302257fe5b614d4881614c59565b811461302257600080fd5b614d4881610d3e565b6004811061302257600080fd5b614d4881614c9d56fea365627a7a72315820a20f98c99cad66c501e810ccdd1d2fd07af32dce7939492187c80d906dab39b76c6578706572696d656e74616cf564736f6c634300050c0040","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061025e5760003560e01c80638ed0573711610146578063c011b1c3116100c3578063d855a57911610087578063d855a57914610552578063df4da4611461055a578063ee6dcef914610562578063f2fde38b14610575578063f74e6e1d14610588578063f9a9b7ae1461059b5761025e565b8063c011b1c3146104e6578063c25d94d214610506578063c652b91914610519578063ca2af5f21461052c578063cbbc061d1461053f5761025e565b8063a3bdae3e1161010a578063a3bdae3e1461048f578063b34e97e8146104b0578063b5c14992146104b8578063b9758c95146104cb578063ba252688146104d35761025e565b80638ed05737146104035780638f32d59b146104235780639836ca3114610438578063a0c399821461045b578063a153ec601461047c5761025e565b80635f25f850116101df5780637624281e116101a35780637624281e14610382578063786cd4d7146103a25780637a743832146103b55780637c438de9146103c85780638da5cb5b146103db5780638e055b8b146103f05761025e565b80635f25f85014610340578063700dd4df1461035557806370266a471461035d578063715018a61461037257806375bbf75b1461037a5761025e565b80633a92d44c116102265780633a92d44c146102dd57806347e7ef24146102f257806350946a9f146103055780635486aa7014610318578063550baa2f1461032b5761025e565b806316f9a2a4146102635780631d40ff0b1461028d5780631f3c99c3146102ad5780632e1a7d4d146102b75780633480943b146102ca575b600080fd5b610276610271366004613850565b6105ae565b6040516102849291906146b3565b60405180910390f35b6102a061029b366004613ad4565b610648565b60405161028491906146a2565b6102b56106e4565b005b6102b56102c5366004613850565b610937565b6102b56102d8366004613a2f565b610c6f565b6102e5610caa565b6040516102849190614708565b6102b561030036600461375b565b610d41565b6102b5610313366004613b76565b610f86565b6102b5610326366004613ba8565b611204565b6103336114c6565b60405161028491906146d8565b610348611520565b6040516102849190614b61565b6102e5611526565b610365611587565b60405161028491906146e9565b6102b56116a1565b61034861170f565b610395610390366004613850565b61179e565b604051610284919061482e565b6102b56103b03660046136e0565b611863565b6102b56103c3366004613a2f565b61194b565b6103486103d6366004613648565b611982565b6103e3611a3b565b6040516102849190614654565b6103336103fe366004613ad4565b611a4a565b610416610411366004613850565b611add565b6040516102849190614b1f565b61042b611c1d565b60405161028491906146fa565b61044b610446366004613850565b611c43565b6040516102849493929190614b6f565b61046e610469366004613622565b611ce6565b604051610284929190614682565b6102b561048a3660046138fa565b611f29565b6104a261049d366004613622565b6121e8565b604051610284929190614662565b6102b5612464565b6103486104c6366004613a63565b6126c4565b6103e3612700565b6102b56104e1366004613972565b61270f565b6104f96104f4366004613622565b612779565b6040516102849190614b30565b6102b5610514366004613ba8565b61292a565b6102b56105273660046139c7565b612bb4565b6102b561053a36600461386e565b612c44565b61034861054d366004613850565b612ecc565b6103e3612f58565b610348612f74565b6102b5610570366004613850565b612f7a565b6102b5610583366004613622565b612ff5565b6102b5610596366004613622565b613025565b6103486105a9366004613622565b6130e0565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b81526004016105eb92919061490f565b60006040518083038186803b15801561060357600080fd5b505af4158015610617573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261063f91908101906137bf565b91509150915091565b604051635deadfbd60e11b815260609073__WorkersImpl___________________________9063bbd5bf7a906106879060009087908790600401614a6d565b60006040518083038186803b15801561069f57600080fd5b505af41580156106b3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106db919081019061378b565b90505b92915050565b336106ed613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561073557fe5b600281111561074057fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107dd5780601f106107b2576101008083540402835291602001916107dd565b820191906000526020600020905b8154815290600101906020018083116107c057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561088857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561085657fe5b600381111561086157fe5b81526020016001820154815260200160028201548152505081526020019060010190610815565b50505091525090915060019050816020015160028111156108a557fe5b146108cb5760405162461bcd60e51b81526004016108c2906147ce565b60405180910390fd5b6040516349e44f4960e01b815273__WorkersImpl___________________________906349e44f49906109039060009060040161483f565b60006040518083038186803b15801561091b57600080fd5b505af415801561092f573d6000803e3d6000fd5b505050505050565b33610940613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561098857fe5b600281111561099357fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a305780601f10610a0557610100808354040283529160200191610a30565b820191906000526020600020905b815481529060010190602001808311610a1357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610adb57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610aa957fe5b6003811115610ab457fe5b81526020016001820154815260200160028201548152505081526020019060010190610a68565b5050509152509091506002905081602001516002811115610af857fe5b14610b155760405162461bcd60e51b81526004016108c29061481e565b610b1d6131b1565b6040516328de336160e21b815273__WorkersImpl___________________________9063a378cd8490610b569085904390600401614b41565b60606040518083038186803b158015610b6e57600080fd5b505af4158015610b82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ba69190810190613a98565b9050600281516003811115610bb757fe5b14610bd45760405162461bcd60e51b81526004016108c29061476e565b8060200151610be243612ecc565b11610bff5760405162461bcd60e51b81526004016108c2906147be565b604051632fdb7d1960e21b815273__WorkersImpl___________________________9063bf6df46490610c3990600090889060040161490f565b60006040518083038186803b158015610c5157600080fd5b505af4158015610c65573d6000803e3d6000fd5b5050505050505050565b610c77611c1d565b610c935760405162461bcd60e51b81526004016108c2906147de565b8051610ca69060259060208401906131d3565b5050565b60258054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610d365780601f10610d0b57610100808354040283529160200191610d36565b820191906000526020600020905b815481529060010190602001808311610d1957829003601f168201915b505050505090505b90565b6005546001600160a01b03163014610d6b5760405162461bcd60e51b81526004016108c29061478e565b81610d74613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610dbc57fe5b6002811115610dc757fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e645780601f10610e3957610100808354040283529160200191610e64565b820191906000526020600020905b815481529060010190602001808311610e4757829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610f0f57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610edd57fe5b6003811115610ee857fe5b81526020016001820154815260200160028201548152505081526020019060010190610e9c565b5050509152509091506000905081602001516002811115610f2c57fe5b1415610f4a5760405162461bcd60e51b81526004016108c2906147ee565b604051630e80483160e21b815273__WorkersImpl___________________________90633a0120c490610c3990600090889088906004016148e7565b6005546001600160a01b03163014610fb05760405162461bcd60e51b81526004016108c29061478e565b33610fb9613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561100157fe5b600281111561100c57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110a95780601f1061107e576101008083540402835291602001916110a9565b820191906000526020600020905b81548152906001019060200180831161108c57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561115457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561112257fe5b600381111561112d57fe5b815260200160018201548152602001600282015481525050815260200190600101906110e1565b505050915250909150600090508160200151600281111561117157fe5b141561118f5760405162461bcd60e51b81526004016108c2906147ee565b60405163184e876360e31b815273__PrincipalImpl_________________________9063c2743b18906111cd90600090899089908990600401614a88565b60006040518083038186803b1580156111e557600080fd5b505af41580156111f9573d6000803e3d6000fd5b505050505050505050565b6005546001600160a01b0316301461122e5760405162461bcd60e51b81526004016108c29061478e565b33611237613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561127f57fe5b600281111561128a57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113275780601f106112fc57610100808354040283529160200191611327565b820191906000526020600020905b81548152906001019060200180831161130a57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156113d257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156113a057fe5b60038111156113ab57fe5b8152602001600182015481526020016002820154815250508152602001906001019061135f565b50505091525090915060019050816020015160028111156113ef57fe5b1461140c5760405162461bcd60e51b81526004016108c2906147ce565b8451600081815260208052604081206004015460ff16600181111561142d57fe5b1461144a5760405162461bcd60e51b81526004016108c2906147fe565b604051632dfb660d60e21b815273__TaskImpl______________________________9063b7ed98349061148c906000908c908c908c908c908c90600401614ac2565b60006040518083038186803b1580156114a457600080fd5b505af41580156114b8573d6000803e3d6000fd5b505050505050505050505050565b60606000601c01805480602002602001604051908101604052809291908181526020018280548015610d3657602002820191906000526020600020905b815481526020019060010190808311611503575050505050905090565b60025490565b60248054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610d365780601f10610d0b57610100808354040283529160200191610d36565b61158f613251565b6040805160a08101909152600760056000835b8282101561169857838260040201604051806080016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561161e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611600575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561167657602002820191906000526020600020905b815481526020019060010190808311611662575b50505050508152602001600382015481525050815260200190600101906115a2565b50505050905090565b6116a9611c1d565b6116c55760405162461bcd60e51b81526004016108c2906147de565b6026546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3602680546001600160a01b0319169055565b6040516302b519c360e11b815260009073__SecretContractImpl____________________9063056a33869061174990849060040161483f565b60206040518083038186803b15801561176157600080fd5b505af4158015611775573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117999190810190613ab6565b905090565b6117a661327e565b60008281526020808052604091829020825160a08101845281546001600160a01b03168152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561182c57602002820191906000526020600020905b815481526020019060010190808311611818575b5050509183525050600482015460209091019060ff16600181111561184d57fe5b600181111561185857fe5b90525090505b919050565b6005546001600160a01b0316301461188d5760405162461bcd60e51b81526004016108c29061478e565b8260005b601b5481101561190c57816001600160a01b03166000601d01600080601b0184815481106118bb57fe5b60009182526020808320909101546001600160a01b0390811684529083019390935260409091019020541614156119045760405162461bcd60e51b81526004016108c29061474e565b600101611891565b5060405163063e88f160e51b815273__WorkersImpl___________________________9063c7d11e2090610c399060009088908890889060040161489c565b611953611c1d565b61196f5760405162461bcd60e51b81526004016108c2906147de565b8051610ca69060249060208401906131d3565b6005546000906001600160a01b031633146119af5760405162461bcd60e51b81526004016108c29061480e565b60405163d3c0af8760e01b815273__UpgradeImpl___________________________9063d3c0af87906119eb906000908790879060040161486f565b60206040518083038186803b158015611a0357600080fd5b505af4158015611a17573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106db9190810190613ab6565b6026546001600160a01b031690565b60405163e5a2600960e01b815260609073__SecretContractImpl____________________9063e5a2600990611a899060009087908790600401614a6d565b60006040518083038186803b158015611aa157600080fd5b505af4158015611ab5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106db919081019061381c565b611ae56132a9565b6000828152601e602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101549282019290925260038201546001600160401b03808216606084015268010000000000000000909104166080820152600482015460a082015260058083015491929160c084019160ff90911690811115611b7457fe5b6005811115611b7f57fe5b815260068201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611c0d5780601f10611be257610100808354040283529160200191611c0d565b820191906000526020600020905b815481529060010190602001808311611bf057829003601f168201915b5050505050815250509050919050565b6026546000906001600160a01b0316611c346130fb565b6001600160a01b031614905090565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611c8392919061490f565b60006040518083038186803b158015611c9b57600080fd5b505af4158015611caf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611cd79190810190613af3565b93509350935093509193509193565b6000611cf0613181565b6000611cfa613181565b60005b601b54811015611f1e57601b8054601d9160009184908110611d1b57fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b909104166002811115611d7157fe5b6002811115611d7c57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e195780601f10611dee57610100808354040283529160200191611e19565b820191906000526020600020905b815481529060010190602001808311611dfc57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611ec457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611e9257fe5b6003811115611e9d57fe5b81526020016001820154815260200160028201548152505081526020019060010190611e51565b50505050815250509150856001600160a01b031682600001516001600160a01b03161415611f1657601b805482908110611efa57fe5b6000918252602090912001546001600160a01b03169250611f1e565b600101611cfd565b509092509050915091565b6005546001600160a01b03163014611f535760405162461bcd60e51b81526004016108c29061478e565b33611f5c613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115611fa457fe5b6002811115611faf57fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561204c5780601f106120215761010080835404028352916020019161204c565b820191906000526020600020905b81548152906001019060200180831161202f57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156120f757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156120c557fe5b60038111156120d057fe5b81526020016001820154815260200160028201548152505081526020019060010190612084565b505050915250909150600190508160200151600281111561211457fe5b146121315760405162461bcd60e51b81526004016108c2906147ce565b8560008082815260208052604090206004015460ff16600181111561215257fe5b1461216f5760405162461bcd60e51b81526004016108c2906147fe565b6040516301c7aeeb60e21b815273__TaskImpl______________________________9063071ebbac906121af906000908b908b908b908b9060040161498a565b60006040518083038186803b1580156121c757600080fd5b505af41580156121db573d6000803e3d6000fd5b5050505050505050505050565b60006060826121f5613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561223d57fe5b600281111561224857fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122e55780601f106122ba576101008083540402835291602001916122e5565b820191906000526020600020905b8154815290600101906020018083116122c857829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561239057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561235e57fe5b600381111561236957fe5b8152602001600182015481526020016002820154815250508152602001906001019061231d565b50505091525090915060009050816020015160028111156123ad57fe5b14156123cb5760405162461bcd60e51b81526004016108c2906147ee565b604051632f68f03160e01b815273__WorkersImpl___________________________90632f68f0319061240590600090899060040161484d565b60006040518083038186803b15801561241d57600080fd5b505af4158015612431573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124599190810190613699565b935093505050915091565b3361246d613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156124b557fe5b60028111156124c057fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561255d5780601f106125325761010080835404028352916020019161255d565b820191906000526020600020905b81548152906001019060200180831161254057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561260857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156125d657fe5b60038111156125e157fe5b81526020016001820154815260200160028201548152505081526020019060010190612595565b5050505081525050905061261b43612ecc565b6126375760405162461bcd60e51b81526004016108c2906147ae565b60028160200151600281111561264957fe5b146126665760405162461bcd60e51b81526004016108c29061481e565b6022546060820151101561268c5760405162461bcd60e51b81526004016108c29061473e565b6040516318a8dc7160e11b815273__WorkersImpl___________________________90633151b8e2906109039060009060040161483f565b6040516312c8c46d60e31b815260009073__WorkersImpl___________________________906396462368906119eb9086908690600401614719565b6005546001600160a01b031690565b6005546001600160a01b031630146127395760405162461bcd60e51b81526004016108c29061478e565b604051638c91056d60e01b815273__TaskImpl______________________________90638c91056d90610c399060009088908890889088906004016149dc565b612781613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156127c957fe5b60028111156127d457fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128715780601f1061284657610100808354040283529160200191612871565b820191906000526020600020905b81548152906001019060200180831161285457829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561291c57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156128ea57fe5b60038111156128f557fe5b815260200160018201548152602001600282015481525050815260200190600101906128a9565b505050915250909392505050565b6005546001600160a01b031630146129545760405162461bcd60e51b81526004016108c29061478e565b3361295d613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156129a557fe5b60028111156129b057fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a4d5780601f10612a2257610100808354040283529160200191612a4d565b820191906000526020600020905b815481529060010190602001808311612a3057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612af857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612ac657fe5b6003811115612ad157fe5b81526020016001820154815260200160028201548152505081526020019060010190612a85565b5050509152509091506001905081602001516002811115612b1557fe5b14612b325760405162461bcd60e51b81526004016108c2906147ce565b8451600081815260208052604090206004015460019060ff1681811115612b5557fe5b14612b725760405162461bcd60e51b81526004016108c29061477e565b60405163b1c57e7b60e01b815273__TaskImpl______________________________9063b1c57e7b9061148c906000908c908c908c908c908c90600401614ac2565b612bbc611c1d565b612bd85760405162461bcd60e51b81526004016108c2906147de565b6005546001600160a01b03163014612c025760405162461bcd60e51b81526004016108c29061478e565b6040516366e13f4360e01b815273__TaskImpl______________________________906366e13f43906111cd9060009089908990899089908990600401614a1e565b6005546001600160a01b03163014612c6e5760405162461bcd60e51b81526004016108c29061478e565b33612c77613181565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115612cbf57fe5b6002811115612cca57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d675780601f10612d3c57610100808354040283529160200191612d67565b820191906000526020600020905b815481529060010190602001808311612d4a57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612e1257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612de057fe5b6003811115612deb57fe5b81526020016001820154815260200160028201548152505081526020019060010190612d9f565b5050509152509091506001905081602001516002811115612e2f57fe5b14612e4c5760405162461bcd60e51b81526004016108c2906147ce565b866001600082815260208052604090206004015460ff166001811115612e6e57fe5b14612e8b5760405162461bcd60e51b81526004016108c29061477e565b6040516289b28160e61b815273__TaskImpl______________________________9063226ca0409061148c906000908c908c908c908c908c9060040161492a565b6040516304d5c11360e31b815260009073__WorkersImpl___________________________906326ae089890612f08908490869060040161490f565b60206040518083038186803b158015612f2057600080fd5b505af4158015612f34573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106de9190810190613ab6565b336000908152601d60205260409020546001600160a01b031690565b60015490565b8060016000828152601e6020526040902060059081015460ff1690811115612f9e57fe5b14612fbb5760405162461bcd60e51b81526004016108c29061479e565b604051631c9a715b60e01b815273__TaskImpl______________________________90631c9a715b9061090390600090869060040161490f565b612ffd611c1d565b6130195760405162461bcd60e51b81526004016108c2906147de565b613022816130ff565b50565b61302d611c1d565b6130495760405162461bcd60e51b81526004016108c2906147de565b6005546001600160a01b031630146130735760405162461bcd60e51b81526004016108c29061478e565b6040516368fac41b60e01b815273__UpgradeImpl___________________________906368fac41b906130ad90600090859060040161484d565b60006040518083038186803b1580156130c557600080fd5b505af41580156130d9573d6000803e3d6000fd5b5050505050565b6001600160a01b031660009081526021602052604090205490565b3390565b6001600160a01b0381166131255760405162461bcd60e51b81526004016108c29061475e565b6026546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3602680546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061321457805160ff1916838001178555613241565b82800160010185558215613241579182015b82811115613241578251825591602001919060010190613226565b5061324d9291506132ee565b5090565b6040518060a001604052806005905b613268613308565b8152602001906001900390816132605790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b610d3e91905b8082111561324d57600081556001016132f4565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b80356106de81614d3f565b80516106de81614d3f565b600082601f83011261335757600080fd5b815161336a61336582614bd6565b614bb0565b9150818183526020840193506020810190508385602084028201111561338f57600080fd5b60005b838110156133bb57816133a5888261333b565b8452506020928301929190910190600101613392565b5050505092915050565b600082601f8301126133d657600080fd5b60046133e461336582614bf6565b915081838560208402820111156133fa57600080fd5b60005b838110156133bb57816134108882613506565b84525060209283019291909101906001016133fd565b600082601f83011261343757600080fd5b815161344561336582614bd6565b9150818183526020840193506020810190508385602084028201111561346a57600080fd5b60005b838110156133bb57816134808882613511565b845250602092830192919091019060010161346d565b600082601f8301126134a757600080fd5b81516134b561336582614bd6565b915081818352602084019350602081019050838560208402820111156134da57600080fd5b60005b838110156133bb57816134f08882613511565b84525060209283019291909101906001016134dd565b80356106de81614d53565b80516106de81614d53565b600082601f83011261352d57600080fd5b813561353b61336582614c13565b9150808252602083016020830185838301111561355757600080fd5b613562838284614cd5565b50505092915050565b600082601f83011261357c57600080fd5b815161358a61336582614c13565b915080825260208301602083018583830111156135a657600080fd5b613562838284614ce1565b80516106de81614d5c565b6000606082840312156135ce57600080fd5b6135d86060614bb0565b905060006135e684846135b1565b82525060206135f784848301613511565b602083015250604061360b84828501613511565b60408301525092915050565b80356106de81614d69565b60006020828403121561363457600080fd5b60006136408484613330565b949350505050565b6000806040838503121561365b57600080fd5b60006136678585613330565b92505060208301356001600160401b0381111561368357600080fd5b61368f8582860161351c565b9150509250929050565b600080604083850312156136ac57600080fd5b60006136b8858561333b565b92505060208301516001600160401b038111156136d457600080fd5b61368f8582860161356b565b6000806000606084860312156136f557600080fd5b60006137018686613330565b93505060208401356001600160401b0381111561371d57600080fd5b6137298682870161351c565b92505060408401356001600160401b0381111561374557600080fd5b6137518682870161351c565b9150509250925092565b6000806040838503121561376e57600080fd5b600061377a8585613330565b925050602061368f85828601613506565b60006020828403121561379d57600080fd5b81516001600160401b038111156137b357600080fd5b61364084828501613346565b600080604083850312156137d257600080fd5b82516001600160401b038111156137e857600080fd5b6137f485828601613346565b92505060208301516001600160401b0381111561381057600080fd5b61368f85828601613496565b60006020828403121561382e57600080fd5b81516001600160401b0381111561384457600080fd5b61364084828501613426565b60006020828403121561386257600080fd5b60006136408484613506565b600080600080600060a0868803121561388657600080fd5b60006138928888613506565b95505060206138a388828901613506565b94505060406138b488828901613506565b93505060606138c588828901613617565b92505060808601356001600160401b038111156138e157600080fd5b6138ed8882890161351c565b9150509295509295909350565b6000806000806080858703121561391057600080fd5b600061391c8787613506565b945050602061392d87828801613506565b935050604061393e87828801613617565b92505060608501356001600160401b0381111561395a57600080fd5b6139668782880161351c565b91505092959194509250565b6000806000806080858703121561398857600080fd5b60006139948787613506565b94505060206139a587828801613617565b93505060406139b687828801613617565b925050606061396687828801613506565b600080600080600060a086880312156139df57600080fd5b60006139eb8888613506565b95505060206139fc88828901613617565b9450506040613a0d88828901613617565b9350506060613a1e88828901613506565b92505060806138ed88828901613506565b600060208284031215613a4157600080fd5b81356001600160401b03811115613a5757600080fd5b6136408482850161351c565b60008060408385031215613a7657600080fd5b82356001600160401b03811115613a8c57600080fd5b6136678582860161351c565b600060608284031215613aaa57600080fd5b600061364084846135bc565b600060208284031215613ac857600080fd5b60006136408484613511565b60008060408385031215613ae757600080fd5b600061377a8585613506565b60008060008060808587031215613b0957600080fd5b6000613b158787613511565b9450506020613b2687828801613511565b93505060408501516001600160401b03811115613b4257600080fd5b613b4e87828801613346565b92505060608501516001600160401b03811115613b6a57600080fd5b61396687828801613496565b600080600060608486031215613b8b57600080fd5b6000613b978686613506565b935050602061372986828701613506565b60008060008060006101008688031215613bc157600080fd5b6000613bcd8888613617565b9550506020613bde88828901613330565b9450506040613bef888289016133c5565b93505060c08601356001600160401b03811115613c0b57600080fd5b613c178882890161351c565b92505060e08601356001600160401b038111156138e157600080fd5b6000613c3f8383613c73565b505060200190565b6000613c3f8383613fc0565b6000613c5f83836144db565b505060600190565b60006106db83836145f0565b613c7c81614c59565b82525050565b6000613c8d82614c40565b613c978185614c50565b9350613ca283614c3a565b8060005b83811015613cd0578151613cba8882613c33565b9750613cc583614c3a565b925050600101613ca6565b509495945050505050565b6000613ce682614c40565b613cf08185614c50565b9350613cfb83614c3a565b8060005b83811015613cd0578151613d138882613c33565b9750613d1e83614c3a565b925050600101613cff565b613d3281614c44565b613d3c818461185e565b9250613d4782610d3e565b8060005b8381101561092f578151613d5f8782613c47565b9650613d6a83614c3a565b925050600101613d4b565b6000613d8082614c40565b613d8a8185614c50565b9350613d9583614c3a565b8060005b83811015613cd0578151613dad8882613c47565b9750613db883614c3a565b925050600101613d99565b6000613dce82614c40565b613dd88185614c50565b9350613de383614c3a565b8060005b83811015613cd0578151613dfb8882613c47565b9750613e0683614c3a565b925050600101613de7565b6000613e1c82614c40565b613e268185614c50565b9350613e3183614c3a565b8060005b83811015613cd0578151613e498882613c53565b9750613e5483614c3a565b925050600101613e35565b6000613e6a82614c40565b613e748185614c50565b9350613e7f83614c3a565b8060005b83811015613cd0578151613e978882613c53565b9750613ea283614c3a565b925050600101613e83565b6000613eb882614c4a565b613ec2818561185e565b935083602082028501613ed485610d3e565b8060005b85811015613f0e5784840389528151613ef18582613c67565b9450613efc83614c3a565b60209a909a0199925050600101613ed8565b5091979650505050505050565b6000613f2682614c40565b613f308185614c50565b9350613f3b83614c3a565b8060005b83811015613cd0578151613f538882613c47565b9750613f5e83614c3a565b925050600101613f3f565b6000613f7482614c40565b613f7e8185614c50565b9350613f8983614c3a565b8060005b83811015613cd0578151613fa18882613c47565b9750613fac83614c3a565b925050600101613f8d565b613c7c81614c64565b613c7c81610d3e565b6000613fd482614c40565b613fde8185614c50565b9350613fee818560208601614ce1565b613ff781614d0d565b9093019392505050565b613c7c81614ca9565b613c7c81614cb4565b613c7c81614cbf565b613c7c81614cca565b6000614032602283614c50565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152611b9d60f21b602082015260400192915050565b6000614076601883614c50565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b60006140af602683614c50565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b60006140f7602783614c50565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152667574207479706560c81b602082015260400192915050565b6000614140601c83614c50565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b6000614179601b83614c50565b7f4e6f74207570646174656420456e69676d6120636f6e74726163740000000000815260200192915050565b60006141b2601383614c50565b725461736b206973206e6f742077616974696e6760681b815260200192915050565b60006141e1602783614c50565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152661a585b1a5e995960ca1b602082015260400192915050565b600061422a602e83614c50565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381526d081b1bd9c81bdd5d08195d995b9d60921b602082015260400192915050565b600061427a601483614c50565b732bb7b935b2b9103737ba103637b3b3b2b21034b760611b815260200192915050565b60006142aa602083614c50565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b60006142e3601383614c50565b722ab73932b3b4b9ba32b932b2103bb7b935b2b960691b815260200192915050565b6000614312602083614c50565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b600061434b602083614c50565b7f4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374815260200192915050565b6000614384602783614c50565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f6781526619d959081bdd5d60ca1b602082015260400192915050565b805160009060a08401906143d48582613c73565b5060208301516143e76020860182613fc0565b5060408301516143fa6040860182613fc0565b50606083015184820360608601526144128282613dc3565b91505060808301516144276080860182614001565b509392505050565b9052565b80516000906101008401906144488582613c73565b50602083015161445b6020860182613fc0565b50604083015161446e6040860182613fc0565b506060830151614481606086018261464b565b506080830151614494608086018261464b565b5060a08301516144a760a0860182613fc0565b5060c08301516144ba60c086018261400a565b5060e083015184820360e08601526144d28282613fc9565b95945050505050565b805160608301906144ec8482614013565b5060208201516144ff6020850182613fc0565b5060408201516145126040850182613fc0565b50505050565b805160009060a084019061452c8582613c73565b50602083015161453f602086018261401c565b50604083015184820360408601526145578282613fc9565b915050606083015161456c6060860182613fc0565b50608083015184820360808601526144d28282613e11565b805160009060a08401906145988582613c73565b5060208301516145ab602086018261401c565b50604083015184820360408601526145c38282613fc9565b91505060608301516145d86060860182613fc0565b50608083015184820360808601526144d28282613e5f565b805160009060808401906146048582613fc0565b506020830151848203602086015261461c8282613cdb565b915050604083015184820360408601526146368282613f69565b91505060608301516144276060860182613fc0565b613c7c81614c9d565b602081016106de8284613c73565b604081016146708285613c73565b81810360208301526136408184613fc9565b604081016146908285613c73565b81810360208301526136408184614518565b602080825281016106db8184613c82565b604080825281016146c48185613c82565b905081810360208301526136408184613f1b565b602080825281016106db8184613d75565b602080825281016106db8184613ead565b602081016106de8284613fb7565b602080825281016106db8184613fc9565b6040808252810161472a8185613fc9565b905081810360208301526136408184613fc9565b602080825281016106de81614025565b602080825281016106de81614069565b602080825281016106de816140a2565b602080825281016106de816140ea565b602080825281016106de81614133565b602080825281016106de8161416c565b602080825281016106de816141a5565b602080825281016106de816141d4565b602080825281016106de8161421d565b602080825281016106de8161426d565b602080825281016106de8161429d565b602080825281016106de816142d6565b602080825281016106de81614305565b602080825281016106de8161433e565b602080825281016106de81614377565b602080825281016106db81846143c0565b602081016106de828461442f565b6040810161485b828561442f565b6148686020830184613c73565b9392505050565b6060810161487d828661442f565b61488a6020830185613c73565b81810360408301526144d28184613fc9565b608081016148aa828761442f565b6148b76020830186613c73565b81810360408301526148c98185613fc9565b905081810360608301526148dd8184613fc9565b9695505050505050565b606081016148f5828661442f565b6149026020830185613c73565b6136406040830184613fc0565b6040810161491d828561442f565b6148686020830184613fc0565b60c08101614938828961442f565b6149456020830188613fc0565b6149526040830187613fc0565b61495f6060830186613fc0565b61496c608083018561464b565b81810360a083015261497e8184613fc9565b98975050505050505050565b60a08101614998828861442f565b6149a56020830187613fc0565b6149b26040830186613fc0565b6149bf606083018561464b565b81810360808301526149d18184613fc9565b979650505050505050565b60a081016149ea828861442f565b6149f76020830187613fc0565b614a04604083018661464b565b614a11606083018561464b565b6148dd6080830184613fc0565b60c08101614a2c828961442f565b614a396020830188613fc0565b614a46604083018761464b565b614a53606083018661464b565b614a606080830185613fc0565b6149d160a0830184613fc0565b60608101614a7b828661442f565b6149026020830185613fc0565b60808101614a96828761442f565b614aa36020830186613fc0565b614ab06040830185613fc0565b81810360608301526148dd8184613fc9565b6101208101614ad1828961442f565b614ade602083018861464b565b614aeb6040830187613c73565b614af86060830186613d29565b81810360e0830152614b0a8185613fc9565b905081810361010083015261497e8184613fc9565b602080825281016106db8184614433565b602080825281016106db8184614518565b60408082528101614b528185614584565b90506148686020830184613fc0565b602081016106de8284613fc0565b60808101614b7d8287613fc0565b614b8a6020830186613fc0565b8181036040830152614b9c8185613c82565b905081810360608301526148dd8184613f1b565b6040518181016001600160401b0381118282101715614bce57600080fd5b604052919050565b60006001600160401b03821115614bec57600080fd5b5060209081020190565b60006001600160401b03821115614c0c57600080fd5b5060200290565b60006001600160401b03821115614c2957600080fd5b506020601f91909101601f19160190565b60200190565b5190565b50600490565b50600590565b90815260200190565b60006106de82614c91565b151590565b8061185e81614d17565b8061185e81614d21565b8061185e81614d2b565b8061185e81614d35565b6001600160a01b031690565b6001600160401b031690565b60006106de82614c69565b60006106de82614c73565b60006106de82614c7d565b60006106de82614c87565b82818337506000910152565b60005b83811015614cfc578181015183820152602001614ce4565b838111156145125750506000910152565b601f01601f191690565b6002811061302257fe5b6006811061302257fe5b6004811061302257fe5b6003811061302257fe5b614d4881614c59565b811461302257600080fd5b614d4881610d3e565b6004811061302257600080fd5b614d4881614c9d56fea365627a7a72315820a20f98c99cad66c501e810ccdd1d2fd07af32dce7939492187c80d906dab39b76c6578706572696d656e74616cf564736f6c634300050c0040","sourceMap":"886:17640:0:-;;;1156:622;8:9:-1;5:2;;;30:1;27;20:12;5:2;1156:622:0;;;;;;;;;;;;;;;;;;;;;707:12:39;-1:-1:-1;;;;;707:10:39;:12;:::i;:::-;698:6;:21;;-1:-1:-1;;;;;;698:21:39;-1:-1:-1;;;;;698:21:39;;;;;;;;734:40;;767:6;;;-1:-1:-1;;734:40:39;;-1:-1:-1;;734:40:39;1346:5:0;:37;;-1:-1:-1;;;;;1346:37:0;;;-1:-1:-1;;;;;;1346:37:0;;;;;;;;1393:28;;;1455:35;;;1431:21;:59;1500:15;:28;;;;;;;;;;;1538:18;:34;;;;;;;;;;;;;;;1582;:50;;;;;1627:4;1582:50;;;1642:22;:26;;;1678:21;:25;1713:26;;;;:14;;:26;;;;;:::i;:::-;-1:-1:-1;1749:22:0;;;;:12;;:22;;;;;:::i;:::-;;1156:622;;;;;;;886:17640;;788:96:36;867:10;788:96;;:::o;886:17640:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;886:17640:0;;;-1:-1:-1;886:17640:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;147:442;;259:3;252:4;244:6;240:17;236:27;226:2;;277:1;274;267:12;226:2;307:6;301:13;329:64;344:48;385:6;344:48;;;329:64;;;320:73;;413:6;406:5;399:21;449:4;441:6;437:17;482:4;475:5;471:16;517:3;508:6;503:3;499:16;496:25;493:2;;;534:1;531;524:12;493:2;544:39;576:6;571:3;566;544:39;;;219:370;;;;;;;;597:134;675:13;;693:33;675:13;693:33;;738:1277;;;;;;;;973:3;961:9;952:7;948:23;944:33;941:2;;;990:1;987;980:12;941:2;1025:1;1042:64;1098:7;1078:9;1042:64;;;1032:74;;1004:108;1143:2;1161:64;1217:7;1208:6;1197:9;1193:22;1161:64;;;1151:74;;1122:109;1262:2;1280:64;1336:7;1327:6;1316:9;1312:22;1280:64;;;1270:74;;1241:109;1381:2;1399:64;1455:7;1446:6;1435:9;1431:22;1399:64;;;1389:74;;1360:109;1500:3;1519:64;1575:7;1566:6;1555:9;1551:22;1519:64;;;1509:74;;1479:110;1641:3;1630:9;1626:19;1620:26;-1:-1;;;;;1658:6;1655:30;1652:2;;;1698:1;1695;1688:12;1652:2;1718:73;1783:7;1774:6;1763:9;1759:22;1718:73;;;1708:83;;1599:198;1849:3;1838:9;1834:19;1828:26;-1:-1;;;;;1866:6;1863:30;1860:2;;;1906:1;1903;1896:12;1860:2;1926:73;1991:7;1982:6;1971:9;1967:22;1926:73;;;1916:83;;1807:198;935:1080;;;;;;;;;;;2022:256;2084:2;2078:9;2110:17;;;-1:-1;;;;;2170:34;;2206:22;;;2167:62;2164:2;;;2242:1;2239;2232:12;2164:2;2258;2251:22;2062:216;;-1:-1;2062:216;2285:321;;-1:-1;;;;;2420:6;2417:30;2414:2;;;2460:1;2457;2450:12;2414:2;-1:-1;2591:4;2527;2504:17;;;;-1:-1;;2500:33;2581:15;;2351:255;2613:91;;-1:-1;;;;;2773:54;;2675:24;2756:76;2919:268;2984:1;2991:101;3005:6;3002:1;2999:13;2991:101;;;3072:11;;;3066:18;3053:11;;;3046:39;3027:2;3020:10;2991:101;;;3107:6;3104:1;3101:13;3098:2;;;3172:1;3163:6;3158:3;3154:16;3147:27;3098:2;2968:219;;;;;3195:117;3264:24;3282:5;3264:24;;;3257:5;3254:35;3244:2;;3303:1;3300;3293:12;3244:2;3238:74;;3319:117;3388:24;3406:5;3388:24;;3362:74;886:17640:0;;;;;;","deployedSourceMap":"886:17640:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;886:17640:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15075:194;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16430:199;;;;;;;;;:::i;:::-;;;;;;;;7863:98;;;:::i;:::-;;7401:132;;;;;;;;;:::i;18415:109::-;;;;;;;;;:::i;3855:92:11:-;;;:::i;:::-;;;;;;;;7008:195:0;;;;;;;;;:::i;14717:237::-;;;;;;;;;:::i;9092:482::-;;;;;;;;;:::i;3258:121:11:-;;;:::i;:::-;;;;;;;;2134:102;;;:::i;:::-;;;;;;;;3694:96;;;:::i;3012:130::-;;;:::i;:::-;;;;;;;;1642:137:39;;;:::i;9701:149:0:-;;;:::i;2732::11:-;;;;;;;;;:::i;:::-;;;;;;;;6530:235:0;;;;;;;;;:::i;18230:117::-;;;;;;;;;:::i;17909:249::-;;;;;;;;;:::i;857:77:39:-;;;:::i;:::-;;;;;;;;10063:211:0;;;;;;;;;:::i;2410:137:11:-;;;;;;;;;:::i;:::-;;;;;;;;1208:92:39;;;:::i;:::-;;;;;;;;15895:198:0;;;;;;;;;:::i;:::-;;;;;;;;;;;1005:492:11;;;;;;;;;:::i;:::-;;;;;;;;;8269:352:0;;;;;;;;;:::i;16767:200::-;;;;;;;;;:::i;:::-;;;;;;;;;7696:90;;;:::i;17172:181::-;;;;;;;;;:::i;3494:131:11:-;;;:::i;12054:289:0:-;;;;;;;;;:::i;680:131:11:-;;;;;;;;;:::i;:::-;;;;;;;;12840:467:0;;;;;;;;;:::i;11127:352::-;;;;;;;;;:::i;13698:369::-;;;;;;;;;:::i;15444:167::-;;;;;;;;;:::i;400:115:11:-;;;:::i;1958:90::-;;;:::i;14234:147:0:-;;;;;;;;;:::i;1928:107:39:-;;;;;;;;;:::i;17494:226:0:-;;;;;;;;;:::i;1741:134:11:-;;;;;;;;;:::i;15075:194:0:-;15153:16;15171:13;15207;:34;15242:5;15249:12;15207:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15207:55:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15207:55:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;15207:55:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;15207:55:0;;;;;;;;;15200:62;;;;15075:194;;;:::o;16430:199::-;16562:60;;-1:-1:-1;;;16562:60:0;;16523:16;;16562:11;;:30;;:60;;16593:5;;16600:12;;16614:7;;16562:60;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16562:60:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16562:60:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16562:60:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16562:60:0;;;;;;;;;16555:67;;16430:199;;;;;:::o;7863:98::-;7903:10;2442:33;;:::i;:::-;-1:-1:-1;;;;;2478:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2442:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2442:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2442:56:0;;-1:-1:-1;2442:56:0;;-1:-1:-1;2533:34:0;;-1:-1:-1;2516:6:0;:13;;;:51;;;;;;;;;2508:84;;;;-1:-1:-1;;;2508:84:0;;;;;;;;;;;;;;;;;7925:29;;-1:-1:-1;;;7925:29:0;;:11;;:22;;:29;;7948:5;;7925:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7925:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7925:29:0;;;;7863:98;;:::o;7401:132::-;7460:10;3687:33;;:::i;:::-;-1:-1:-1;;;;;3723:20:0;;;:5;:20;;;:13;:20;;;;;;;;;3687:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3687:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3687:56:0;;-1:-1:-1;3687:56:0;;-1:-1:-1;3778:35:0;;-1:-1:-1;3761:6:0;:13;;;:52;;;;;;;;;3753:104;;;;-1:-1:-1;;;3753:104:0;;;;;;;;;3867:39;;:::i;:::-;3909:56;;-1:-1:-1;;;3909:56:0;;:11;;:34;;:56;;3944:6;;3952:12;;3909:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3909:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3909:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3909:56:0;;;;;;;;;3867:98;-1:-1:-1;4012:33:0;3983:25;;:62;;;;;;;;;3975:126;;;;-1:-1:-1;;;3975:126:0;;;;;;;;;4155:9;:21;;;4119:33;4139:12;4119:19;:33::i;:::-;:57;4111:128;;;;-1:-1:-1;;;4111:128:0;;;;;;;;;7486:40;;-1:-1:-1;;;7486:40:0;;:11;;:24;;:40;;7511:5;;7518:7;;7486:40;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7486:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7486:40:0;;;;7401:132;;;;:::o;18415:109::-;1061:9:39;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;18495:22:0;;;;:12;;:22;;;;;:::i;:::-;;18415:109;:::o;3855:92:11:-;3928:12;3921:19;;;;;;;;-1:-1:-1;;3921:19:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3897:12;;3921:19;;3928:12;;3921:19;;3928:12;3921:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3855:92;;:::o;7008:195:0:-;5702:34;;-1:-1:-1;;;;;5702:34:0;5693:4;5685:51;5677:91;;;;-1:-1:-1;;;5677:91:0;;;;;;;;;7119:10;2078:33;;:::i;:::-;-1:-1:-1;;;;;2114:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2078:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2078:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2078:56:0;;-1:-1:-1;2078:56:0;;-1:-1:-1;2169:38:0;;-1:-1:-1;2152:6:0;:13;;;:55;;;;;;;;;;2144:87;;;;-1:-1:-1;;;2144:87:0;;;;;;;;;7145:51;;-1:-1:-1;;;7145:51:0;;:11;;:23;;:51;;7169:5;;7176:10;;7188:7;;7145:51;;;;14717:237;5702:34;;-1:-1:-1;;;;;5702:34:0;5693:4;5685:51;5677:91;;;;-1:-1:-1;;;5677:91:0;;;;;;;;;14853:10;2078:33;;:::i;:::-;-1:-1:-1;;;;;2114:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2078:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2078:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2078:56:0;;-1:-1:-1;2078:56:0;;-1:-1:-1;2169:38:0;;-1:-1:-1;2152:6:0;:13;;;:55;;;;;;;;;;2144:87;;;;-1:-1:-1;;;2144:87:0;;;;;;;;;14879:68;;-1:-1:-1;;;14879:68:0;;:13;;:34;;:68;;14914:5;;14921:12;;14935:5;;14942:4;;14879:68;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14879:68:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14879:68:0;;;;5778:1;;14717:237;;;:::o;9092:482::-;5702:34;;-1:-1:-1;;;;;5702:34:0;5693:4;5685:51;5677:91;;;;-1:-1:-1;;;5677:91:0;;;;;;;;;9369:10;2442:33;;:::i;:::-;-1:-1:-1;;;;;2478:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2442:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2442:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2442:56:0;;-1:-1:-1;2442:56:0;;-1:-1:-1;2533:34:0;;-1:-1:-1;2516:6:0;:13;;;:51;;;;;;;;;2508:84;;;;-1:-1:-1;;;2508:84:0;;;;;;;;;9403:12;;9413:1;4442:24;;;9403:12;4442:24;;;;;:31;;;;;;:78;;;;;;;;4434:123;;;;-1:-1:-1;;;4434:123:0;;;;;;;;;9431:136;;-1:-1:-1;;;9431:136:0;;:8;;:33;;:136;;9465:5;;9472:8;;9482:32;;9516:9;;9539:21;;9562:4;;9431:136;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9431:136:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9431:136:0;;;;2602:1;5778;;9092:482;;;;;:::o;3258:121:11:-;3320:16;3355:5;:17;;3348:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3258:121;:::o;2134:102::-;2208:21;;2134:102;:::o;3694:96::-;3769:14;3762:21;;;;;;;;-1:-1:-1;;3762:21:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3738:12;;3762:21;;3769:14;;3762:21;;3769:14;3762:21;;;;;;;;;;;;;;;;;;;;;;;;3012:130;3061:36;;:::i;:::-;3109:26;;;;;;;;;3116:19;3109:26;3116:5;3109:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3109:26:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3012:130;:::o;1642:137:39:-;1061:9;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;1724:6;;1703:40;;1740:1;;-1:-1:-1;;;;;1724:6:39;;1703:40;;1740:1;;1703:40;1753:6;:19;;-1:-1:-1;;;;;;1753:19:39;;;1642:137::o;9701:149:0:-;9793:50;;-1:-1:-1;;;9793:50:0;;9766:4;;9793:18;;:43;;:50;;9766:4;;9793:50;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9793:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9793:50:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9793:50:0;;;;;;;;;9786:57;;9701:149;:::o;2732::11:-;2797:34;;:::i;:::-;2850:5;:24;;;:15;:24;;;;;;;;2843:31;;;;;;;;;-1:-1:-1;;;;;2843:31:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2850:24;;2843:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2843:31:11;;;-1:-1:-1;;2843:31:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2843:31:11;-1:-1:-1;2732:149:11;;;;:::o;6530:235:0:-;5702:34;;-1:-1:-1;;;;;5702:34:0;5693:4;5685:51;5677:91;;;;-1:-1:-1;;;5677:91:0;;;;;;;;;6674:7;5353:6;5348:175;5369:21;:28;5365:32;;5348:175;;;5476:7;-1:-1:-1;;;;;5426:57:0;:5;:13;;:39;5440:5;:21;;5462:1;5440:24;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5440:24:0;;;5426:39;;;;;;;;;;;;;;;:46;;:57;;5418:94;;;;-1:-1:-1;;;5418:94:0;;;;;;;;;5399:3;;5348:175;;;-1:-1:-1;6697:61:0;;-1:-1:-1;;;6697:61:0;;:11;;:24;;:61;;6722:5;;6729:7;;6738;;6747:10;;6697:61;;;;18230:117;1061:9:39;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;18314:26:0;;;;:14;;:26;;;;;:::i;17909:249::-;5949:34;;18046:7;;-1:-1:-1;;;;;5949:34:0;5935:10;:48;5927:93;;;;-1:-1:-1;;;5927:93:0;;;;;;;;;18076:75;;-1:-1:-1;;;18076:75:0;;:11;;:46;;:75;;18123:5;;18130:14;;18146:4;;18076:75;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18076:75:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18076:75:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18076:75:0;;;;;;;;857:77:39;921:6;;-1:-1:-1;;;;;921:6:39;857:77;:::o;10063:211:0:-;10196:71;;-1:-1:-1;;;10196:71:0;;10157:16;;10196:18;;:49;;:71;;10246:5;;10253:6;;10261:5;;10196:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10196:71:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10196:71:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;10196:71:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;10196:71:0;;;;;;;;2410:137:11;2471:30;;:::i;:::-;2520:5;:20;;;:11;:20;;;;;;;;;2513:27;;;;;;;;;-1:-1:-1;;;;;2513:27:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2513:27:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2520:20;2513:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2513:27:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2410:137;;;:::o;1208:92:39:-;1287:6;;1248:4;;-1:-1:-1;;;;;1287:6:39;1271:12;:10;:12::i;:::-;-1:-1:-1;;;;;1271:22:39;;1264:29;;1208:92;:::o;15895:198:0:-;15972:4;15978;15984:16;16002:13;16034:11;:31;16066:5;16073:12;16034:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16034:52:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16034:52:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16034:52:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16034:52:0;;;;;;;;;16027:59;;;;;;;;15895:198;;;;;:::o;1005:492:11:-;1080:7;1089:26;;:::i;:::-;1127:15;1152:33;;:::i;:::-;1200:6;1195:262;1216:21;:28;1212:32;;1195:262;;;1288:21;:24;;1274:13;;:5;;1310:1;;1288:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1288:24:11;;;1274:39;;;;;;;;;;;;;;;;1265:48;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1265:48:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1348:7;-1:-1:-1;;;;;1331:24:11;:6;:13;;;-1:-1:-1;;;;;1331:24:11;;1327:120;;;1385:21;:24;;1407:1;;1385:24;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1385:24:11;;-1:-1:-1;1427:5:11;;1327:120;1246:3;;1195:262;;;-1:-1:-1;1474:7:11;;-1:-1:-1;1483:6:11;-1:-1:-1;1005:492:11;;;:::o;8269:352:0:-;5702:34;;-1:-1:-1;;;;;5702:34:0;5693:4;5685:51;5677:91;;;;-1:-1:-1;;;5677:91:0;;;;;;;;;8474:10;2442:33;;:::i;:::-;-1:-1:-1;;;;;2478:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2442:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2442:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2442:56:0;;-1:-1:-1;2442:56:0;;-1:-1:-1;2533:34:0;;-1:-1:-1;2516:6:0;:13;;;:51;;;;;;;;;2508:84;;;;-1:-1:-1;;;2508:84:0;;;;;;;;;8508:7;4477:43;4442:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;4434:123;;;;-1:-1:-1;;;4434:123:0;;;;;;;;;8531:83;;-1:-1:-1;;;8531:83:0;;:8;;:40;;:83;;8572:5;;8579:7;;8588:9;;8599:8;;8609:4;;8531:83;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8531:83:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8531:83:0;;;;2602:1;5778;;8269:352;;;;:::o;16767:200::-;16872:7;16881:12;16847:10;2078:33;;:::i;:::-;-1:-1:-1;;;;;2114:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2078:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2078:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2078:56:0;;-1:-1:-1;2078:56:0;;-1:-1:-1;2169:38:0;;-1:-1:-1;2152:6:0;:13;;;:55;;;;;;;;;;2144:87;;;;-1:-1:-1;;;2144:87:0;;;;;;;;;16916:44;;-1:-1:-1;;;16916:44:0;;:11;;:25;;:44;;16942:5;;16949:10;;16916:44;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16916:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16916:44:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16916:44:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16916:44:0;;;;;;;;;16909:51;;;;16767:200;;;;;:::o;7696:90::-;7729:10;3134:33;;:::i;:::-;-1:-1:-1;;;;;3170:20:0;;;:5;:20;;;:13;:20;;;;;;;;;3134:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3134:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3208:33;3228:12;3208:19;:33::i;:::-;3200:90;;;;-1:-1:-1;;;3200:90:0;;;;;;;;;3325:35;3308:6;:13;;;:52;;;;;;;;;3300:104;;;;-1:-1:-1;;;3300:104:0;;;;;;;;;3440:22;;3422:14;;;;:40;;3414:87;;;;-1:-1:-1;;;3414:87:0;;;;;;;;;7751:28;;-1:-1:-1;;;7751:28:0;;:11;;:21;;:28;;7773:5;;7751:28;;;;17172:181;17299:47;;-1:-1:-1;;;17299:47:0;;17272:4;;17299:11;;:28;;:47;;17328:5;;17335:10;;17299:47;;;;3494:131:11;3584:34;;-1:-1:-1;;;;;3584:34:11;3494:131;:::o;12054:289:0:-;5702:34;;-1:-1:-1;;;;;5702:34:0;5693:4;5685:51;5677:91;;;;-1:-1:-1;;;5677:91:0;;;;;;;;;12249:87;;-1:-1:-1;;;12249:87:0;;:8;;:29;;:87;;12279:5;;12286:11;;12299:9;;12310:6;;12318:17;;12249:87;;;;680:131:11;737:26;;:::i;:::-;-1:-1:-1;;;;;782:22:11;;;:5;:22;;;:13;:22;;;;;;;;;775:29;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;775:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;775:29:11;;-1:-1:-1;775:29:11;;680:131;-1:-1:-1;;;680:131:11:o;12840:467:0:-;5702:34;;-1:-1:-1;;;;;5702:34:0;5693:4;5685:51;5677:91;;;;-1:-1:-1;;;5677:91:0;;;;;;;;;13110:10;2442:33;;:::i;:::-;-1:-1:-1;;;;;2478:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2442:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2442:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2442:56:0;;-1:-1:-1;2442:56:0;;-1:-1:-1;2533:34:0;;-1:-1:-1;2516:6:0;:13;;;:51;;;;;;;;;2508:84;;;;-1:-1:-1;;;2508:84:0;;;;;;;;;13143:12;;13153:1;4755:24;;;13143:12;4755:24;;;;;:31;;;4790:42;;4755:31;;:77;;;;;;;;;4747:118;;;;-1:-1:-1;;;4747:118:0;;;;;;;;;13171:129;;-1:-1:-1;;;13171:129:0;;:8;;:26;;:129;;13198:5;;13205:8;;13215:32;;13261:9;;13272:21;;13295:4;;13171:129;;;;11127:352;1061:9:39;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;5702:34:0;;-1:-1:-1;;;;;5702:34:0;5693:4;5685:51;5677:91;;;;-1:-1:-1;;;5677:91:0;;;;;;;;;11367:105;;-1:-1:-1;;;11367:105:0;;:8;;:39;;:105;;11407:5;;11414:11;;11427:9;;11438:6;;11446:17;;11465:6;;11367:105;;;;13698:369;5702:34;;-1:-1:-1;;;;;5702:34:0;5693:4;5685:51;5677:91;;;;-1:-1:-1;;;5677:91:0;;;;;;;;;13920:10;2442:33;;:::i;:::-;-1:-1:-1;;;;;2478:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2442:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2442:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2442:56:0;;-1:-1:-1;2442:56:0;;-1:-1:-1;2533:34:0;;-1:-1:-1;2516:6:0;:13;;;:51;;;;;;;;;2508:84;;;;-1:-1:-1;;;2508:84:0;;;;;;;;;13953:7;4790:42;4755:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4747:118;;;;-1:-1:-1;;;4747:118:0;;;;;;;;;13976:84;;-1:-1:-1;;;13976:84:0;;:8;;:30;;:84;;14007:5;;14014:7;;14023;;14032:11;;14045:8;;14055:4;;13976:84;;;;15444:167;15548:56;;-1:-1:-1;;;15548:56:0;;15525:4;;15548:11;;:35;;:56;;15525:4;;15591:12;;15548:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15548:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15548:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;15548:56:0;;;;;;;;400:115:11;490:10;450:7;476:25;;;:13;:25;;;;;:32;-1:-1:-1;;;;;476:32:11;400:115;:::o;1958:90::-;2026:15;;1958:90;:::o;14234:147:0:-;14305:7;5097:37;5066:5;:20;;;:11;:20;;;;;:27;;;;;;;;:68;;;;;;;;5058:100;;;;-1:-1:-1;;;5058:100:0;;;;;;;;;14328:46;;-1:-1:-1;;;14328:46:0;;:8;;:30;;:46;;14359:5;;14366:7;;14328:46;;;;1928:107:39;1061:9;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;2000:28;2019:8;2000:18;:28::i;:::-;1928:107;:::o;17494:226:0:-;1061:9:39;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;5702:34:0;;-1:-1:-1;;;;;5702:34:0;5693:4;5685:51;5677:91;;;;-1:-1:-1;;;5677:91:0;;;;;;;;;17638:75;;-1:-1:-1;;;17638:75:0;;:11;;:37;;:75;;17676:5;;17683:29;;17638:75;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17638:75:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17638:75:0;;;;17494:226;:::o;1741:134:11:-;-1:-1:-1;;;;;1834:34:11;1811:4;1834:34;;;:25;:34;;;;;;;1741:134::o;788:96:36:-;867:10;788:96;:::o;2136:225:39:-;-1:-1:-1;;;;;2209:22:39;;2201:73;;;;-1:-1:-1;;;2201:73:39;;;;;;;;;2310:6;;2289:38;;-1:-1:-1;;;;;2289:38:39;;;;2310:6;;2289:38;;2310:6;;2289:38;2337:6;:17;;-1:-1:-1;;;;;;2337:17:39;-1:-1:-1;;;;;2337:17:39;;;;;;;;;;2136:225::o;886:17640:0:-;;;;;;;;;;-1:-1:-1;886:17640:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;886:17640:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;886:17640:0;;;-1:-1:-1;886:17640:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;886:17640:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;886:17640:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:722;;429:3;422:4;414:6;410:17;406:27;396:2;;447:1;444;437:12;396:2;477:6;471:13;499:80;514:64;571:6;514:64;;;499:80;;;490:89;;596:5;621:6;614:5;607:21;651:4;643:6;639:17;629:27;;673:4;668:3;664:14;657:21;;726:6;773:3;765:4;757:6;753:17;748:3;744:27;741:36;738:2;;;790:1;787;780:12;738:2;815:1;800:217;825:6;822:1;819:13;800:217;;;883:3;905:48;949:3;937:10;905:48;;;893:61;;-1:-1;977:4;968:14;;;;996;;;;;847:1;840:9;800:217;;;804:14;389:634;;;;;;;;1050:615;;1165:3;1158:4;1150:6;1146:17;1142:27;1132:2;;1183:1;1180;1173:12;1132:2;1207:3;1225:78;1240:62;1295:6;1240:62;;1225:78;1216:87;;1320:5;1379:6;1426:3;1418:4;1410:6;1406:17;1401:3;1397:27;1394:36;1391:2;;;1443:1;1440;1433:12;1391:2;1468:1;1453:206;1478:6;1475:1;1472:13;1453:206;;;1536:3;1558:37;1591:3;1579:10;1558:37;;;1546:50;;-1:-1;1619:4;1610:14;;;;1638;;;;;1500:1;1493:9;1453:206;;1691:722;;1819:3;1812:4;1804:6;1800:17;1796:27;1786:2;;1837:1;1834;1827:12;1786:2;1867:6;1861:13;1889:80;1904:64;1961:6;1904:64;;1889:80;1880:89;;1986:5;2011:6;2004:5;1997:21;2041:4;2033:6;2029:17;2019:27;;2063:4;2058:3;2054:14;2047:21;;2116:6;2163:3;2155:4;2147:6;2143:17;2138:3;2134:27;2131:36;2128:2;;;2180:1;2177;2170:12;2128:2;2205:1;2190:217;2215:6;2212:1;2209:13;2190:217;;;2273:3;2295:48;2339:3;2327:10;2295:48;;;2283:61;;-1:-1;2367:4;2358:14;;;;2386;;;;;2237:1;2230:9;2190:217;;2439:722;;2567:3;2560:4;2552:6;2548:17;2544:27;2534:2;;2585:1;2582;2575:12;2534:2;2615:6;2609:13;2637:80;2652:64;2709:6;2652:64;;2637:80;2628:89;;2734:5;2759:6;2752:5;2745:21;2789:4;2781:6;2777:17;2767:27;;2811:4;2806:3;2802:14;2795:21;;2864:6;2911:3;2903:4;2895:6;2891:17;2886:3;2882:27;2879:36;2876:2;;;2928:1;2925;2918:12;2876:2;2953:1;2938:217;2963:6;2960:1;2957:13;2938:217;;;3021:3;3043:48;3087:3;3075:10;3043:48;;;3031:61;;-1:-1;3115:4;3106:14;;;;3134;;;;;2985:1;2978:9;2938:217;;3169:130;3236:20;;3261:33;3236:20;3261:33;;3306:134;3384:13;;3402:33;3384:13;3402:33;;3448:440;;3549:3;3542:4;3534:6;3530:17;3526:27;3516:2;;3567:1;3564;3557:12;3516:2;3604:6;3591:20;3626:64;3641:48;3682:6;3641:48;;3626:64;3617:73;;3710:6;3703:5;3696:21;3746:4;3738:6;3734:17;3779:4;3772:5;3768:16;3814:3;3805:6;3800:3;3796:16;3793:25;3790:2;;;3831:1;3828;3821:12;3790:2;3841:41;3875:6;3870:3;3865;3841:41;;;3509:379;;;;;;;;3897:442;;4009:3;4002:4;3994:6;3990:17;3986:27;3976:2;;4027:1;4024;4017:12;3976:2;4057:6;4051:13;4079:64;4094:48;4135:6;4094:48;;4079:64;4070:73;;4163:6;4156:5;4149:21;4199:4;4191:6;4187:17;4232:4;4225:5;4221:16;4267:3;4258:6;4253:3;4249:16;4246:25;4243:2;;;4284:1;4281;4274:12;4243:2;4294:39;4326:6;4321:3;4316;4294:39;;4347:170;4443:13;;4461:51;4443:13;4461:51;;4560:695;;4687:4;4675:9;4670:3;4666:19;4662:30;4659:2;;;4705:1;4702;4695:12;4659:2;4723:20;4738:4;4723:20;;;4714:29;-1:-1;4804:1;4835:78;4909:3;4889:9;4835:78;;;4811:103;;-1:-1;4982:2;5015:60;5071:3;5047:22;;;5015:60;;;5008:4;5001:5;4997:16;4990:86;4935:152;5140:2;5173:60;5229:3;5220:6;5209:9;5205:22;5173:60;;;5166:4;5159:5;5155:16;5148:86;5097:148;4653:602;;;;;5540:128;5606:20;;5631:32;5606:20;5631:32;;5675:241;;5779:2;5767:9;5758:7;5754:23;5750:32;5747:2;;;5795:1;5792;5785:12;5747:2;5830:1;5847:53;5892:7;5872:9;5847:53;;;5837:63;5741:175;-1:-1;;;;5741:175;5923:470;;;6053:2;6041:9;6032:7;6028:23;6024:32;6021:2;;;6069:1;6066;6059:12;6021:2;6104:1;6121:53;6166:7;6146:9;6121:53;;;6111:63;;6083:97;6239:2;6228:9;6224:18;6211:32;-1:-1;;;;;6255:6;6252:30;6249:2;;;6295:1;6292;6285:12;6249:2;6315:62;6369:7;6360:6;6349:9;6345:22;6315:62;;;6305:72;;6190:193;6015:378;;;;;;6400:496;;;6541:2;6529:9;6520:7;6516:23;6512:32;6509:2;;;6557:1;6554;6547:12;6509:2;6592:1;6609:64;6665:7;6645:9;6609:64;;;6599:74;;6571:108;6731:2;6720:9;6716:18;6710:25;-1:-1;;;;;6747:6;6744:30;6741:2;;;6787:1;6784;6777:12;6741:2;6807:73;6872:7;6863:6;6852:9;6848:22;6807:73;;6903:699;;;;7059:2;7047:9;7038:7;7034:23;7030:32;7027:2;;;7075:1;7072;7065:12;7027:2;7110:1;7127:53;7172:7;7152:9;7127:53;;;7117:63;;7089:97;7245:2;7234:9;7230:18;7217:32;-1:-1;;;;;7261:6;7258:30;7255:2;;;7301:1;7298;7291:12;7255:2;7321:62;7375:7;7366:6;7355:9;7351:22;7321:62;;;7311:72;;7196:193;7448:2;7437:9;7433:18;7420:32;-1:-1;;;;;7464:6;7461:30;7458:2;;;7504:1;7501;7494:12;7458:2;7524:62;7578:7;7569:6;7558:9;7554:22;7524:62;;;7514:72;;7399:193;7021:581;;;;;;7609:366;;;7730:2;7718:9;7709:7;7705:23;7701:32;7698:2;;;7746:1;7743;7736:12;7698:2;7781:1;7798:53;7843:7;7823:9;7798:53;;;7788:63;;7760:97;7888:2;7906:53;7951:7;7942:6;7931:9;7927:22;7906:53;;7982:392;;8122:2;8110:9;8101:7;8097:23;8093:32;8090:2;;;8138:1;8135;8128:12;8090:2;8173:24;;-1:-1;;;;;8206:30;;8203:2;;;8249:1;8246;8239:12;8203:2;8269:89;8350:7;8341:6;8330:9;8326:22;8269:89;;8381:657;;;8563:2;8551:9;8542:7;8538:23;8534:32;8531:2;;;8579:1;8576;8569:12;8531:2;8614:24;;-1:-1;;;;;8647:30;;8644:2;;;8690:1;8687;8680:12;8644:2;8710:89;8791:7;8782:6;8771:9;8767:22;8710:89;;;8700:99;;8593:212;8857:2;8846:9;8842:18;8836:25;-1:-1;;;;;8873:6;8870:30;8867:2;;;8913:1;8910;8903:12;8867:2;8933:89;9014:7;9005:6;8994:9;8990:22;8933:89;;9045:392;;9185:2;9173:9;9164:7;9160:23;9156:32;9153:2;;;9201:1;9198;9191:12;9153:2;9236:24;;-1:-1;;;;;9269:30;;9266:2;;;9312:1;9309;9302:12;9266:2;9332:89;9413:7;9404:6;9393:9;9389:22;9332:89;;9444:241;;9548:2;9536:9;9527:7;9523:23;9519:32;9516:2;;;9564:1;9561;9554:12;9516:2;9599:1;9616:53;9661:7;9641:9;9616:53;;9692:845;;;;;;9872:3;9860:9;9851:7;9847:23;9843:33;9840:2;;;9889:1;9886;9879:12;9840:2;9924:1;9941:53;9986:7;9966:9;9941:53;;;9931:63;;9903:97;10031:2;10049:53;10094:7;10085:6;10074:9;10070:22;10049:53;;;10039:63;;10010:98;10139:2;10157:53;10202:7;10193:6;10182:9;10178:22;10157:53;;;10147:63;;10118:98;10247:2;10265:52;10309:7;10300:6;10289:9;10285:22;10265:52;;;10255:62;;10226:97;10382:3;10371:9;10367:19;10354:33;-1:-1;;;;;10399:6;10396:30;10393:2;;;10439:1;10436;10429:12;10393:2;10459:62;10513:7;10504:6;10493:9;10489:22;10459:62;;;10449:72;;10333:194;9834:703;;;;;;;;;10544:719;;;;;10707:3;10695:9;10686:7;10682:23;10678:33;10675:2;;;10724:1;10721;10714:12;10675:2;10759:1;10776:53;10821:7;10801:9;10776:53;;;10766:63;;10738:97;10866:2;10884:53;10929:7;10920:6;10909:9;10905:22;10884:53;;;10874:63;;10845:98;10974:2;10992:52;11036:7;11027:6;11016:9;11012:22;10992:52;;;10982:62;;10953:97;11109:2;11098:9;11094:18;11081:32;-1:-1;;;;;11125:6;11122:30;11119:2;;;11165:1;11162;11155:12;11119:2;11185:62;11239:7;11230:6;11219:9;11215:22;11185:62;;;11175:72;;11060:193;10669:594;;;;;;;;11270:613;;;;;11423:3;11411:9;11402:7;11398:23;11394:33;11391:2;;;11440:1;11437;11430:12;11391:2;11475:1;11492:53;11537:7;11517:9;11492:53;;;11482:63;;11454:97;11582:2;11600:52;11644:7;11635:6;11624:9;11620:22;11600:52;;;11590:62;;11561:97;11689:2;11707:52;11751:7;11742:6;11731:9;11727:22;11707:52;;;11697:62;;11668:97;11796:2;11814:53;11859:7;11850:6;11839:9;11835:22;11814:53;;11890:739;;;;;;12060:3;12048:9;12039:7;12035:23;12031:33;12028:2;;;12077:1;12074;12067:12;12028:2;12112:1;12129:53;12174:7;12154:9;12129:53;;;12119:63;;12091:97;12219:2;12237:52;12281:7;12272:6;12261:9;12257:22;12237:52;;;12227:62;;12198:97;12326:2;12344:52;12388:7;12379:6;12368:9;12364:22;12344:52;;;12334:62;;12305:97;12433:2;12451:53;12496:7;12487:6;12476:9;12472:22;12451:53;;;12441:63;;12412:98;12541:3;12560:53;12605:7;12596:6;12585:9;12581:22;12560:53;;12636:345;;12749:2;12737:9;12728:7;12724:23;12720:32;12717:2;;;12765:1;12762;12755:12;12717:2;12800:31;;-1:-1;;;;;12840:30;;12837:2;;;12883:1;12880;12873:12;12837:2;12903:62;12957:7;12948:6;12937:9;12933:22;12903:62;;12988:574;;;13127:2;13115:9;13106:7;13102:23;13098:32;13095:2;;;13143:1;13140;13133:12;13095:2;13178:31;;-1:-1;;;;;13218:30;;13215:2;;;13261:1;13258;13251:12;13215:2;13281:62;13335:7;13326:6;13315:9;13311:22;13281:62;;13569:317;;13711:2;13699:9;13690:7;13686:23;13682:32;13679:2;;;13727:1;13724;13717:12;13679:2;13762:1;13779:91;13862:7;13842:9;13779:91;;14141:263;;14256:2;14244:9;14235:7;14231:23;14227:32;14224:2;;;14272:1;14269;14262:12;14224:2;14307:1;14324:64;14380:7;14360:9;14324:64;;14411:366;;;14532:2;14520:9;14511:7;14507:23;14503:32;14500:2;;;14548:1;14545;14538:12;14500:2;14583:1;14600:53;14645:7;14625:9;14600:53;;15157:930;;;;;15373:3;15361:9;15352:7;15348:23;15344:33;15341:2;;;15390:1;15387;15380:12;15341:2;15425:1;15442:64;15498:7;15478:9;15442:64;;;15432:74;;15404:108;15543:2;15561:64;15617:7;15608:6;15597:9;15593:22;15561:64;;;15551:74;;15522:109;15683:2;15672:9;15668:18;15662:25;-1:-1;;;;;15699:6;15696:30;15693:2;;;15739:1;15736;15729:12;15693:2;15759:89;15840:7;15831:6;15820:9;15816:22;15759:89;;;15749:99;;15641:213;15906:2;15895:9;15891:18;15885:25;-1:-1;;;;;15922:6;15919:30;15916:2;;;15962:1;15959;15952:12;15916:2;15982:89;16063:7;16054:6;16043:9;16039:22;15982:89;;16094:595;;;;16241:2;16229:9;16220:7;16216:23;16212:32;16209:2;;;16257:1;16254;16247:12;16209:2;16292:1;16309:53;16354:7;16334:9;16309:53;;;16299:63;;16271:97;16399:2;16417:53;16462:7;16453:6;16442:9;16438:22;16417:53;;16696:996;;;;;;16908:3;16896:9;16887:7;16883:23;16879:33;16876:2;;;16925:1;16922;16915:12;16876:2;16960:1;16977:52;17021:7;17001:9;16977:52;;;16967:62;;16939:96;17066:2;17084:53;17129:7;17120:6;17109:9;17105:22;17084:53;;;17074:63;;17045:98;17174:2;17192:76;17260:7;17251:6;17240:9;17236:22;17192:76;;;17182:86;;17153:121;17333:3;17322:9;17318:19;17305:33;-1:-1;;;;;17350:6;17347:30;17344:2;;;17390:1;17387;17380:12;17344:2;17410:62;17464:7;17455:6;17444:9;17440:22;17410:62;;;17400:72;;17284:194;17537:3;17526:9;17522:19;17509:33;-1:-1;;;;;17554:6;17551:30;17548:2;;;17594:1;17591;17584:12;17700:173;;17787:46;17829:3;17821:6;17787:46;;;-1:-1;;17862:4;17853:14;;17780:93;17882:173;;17969:46;18011:3;18003:6;17969:46;;18262:269;;18395:96;18487:3;18479:6;18395:96;;;-1:-1;;18520:4;18511:14;;18388:143;18834:265;;18989:104;19089:3;19081:6;18989:104;;19289:103;19362:24;19380:5;19362:24;;;19357:3;19350:37;19344:48;;;19796:690;;19941:54;19989:5;19941:54;;;20008:86;20087:6;20082:3;20008:86;;;20001:93;;20115:56;20165:5;20115:56;;;20191:7;20219:1;20204:260;20229:6;20226:1;20223:13;20204:260;;;20296:6;20290:13;20317:63;20376:3;20361:13;20317:63;;;20310:70;;20397:60;20450:6;20397:60;;;20387:70;-1:-1;;20251:1;20244:9;20204:260;;;-1:-1;20477:3;;19920:566;-1:-1;;;;;19920:566;20525:654;;20656:50;20700:5;20656:50;;;20719:76;20788:6;20783:3;20719:76;;;20712:83;;20816:52;20862:5;20816:52;;;20888:7;20916:1;20901:256;20926:6;20923:1;20920:13;20901:256;;;20993:6;20987:13;21014:63;21073:3;21058:13;21014:63;;;21007:70;;21094:56;21143:6;21094:56;;;21084:66;-1:-1;;20948:1;20941:9;20901:256;;21220:684;21361:52;21407:5;21361:52;;;21426:92;21511:6;21506:3;21426:92;;;21419:99;;21539:54;21587:5;21539:54;;;21613:7;21641:1;21626:266;21651:6;21648:1;21645:13;21626:266;;;21718:6;21712:13;21739:71;21806:3;21791:13;21739:71;;;21732:78;;21827:58;21878:6;21827:58;;;21817:68;-1:-1;;21673:1;21666:9;21626:266;;21943:690;;22088:54;22136:5;22088:54;;;22155:86;22234:6;22229:3;22155:86;;;22148:93;;22262:56;22312:5;22262:56;;;22338:7;22366:1;22351:260;22376:6;22373:1;22370:13;22351:260;;;22443:6;22437:13;22464:63;22523:3;22508:13;22464:63;;;22457:70;;22544:60;22597:6;22544:60;;;22534:70;-1:-1;;22398:1;22391:9;22351:260;;22672:654;;22803:50;22847:5;22803:50;;;22866:76;22935:6;22930:3;22866:76;;;22859:83;;22963:52;23009:5;22963:52;;;23035:7;23063:1;23048:256;23073:6;23070:1;23067:13;23048:256;;;23140:6;23134:13;23161:63;23220:3;23205:13;23161:63;;;23154:70;;23241:56;23290:6;23241:56;;;23231:66;-1:-1;;23095:1;23088:9;23048:256;;23409:838;;23586:73;23653:5;23586:73;;;23672:99;23764:6;23759:3;23672:99;;;23665:106;;23792:75;23861:5;23792:75;;;23887:7;23915:1;23900:325;23925:6;23922:1;23919:13;23900:325;;;23992:6;23986:13;24013:109;24118:3;24103:13;24013:109;;;24006:116;;24139:79;24211:6;24139:79;;;24129:89;-1:-1;;23947:1;23940:9;23900:325;;24330:862;;24515:73;24582:5;24515:73;;;24601:107;24701:6;24696:3;24601:107;;;24594:114;;24729:75;24798:5;24729:75;;;24824:7;24852:1;24837:333;24862:6;24859:1;24856:13;24837:333;;;24929:6;24923:13;24950:117;25063:3;25048:13;24950:117;;;24943:124;;25084:79;25156:6;25084:79;;;25074:89;-1:-1;;24884:1;24877:9;24837:333;;25285:1052;;25480:79;25553:5;25480:79;;;25572:111;25676:6;25671:3;25572:111;;;25565:118;;25706:3;25748:4;25740:6;25736:17;25731:3;25727:27;25775:81;25850:5;25775:81;;;25876:7;25904:1;25889:409;25914:6;25911:1;25908:13;25889:409;;;25976:9;25970:4;25966:20;25961:3;25954:33;26021:6;26015:13;26043:118;26156:4;26141:13;26043:118;;;26035:126;;26178:85;26256:6;26178:85;;;26286:4;26277:14;;;;;26168:95;-1:-1;;25936:1;25929:9;25889:409;;;-1:-1;26311:4;;25459:878;-1:-1;;;;;;;25459:878;26376:690;;26521:54;26569:5;26521:54;;;26588:86;26667:6;26662:3;26588:86;;;26581:93;;26695:56;26745:5;26695:56;;;26771:7;26799:1;26784:260;26809:6;26806:1;26803:13;26784:260;;;26876:6;26870:13;26897:63;26956:3;26941:13;26897:63;;;26890:70;;26977:60;27030:6;26977:60;;;26967:70;-1:-1;;26831:1;26824:9;26784:260;;27105:654;;27236:50;27280:5;27236:50;;;27299:76;27368:6;27363:3;27299:76;;;27292:83;;27396:52;27442:5;27396:52;;;27468:7;27496:1;27481:256;27506:6;27503:1;27500:13;27481:256;;;27573:6;27567:13;27594:63;27653:3;27638:13;27594:63;;;27587:70;;27674:56;27723:6;27674:56;;;27664:66;-1:-1;;27528:1;27521:9;27481:256;;27767:104;27844:21;27859:5;27844:21;;27878:103;27951:24;27969:5;27951:24;;28234:343;;28344:38;28376:5;28344:38;;;28394:70;28457:6;28452:3;28394:70;;;28387:77;;28469:52;28514:6;28509:3;28502:4;28495:5;28491:16;28469:52;;;28542:29;28564:6;28542:29;;;28533:39;;;;28324:253;-1:-1;;;28324:253;29610:162;29706:60;29760:5;29706:60;;29779:142;29865:50;29909:5;29865:50;;29928:148;30017:53;30064:5;30017:53;;30246:146;30334:52;30380:5;30334:52;;30561:465;;30721:67;30785:2;30780:3;30721:67;;;30821:66;30801:87;;-1:-1;;;30917:2;30908:12;;30901:88;31017:2;31008:12;;30707:319;-1:-1;;30707:319;31035:364;;31195:67;31259:2;31254:3;31195:67;;;31295:66;31275:87;;31390:2;31381:12;;31181:218;-1:-1;;31181:218;31408:465;;31568:67;31632:2;31627:3;31568:67;;;31668:66;31648:87;;-1:-1;;;31764:2;31755:12;;31748:88;31864:2;31855:12;;31554:319;-1:-1;;31554:319;31882:465;;32042:67;32106:2;32101:3;32042:67;;;32142:66;32122:87;;-1:-1;;;32238:2;32229:12;;32222:88;32338:2;32329:12;;32028:319;-1:-1;;32028:319;32356:364;;32516:67;32580:2;32575:3;32516:67;;;32616:66;32596:87;;32711:2;32702:12;;32502:218;-1:-1;;32502:218;32729:364;;32889:67;32953:2;32948:3;32889:67;;;32989:66;32969:87;;33084:2;33075:12;;32875:218;-1:-1;;32875:218;33102:364;;33262:67;33326:2;33321:3;33262:67;;;-1:-1;;;33342:87;;33457:2;33448:12;;33248:218;-1:-1;;33248:218;33475:465;;33635:67;33699:2;33694:3;33635:67;;;33735:66;33715:87;;-1:-1;;;33831:2;33822:12;;33815:88;33931:2;33922:12;;33621:319;-1:-1;;33621:319;33949:465;;34109:67;34173:2;34168:3;34109:67;;;34209:66;34189:87;;-1:-1;;;34305:2;34296:12;;34289:88;34405:2;34396:12;;34095:319;-1:-1;;34095:319;34423:364;;34583:67;34647:2;34642:3;34583:67;;;-1:-1;;;34663:87;;34778:2;34769:12;;34569:218;-1:-1;;34569:218;34796:364;;34956:67;35020:2;35015:3;34956:67;;;35056:66;35036:87;;35151:2;35142:12;;34942:218;-1:-1;;34942:218;35169:364;;35329:67;35393:2;35388:3;35329:67;;;-1:-1;;;35409:87;;35524:2;35515:12;;35315:218;-1:-1;;35315:218;35542:364;;35702:67;35766:2;35761:3;35702:67;;;35802:66;35782:87;;35897:2;35888:12;;35688:218;-1:-1;;35688:218;35915:364;;36075:67;36139:2;36134:3;36075:67;;;36175:66;36155:87;;36270:2;36261:12;;36061:218;-1:-1;;36061:218;36288:465;;36448:67;36512:2;36507:3;36448:67;;;36548:66;36528:87;;-1:-1;;;36644:2;36635:12;;36628:88;36744:2;36735:12;;36434:319;-1:-1;;36434:319;36840:1120;37072:22;;36840:1120;;37005:4;36996:14;;;37100:62;37000:3;37072:22;37100:62;;;37025:143;37248:4;37241:5;37237:16;37231:23;37260:63;37317:4;37312:3;37308:14;37294:12;37260:63;;;37178:151;37406:4;37399:5;37395:16;37389:23;37418:63;37475:4;37470:3;37466:14;37452:12;37418:63;;;37339:148;37572:4;37565:5;37561:16;37555:23;37624:3;37618:4;37614:14;37607:4;37602:3;37598:14;37591:38;37644:99;37738:4;37724:12;37644:99;;;37636:107;;37497:258;37830:4;37823:5;37819:16;37813:23;37842:86;37922:4;37917:3;37913:14;37899:12;37842:86;;;-1:-1;37951:4;36978:982;-1:-1;;;36978:982;37967:122;38066:18;;38060:29;38167:1532;38393:22;;38167:1532;;38324:5;38315:15;;;38421:62;38319:3;38393:22;38421:62;;;38345:144;38568:4;38561:5;38557:16;38551:23;38580:63;38637:4;38632:3;38628:14;38614:12;38580:63;;;38499:150;38728:4;38721:5;38717:16;38711:23;38740:63;38797:4;38792:3;38788:14;38774:12;38740:63;;;38659:150;38886:4;38879:5;38875:16;38869:23;38898:61;38953:4;38948:3;38944:14;38930:12;38898:61;;;38819:146;39039:4;39032:5;39028:16;39022:23;39051:61;39106:4;39101:3;39097:14;39083:12;39051:61;;;38975:143;39198:4;39191:5;39187:16;39181:23;39210:63;39267:4;39262:3;39258:14;39244:12;39210:63;;;39128:151;39354:4;39347:5;39343:16;39337:23;39366:76;39436:4;39431:3;39427:14;39413:12;39366:76;;;39289:159;39522:4;39515:5;39511:16;39505:23;39574:3;39568:4;39564:14;39557:4;39552:3;39548:14;39541:38;39594:67;39656:4;39642:12;39594:67;;;39586:75;38297:1402;-1:-1;;;;;38297:1402;39775:655;39985:22;;39908:4;39899:14;;;40013:78;39903:3;39985:22;40013:78;;;39928:169;40177:4;40170:5;40166:16;40160:23;40189:63;40246:4;40241:3;40237:14;40223:12;40189:63;;;40107:151;40334:4;40327:5;40323:16;40317:23;40346:63;40403:4;40398:3;40394:14;40380:12;40346:63;;;40268:147;39881:549;;;;41263:1201;41480:22;;41263:1201;;41412:4;41403:14;;;41508:62;41407:3;41480:22;41508:62;;;41432:144;41651:4;41644:5;41640:16;41634:23;41663:78;41735:4;41730:3;41726:14;41712:12;41663:78;;;41586:161;41822:4;41815:5;41811:16;41805:23;41874:3;41868:4;41864:14;41857:4;41852:3;41848:14;41841:38;41894:67;41956:4;41942:12;41894:67;;;41886:75;;41757:216;42049:4;42042:5;42038:16;42032:23;42061:63;42118:4;42113:3;42109:14;42095:12;42061:63;;;41983:147;42209:4;42202:5;42198:16;42192:23;42261:3;42255:4;42251:14;42244:4;42239:3;42235:14;42228:38;42281:145;42421:4;42407:12;42281:145;;42534:1249;42759:22;;42534:1249;;42691:4;42682:14;;;42787:70;42686:3;42759:22;42787:70;;;42711:152;42938:4;42931:5;42927:16;42921:23;42950:86;43030:4;43025:3;43021:14;43007:12;42950:86;;;42873:169;43117:4;43110:5;43106:16;43100:23;43169:3;43163:4;43159:14;43152:4;43147:3;43143:14;43136:38;43189:75;43259:4;43245:12;43189:75;;;43181:83;;43052:224;43352:4;43345:5;43341:16;43335:23;43364:71;43429:4;43424:3;43420:14;43406:12;43364:71;;;43286:155;43520:4;43513:5;43509:16;43503:23;43572:3;43566:4;43562:14;43555:4;43550:3;43546:14;43539:38;43592:153;43740:4;43726:12;43592:153;;43867:1020;44094:22;;43867:1020;;44016:4;44007:14;;;44122:62;44011:3;44094:22;44122:62;;;44036:154;44266:4;44259:5;44255:16;44249:23;44318:3;44312:4;44308:14;44301:4;44296:3;44292:14;44285:38;44338:99;44432:4;44418:12;44338:99;;;44330:107;;44200:249;44524:4;44517:5;44513:16;44507:23;44576:3;44570:4;44566:14;44559:4;44554:3;44550:14;44543:38;44596:99;44690:4;44676:12;44596:99;;;44588:107;;44459:248;44780:4;44773:5;44769:16;44763:23;44792:63;44849:4;44844:3;44840:14;44826:12;44792:63;;45370:100;45441:23;45458:5;45441:23;;45602:213;45720:2;45705:18;;45734:71;45709:9;45778:6;45734:71;;45822:408;45986:2;45971:18;;46000:71;45975:9;46044:6;46000:71;;;46119:9;46113:4;46109:20;46104:2;46093:9;46089:18;46082:48;46144:76;46215:4;46206:6;46144:76;;46237:468;46431:2;46416:18;;46445:71;46420:9;46489:6;46445:71;;;46564:9;46558:4;46554:20;46549:2;46538:9;46534:18;46527:48;46589:106;46690:4;46681:6;46589:106;;46712:361;46880:2;46894:47;;;46865:18;;46955:108;46865:18;47049:6;46955:108;;47080:620;47326:2;47340:47;;;47311:18;;47401:108;47311:18;47495:6;47401:108;;;47393:116;;47557:9;47551:4;47547:20;47542:2;47531:9;47527:18;47520:48;47582:108;47685:4;47676:6;47582:108;;47707:361;47875:2;47889:47;;;47860:18;;47950:108;47860:18;48044:6;47950:108;;48075:461;48293:2;48307:47;;;48278:18;;48368:158;48278:18;48512:6;48368:158;;48543:201;48655:2;48640:18;;48669:65;48644:9;48707:6;48669:65;;48751:297;48887:2;48901:47;;;48872:18;;48962:76;48872:18;49024:6;48962:76;;49055:516;49245:2;49259:47;;;49230:18;;49320:84;49230:18;49390:6;49320:84;;;49312:92;;49452:9;49446:4;49442:20;49437:2;49426:9;49422:18;49415:48;49477:84;49556:4;49547:6;49477:84;;49578:407;49769:2;49783:47;;;49754:18;;49844:131;49754:18;49844:131;;49992:407;50183:2;50197:47;;;50168:18;;50258:131;50168:18;50258:131;;50406:407;50597:2;50611:47;;;50582:18;;50672:131;50582:18;50672:131;;50820:407;51011:2;51025:47;;;50996:18;;51086:131;50996:18;51086:131;;51234:407;51425:2;51439:47;;;51410:18;;51500:131;51410:18;51500:131;;51648:407;51839:2;51853:47;;;51824:18;;51914:131;51824:18;51914:131;;52062:407;52253:2;52267:47;;;52238:18;;52328:131;52238:18;52328:131;;52476:407;52667:2;52681:47;;;52652:18;;52742:131;52652:18;52742:131;;52890:407;53081:2;53095:47;;;53066:18;;53156:131;53066:18;53156:131;;53304:407;53495:2;53509:47;;;53480:18;;53570:131;53480:18;53570:131;;53718:407;53909:2;53923:47;;;53894:18;;53984:131;53894:18;53984:131;;54132:407;54323:2;54337:47;;;54308:18;;54398:131;54308:18;54398:131;;54546:407;54737:2;54751:47;;;54722:18;;54812:131;54722:18;54812:131;;54960:407;55151:2;55165:47;;;55136:18;;55226:131;55136:18;55226:131;;55374:407;55565:2;55579:47;;;55550:18;;55640:131;55550:18;55640:131;;55788:389;55970:2;55984:47;;;55955:18;;56045:122;55955:18;56153:6;56045:122;;56184:269;56330:2;56315:18;;56344:99;56319:9;56416:6;56344:99;;56460:388;56634:2;56619:18;;56648:99;56623:9;56720:6;56648:99;;;56758:80;56834:2;56823:9;56819:18;56810:6;56758:80;;;56605:243;;;;;;56855:591;57075:2;57060:18;;57089:99;57064:9;57161:6;57089:99;;;57199:80;57275:2;57264:9;57260:18;57251:6;57199:80;;;57327:9;57321:4;57317:20;57312:2;57301:9;57297:18;57290:48;57352:84;57431:4;57422:6;57352:84;;57453:795;57719:3;57704:19;;57734:99;57708:9;57806:6;57734:99;;;57844:80;57920:2;57909:9;57905:18;57896:6;57844:80;;;57972:9;57966:4;57962:20;57957:2;57946:9;57942:18;57935:48;57997:84;58076:4;58067:6;57997:84;;;57989:92;;58129:9;58123:4;58119:20;58114:2;58103:9;58099:18;58092:48;58154:84;58233:4;58224:6;58154:84;;;58146:92;57690:558;-1:-1;;;;;;57690:558;58255:507;58457:2;58442:18;;58471:99;58446:9;58543:6;58471:99;;;58581:80;58657:2;58646:9;58642:18;58633:6;58581:80;;;58672;58748:2;58737:9;58733:18;58724:6;58672:80;;58769:388;58943:2;58928:18;;58957:99;58932:9;59029:6;58957:99;;;59067:80;59143:2;59132:9;59128:18;59119:6;59067:80;;59164:947;59466:3;59451:19;;59481:99;59455:9;59553:6;59481:99;;;59591:80;59667:2;59656:9;59652:18;59643:6;59591:80;;;59682;59758:2;59747:9;59743:18;59734:6;59682:80;;;59773;59849:2;59838:9;59834:18;59825:6;59773:80;;;59864:79;59938:3;59927:9;59923:19;59914:6;59864:79;;;59992:9;59986:4;59982:20;59976:3;59965:9;59961:19;59954:49;60017:84;60096:4;60087:6;60017:84;;;60009:92;59437:674;-1:-1;;;;;;;;59437:674;60118:827;60392:3;60377:19;;60407:99;60381:9;60479:6;60407:99;;;60517:80;60593:2;60582:9;60578:18;60569:6;60517:80;;;60608;60684:2;60673:9;60669:18;60660:6;60608:80;;;60699:78;60773:2;60762:9;60758:18;60749:6;60699:78;;;60826:9;60820:4;60816:20;60810:3;60799:9;60795:19;60788:49;60851:84;60930:4;60921:6;60851:84;;;60843:92;60363:582;-1:-1;;;;;;;60363:582;60952:739;61206:3;61191:19;;61221:99;61195:9;61293:6;61221:99;;;61331:80;61407:2;61396:9;61392:18;61383:6;61331:80;;;61422:78;61496:2;61485:9;61481:18;61472:6;61422:78;;;61511;61585:2;61574:9;61570:18;61561:6;61511:78;;;61600:81;61676:3;61665:9;61661:19;61652:6;61600:81;;61698:859;61980:3;61965:19;;61995:99;61969:9;62067:6;61995:99;;;62105:80;62181:2;62170:9;62166:18;62157:6;62105:80;;;62196:78;62270:2;62259:9;62255:18;62246:6;62196:78;;;62285;62359:2;62348:9;62344:18;62335:6;62285:78;;;62374:81;62450:3;62439:9;62435:19;62426:6;62374:81;;;62466;62542:3;62531:9;62527:19;62518:6;62466:81;;62959:507;63161:2;63146:18;;63175:99;63150:9;63247:6;63175:99;;;63285:80;63361:2;63350:9;63346:18;63337:6;63285:80;;63987:711;64235:3;64220:19;;64250:99;64224:9;64322:6;64250:99;;;64360:80;64436:2;64425:9;64421:18;64412:6;64360:80;;;64451;64527:2;64516:9;64512:18;64503:6;64451:80;;;64579:9;64573:4;64569:20;64564:2;64553:9;64549:18;64542:48;64604:84;64683:4;64674:6;64604:84;;64705:1123;65071:3;65056:19;;65086:99;65060:9;65158:6;65086:99;;;65196:78;65270:2;65259:9;65255:18;65246:6;65196:78;;;65285:80;65361:2;65350:9;65346:18;65337:6;65285:80;;;65376:126;65498:2;65487:9;65483:18;65474:6;65376:126;;;65551:9;65545:4;65541:20;65535:3;65524:9;65520:19;65513:49;65576:84;65655:4;65646:6;65576:84;;;65568:92;;65709:9;65703:4;65699:20;65693:3;65682:9;65678:19;65671:49;65734:84;65813:4;65804:6;65734:84;;65835:373;66009:2;66023:47;;;65994:18;;66084:114;65994:18;66184:6;66084:114;;66215:357;66381:2;66395:47;;;66366:18;;66456:106;66366:18;66548:6;66456:106;;66579:492;66781:2;66795:47;;;66766:18;;66856:114;66766:18;66956:6;66856:114;;;66848:122;;66981:80;67057:2;67046:9;67042:18;67033:6;66981:80;;67078:213;67196:2;67181:18;;67210:71;67185:9;67254:6;67210:71;;67298:843;67600:3;67585:19;;67615:71;67589:9;67659:6;67615:71;;;67697:72;67765:2;67754:9;67750:18;67741:6;67697:72;;;67817:9;67811:4;67807:20;67802:2;67791:9;67787:18;67780:48;67842:108;67945:4;67936:6;67842:108;;;67834:116;;67998:9;67992:4;67988:20;67983:2;67972:9;67968:18;67961:48;68023:108;68126:4;68117:6;68023:108;;68148:256;68210:2;68204:9;68236:17;;;-1:-1;;;;;68296:34;;68332:22;;;68293:62;68290:2;;;68368:1;68365;68358:12;68290:2;68384;68377:22;68188:216;;-1:-1;68188:216;68411:304;;-1:-1;;;;;68562:6;68559:30;68556:2;;;68602:1;68599;68592:12;68556:2;-1:-1;68637:4;68625:17;;;68690:15;;68493:222;68722:244;;-1:-1;;;;;68871:6;68868:30;68865:2;;;68911:1;68908;68901:12;68865:2;-1:-1;68946:4;68934:17;;68802:164;69595:321;;-1:-1;;;;;69730:6;69727:30;69724:2;;;69770:1;69767;69760:12;69724:2;-1:-1;69901:4;69837;69814:17;;;;-1:-1;;69810:33;69891:15;;69661:255;69923:147;70043:4;70034:14;;69991:79;71271:133;71370:12;;71341:63;71555:107;-1:-1;71649:3;;71627:35;72116:134;-1:-1;72237:3;;72215:35;73859:168;73967:19;;;74016:4;74007:14;;73960:67;76543:91;;76605:24;76623:5;76605:24;;76641:85;76707:13;76700:21;;76683:43;76812:156;76899:5;76905:58;76899:5;76905:58;;76975:136;77052:5;77058:48;77052:5;77058:48;;77118:142;77198:5;77204:51;77198:5;77204:51;;77267:140;77346:5;77352:50;77346:5;77352:50;;77414:121;-1:-1;;;;;77476:54;;77459:76;77621:96;-1:-1;;;;;77682:30;;77665:52;77724:156;;77826:49;77869:5;77826:49;;77887:136;;77979:39;78012:5;77979:39;;78030:142;;78125:42;78161:5;78125:42;;78179:140;;78273:41;78308:5;78273:41;;78327:145;78408:6;78403:3;78398;78385:30;-1:-1;78464:1;78446:16;;78439:27;78378:94;78481:268;78546:1;78553:101;78567:6;78564:1;78561:13;78553:101;;;78634:11;;;78628:18;78615:11;;;78608:39;78589:2;78582:10;78553:101;;;78669:6;78666:1;78663:13;78660:2;;;-1:-1;;78734:1;78716:16;;78709:27;78530:219;78757:97;78845:2;78825:14;-1:-1;;78821:28;;78805:49;78862:116;78956:1;78949:5;78946:12;78936:2;;78962:9;78985:106;79069:1;79062:5;79059:12;79049:2;;79075:9;79098:109;79185:1;79178:5;79175:12;79165:2;;79191:9;79214:108;79300:1;79293:5;79290:12;79280:2;;79306:9;79329:117;79398:24;79416:5;79398:24;;;79391:5;79388:35;79378:2;;79437:1;79434;79427:12;79453:117;79522:24;79540:5;79522:24;;79577:112;79664:1;79657:5;79654:12;79644:2;;79680:1;79677;79670:12;79820:115;79888:23;79905:5;79888:23;","source":"pragma solidity ^0.5.12;\\npragma experimental ABIEncoderV2;\\n\\nimport \\"openzeppelin-solidity/contracts/math/SafeMath.sol\\";\\nimport \\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\";\\nimport \\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\";\\nimport \\"./utils/SolRsaVerify.sol\\";\\n\\nimport { WorkersImpl } from \\"./impl/WorkersImpl.sol\\";\\nimport { PrincipalImpl } from \\"./impl/PrincipalImpl.sol\\";\\nimport { TaskImpl } from \\"./impl/TaskImpl.sol\\";\\nimport { UpgradeImpl } from \\"./impl/UpgradeImpl.sol\\";\\nimport { SecretContractImpl } from \\"./impl/SecretContractImpl.sol\\";\\nimport { EnigmaCommon } from \\"./impl/EnigmaCommon.sol\\";\\nimport { EnigmaState } from \\"./impl/EnigmaState.sol\\";\\nimport { EnigmaEvents } from \\"./impl/EnigmaEvents.sol\\";\\nimport { EnigmaStorage } from \\"./impl/EnigmaStorage.sol\\";\\nimport { Getters } from \\"./impl/Getters.sol\\";\\nimport { ERC20 } from \\"./interfaces/ERC20.sol\\";\\n\\ncontract Enigma is EnigmaStorage, EnigmaEvents, Getters, Ownable {\\n    using SafeMath for uint256;\\n    using SafeMath for uint64;\\n    using ECDSA for bytes32;\\n\\n    // ========================================== Constructor ==========================================\\n\\n    constructor(address _tokenAddress, address _principal, address _exchangeRate, uint _epochSize,\\n        uint _timeoutThreshold, bytes memory _mrSigner, bytes memory _isvSvn) public {\\n        state.engToken = ERC20(_tokenAddress);\\n        state.epochSize = _epochSize;\\n        state.taskTimeoutSize = _timeoutThreshold * state.epochSize;\\n        state.principal = _principal;\\n        state.exchangeRate = _exchangeRate;\\n        state.updatedEnigmaContractAddress = address(this);\\n        state.stakingThreshold = 1;\\n        state.workerGroupSize = 1;\\n        state.mrSigner = _mrSigner;\\n        state.isvSvn = _isvSvn;\\n    }\\n\\n    // ========================================== Modifiers ==========================================\\n\\n    /**\\n    * Checks if the custodian wallet is registered as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerRegistered(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status != EnigmaCommon.WorkerStatus.Unregistered, \\"Unregistered worker\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged in as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedIn, \\"Worker not logged in\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged out as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedOut(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not logged out\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if worker can log in\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canLogIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(getFirstBlockNumber(block.number) != 0, \\"Principal node has not been initialized\\");\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        require(worker.balance >= state.stakingThreshold, \\"Worker\'s balance is not sufficient\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the worker can withdraw\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canWithdraw(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        EnigmaCommon.WorkerLog memory workerLog = WorkersImpl.getLatestWorkerLogImpl(worker, block.number);\\n        require(workerLog.workerEventType == EnigmaCommon.WorkerLogType.LogOut,\\n            \\"Worker\'s last log is not of LogOut type\\");\\n        require(getFirstBlockNumber(block.number) > workerLog.blockNumber,\\n            \\"Cannot withdraw in same epoch as log out event\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has not been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractUndefined(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Undefined, \\"Secret contract already deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractDeployed(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Deployed, \\"Secret contract not deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks task record has been created and is still pending receipt\\n    *\\n    * @param _taskId Task ID\\n    */\\n    modifier taskWaiting(bytes32 _taskId) {\\n        require(state.tasks[_taskId].status == EnigmaCommon.TaskStatus.RecordCreated, \\"Task is not waiting\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure signing key used for registration is unique\\n    *\\n    * @param _signer Signing key\\n    */\\n    modifier isUniqueSigningKey(address _signer) {\\n        for (uint i = 0; i < state.workerAddresses.length; i++) {\\n            require(state.workers[state.workerAddresses[i]].signer != _signer, \\"Not a unique signing key\\");\\n        }\\n        _;\\n    }\\n\\n    /**\\n    * Ensure that the contract\'s context is the updated contract\\n    *\\n    */\\n    modifier isUpdatedEnigmaContract() {\\n        require(address(this) == state.updatedEnigmaContractAddress, \\"Not updated Enigma contract\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure the sender of the recent call is the updated contract\\n    *\\n    */\\n    modifier fromUpdatedEnigmaContract() {\\n        require(msg.sender == state.updatedEnigmaContractAddress, \\"Not from updated Enigma contract\\");\\n        _;\\n    }\\n\\n    // ========================================== Functions ==========================================\\n\\n    /**\\n    * Registers a new worker or change the signer parameters of an existing\\n    * worker. This should be called by every worker (and the principal)\\n    * node in order to receive tasks.\\n    *\\n    * @param _signer The signer address, derived from the enclave public key\\n    * @param _report The RLP encoded report returned by the IAS\\n    * @param _signature Signature\\n    */\\n    function register(address _signer, bytes memory _report, bytes memory _signature)\\n    public\\n    isUpdatedEnigmaContract\\n    isUniqueSigningKey(_signer)\\n    {\\n        WorkersImpl.registerImpl(state, _signer, _report, _signature);\\n    }\\n\\n    /**\\n    * Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    *\\n    * @param _custodian The worker\'s ETH address\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function deposit(address _custodian, uint _amount)\\n    public\\n    isUpdatedEnigmaContract\\n    workerRegistered(_custodian)\\n    {\\n        WorkersImpl.depositImpl(state, _custodian, _amount);\\n    }\\n\\n    /**\\n    * Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    *\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function withdraw(uint _amount)\\n    public\\n    canWithdraw(msg.sender)\\n    {\\n        WorkersImpl.withdrawImpl(state, _amount);\\n    }\\n\\n    /**\\n    * Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\n    * selection process.\\n    */\\n    function login() public canLogIn(msg.sender) {\\n        WorkersImpl.loginImpl(state);\\n    }\\n\\n    /**\\n    * Logout worker. Worker must be logged in to do so.\\n    */\\n    function logout() public workerLoggedIn(msg.sender) {\\n        WorkersImpl.logoutImpl(state);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContractFailure(\\n        bytes32 _taskId,\\n        bytes32 _codeHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractFailureImpl(state, _taskId, _codeHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _gasUsed Gas used for task\\n    * @param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n    * @param _bytes32s [taskId, preCodeHash, codeHash, initStateDeltaHash]\\n    * @param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContract(\\n        uint64 _gasUsed,\\n        address _optionalEthereumContractAddress,\\n        bytes32[4] memory _bytes32s,\\n        bytes memory _optionalEthereumData,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_bytes32s[0])\\n    {\\n        TaskImpl.deploySecretContractImpl(state, _gasUsed, _optionalEthereumContractAddress, _bytes32s,\\n            _optionalEthereumData, _sig);\\n    }\\n\\n    /**\\n    * Check if secret contract has been deployed\\n    *\\n    * @return  Number of deployed secret contracts\\n    */\\n    function countSecretContracts()\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return SecretContractImpl.countSecretContractsImpl(state);\\n    }\\n\\n    /**\\n    * Get deployed secret contract addresses within a range\\n    *\\n    * @param _start Start of range\\n    * @param _stop End of range\\n    * @return Subset of deployed secret contract addresses\\n    */\\n    function getSecretContractAddresses(uint _start, uint _stop)\\n    public\\n    view\\n    returns (bytes32[] memory)\\n    {\\n        return SecretContractImpl.getSecretContractAddressesImpl(state, _start, _stop);\\n    }\\n\\n    /**\\n    * Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\n    * generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\n    * task deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\n    * the on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\n    * invalid.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    * @param _nonce Locally-computed nonce value for this deployment\\n    */\\n    function createDeploymentTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber,\\n        uint _nonce\\n    )\\n    public\\n    onlyOwner\\n    isUpdatedEnigmaContract\\n    {\\n        TaskImpl.createDeploymentTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber, _nonce);\\n    }\\n\\n    /**\\n    * Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\n    * contract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\n    * the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    {\\n        TaskImpl.createTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\n    * The task record is finalized and the worker is credited with the task fee.\\n    *\\n    * @param _gasUsed Gas used for task computation\\n    * @param _optionalEthereumContractAddress Output state hash\\n    * @param _bytes32s [scAddr, taskId, stateDeltaHash, outputHash]\\n    * @param _optionalEthereumData Output state hash\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitReceipt(\\n        uint64 _gasUsed,\\n        address _optionalEthereumContractAddress,\\n        bytes32[4] memory _bytes32s,\\n        bytes memory _optionalEthereumData,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_bytes32s[0])\\n    {\\n        TaskImpl.commitReceiptImpl(state, _gasUsed, _optionalEthereumContractAddress,\\n            _bytes32s, _optionalEthereumData, _sig);\\n    }\\n\\n    /**\\n    * Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\n    * updated to indicate task failure.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _outputHash Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitTaskFailure(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _outputHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitTaskFailureImpl(state, _scAddr, _taskId, _outputHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    *\\n    * @param _taskId Unique taskId\\n    */\\n    function returnFeesForTask(bytes32 _taskId)\\n    public\\n    taskWaiting(_taskId)\\n    {\\n        TaskImpl.returnFeesForTaskImpl(state, _taskId);\\n    }\\n\\n    /**\\n    * Reparameterizing workers with a new seed\\n    * This should be called for each epoch by the Principal node\\n    *\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n    * @param _seed The random integer generated by the enclave\\n    * @param _sig Principal node\'s signature\\n    */\\n    function setWorkersParams(uint _blockNumber, uint _seed, bytes memory _sig)\\n    public\\n    isUpdatedEnigmaContract\\n    workerRegistered(msg.sender)\\n    {\\n        PrincipalImpl.setWorkersParamsImpl(state, _blockNumber, _seed, _sig);\\n    }\\n\\n    /**\\n    * Get active workers before a certain block number\\n    *\\n    * @param _blockNumber Block number\\n    */\\n    function getActiveWorkers(uint _blockNumber)\\n    public\\n    view\\n    returns (address[] memory, uint[] memory)\\n    {\\n        return PrincipalImpl.getActiveWorkersImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get the first block number of an epoch that a given block number belongs to\\n    *\\n    * @param _blockNumber Block number\\n    * @return Block number\\n    */\\n    function getFirstBlockNumber(uint _blockNumber)\\n    public\\n    view\\n    returns (uint) {\\n        return WorkersImpl.getFirstBlockNumberImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get worker params for an epoch given a particular block number\\n    *\\n    * @param _blockNumber Block number\\n    * @return Epoch\'s first block number\\n    * @return Seed\\n    * @return Array of worker\'s signing addresses\\n    * @return Array of worker\'s stakes\\n    */\\n    function getWorkerParams(uint _blockNumber)\\n    public\\n    view\\n    returns (uint, uint, address[] memory, uint[] memory) {\\n        return WorkersImpl.getWorkerParamsImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\n    * and the secret contract address.\\n    *\\n    * @param _blockNumber Block number the task record was mined\\n    * @param _scAddr Secret contract address\\n    * @return Selected workers\' addresses\\n    */\\n    function getWorkerGroup(uint _blockNumber, bytes32 _scAddr)\\n    public\\n    view\\n    returns (address[] memory)\\n    {\\n        return WorkersImpl.getWorkerGroupImpl(state, _blockNumber, _scAddr);\\n    }\\n\\n    /**\\n    * The RLP encoded report returned by the IAS server\\n    *\\n    * @param _custodian The worker\'s custodian address\\n    */\\n    function getReport(address _custodian)\\n    public\\n    view\\n    workerRegistered(_custodian)\\n    returns (address, bytes memory)\\n    {\\n        return WorkersImpl.getReportImpl(state, _custodian);\\n    }\\n\\n    /**\\n    * This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n    * @param _data The report itself\\n    * @param _signature The signature of the report\\n    */\\n    function verifyReport(bytes memory _data, bytes memory _signature)\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return WorkersImpl.verifyReportImpl(_data, _signature);\\n    }\\n\\n    /**\\n    * Upgrade Enigma Contract\\n    * @param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address\\n    */\\n    function upgradeEnigmaContract(address _updatedEnigmaContractAddress)\\n    public\\n    onlyOwner\\n    isUpdatedEnigmaContract\\n    {\\n        return UpgradeImpl.upgradeEnigmaContractImpl(state, _updatedEnigmaContractAddress);\\n    }\\n\\n    /**\\n    * Transfer worker stake from old contract to new contract upon registration\\n    * @param _workerAddress Newly-registered worker address\\n    * @param _sig Signature\\n    */\\n    function transferWorkerStakePostUpgrade(address _workerAddress, bytes memory _sig)\\n    public\\n    fromUpdatedEnigmaContract\\n    returns (uint256)\\n    {\\n        return UpgradeImpl.transferWorkerStakePostUpgradeImpl(state, _workerAddress, _sig);\\n    }\\n\\n    /**\\n    * Set mrSigner\\n    * @param _mrSigner mrSigner\\n    */\\n    function setMrSigner(bytes memory _mrSigner)\\n    public\\n    onlyOwner\\n    {\\n        state.mrSigner = _mrSigner;\\n    }\\n\\n    /**\\n    * Set isvSvn\\n    * @param _isvSvn mrSigner\\n    */\\n    function setIsvSvn(bytes memory _isvSvn)\\n    public\\n    onlyOwner\\n    {\\n        state.isvSvn = _isvSvn;\\n    }\\n}\\n","sourcePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/Enigma.sol","ast":{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/Enigma.sol","exportedSymbols":{"Enigma":[949]},"id":950,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".12"],"nodeType":"PragmaDirective","src":"0:24:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"25:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":950,"sourceUnit":22935,"src":"60:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":950,"sourceUnit":22748,"src":"120:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/ownership/Ownable.sol","file":"openzeppelin-solidity/contracts/ownership/Ownable.sol","id":5,"nodeType":"ImportDirective","scope":950,"sourceUnit":23049,"src":"185:63:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":6,"nodeType":"ImportDirective","scope":950,"sourceUnit":22640,"src":"249:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":8,"nodeType":"ImportDirective","scope":950,"sourceUnit":10154,"src":"285:53:0","symbolAliases":[{"foreign":7,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":10,"nodeType":"ImportDirective","scope":950,"sourceUnit":3451,"src":"339:57:0","symbolAliases":[{"foreign":9,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":12,"nodeType":"ImportDirective","scope":950,"sourceUnit":6494,"src":"397:47:0","symbolAliases":[{"foreign":11,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/UpgradeImpl.sol","file":"./impl/UpgradeImpl.sol","id":14,"nodeType":"ImportDirective","scope":950,"sourceUnit":9077,"src":"445:53:0","symbolAliases":[{"foreign":13,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":16,"nodeType":"ImportDirective","scope":950,"sourceUnit":4091,"src":"499:67:0","symbolAliases":[{"foreign":15,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":18,"nodeType":"ImportDirective","scope":950,"sourceUnit":2529,"src":"567:55:0","symbolAliases":[{"foreign":17,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":20,"nodeType":"ImportDirective","scope":950,"sourceUnit":2715,"src":"623:53:0","symbolAliases":[{"foreign":19,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":22,"nodeType":"ImportDirective","scope":950,"sourceUnit":2655,"src":"677:55:0","symbolAliases":[{"foreign":21,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":24,"nodeType":"ImportDirective","scope":950,"sourceUnit":2723,"src":"733:57:0","symbolAliases":[{"foreign":23,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":26,"nodeType":"ImportDirective","scope":950,"sourceUnit":2924,"src":"791:45:0","symbolAliases":[{"foreign":25,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":28,"nodeType":"ImportDirective","scope":950,"sourceUnit":11162,"src":"837:47:0","symbolAliases":[{"foreign":27,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":29,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2722,"src":"905:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2722","typeString":"contract EnigmaStorage"}},"id":30,"nodeType":"InheritanceSpecifier","src":"905:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":31,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2654,"src":"920:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2654","typeString":"contract EnigmaEvents"}},"id":32,"nodeType":"InheritanceSpecifier","src":"920:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":33,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2923,"src":"934:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2923","typeString":"contract Getters"}},"id":34,"nodeType":"InheritanceSpecifier","src":"934:7:0"},{"arguments":null,"baseName":{"contractScope":null,"id":35,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":23048,"src":"943:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$23048","typeString":"contract Ownable"}},"id":36,"nodeType":"InheritanceSpecifier","src":"943:7:0"}],"contractDependencies":[2654,2722,2923,22666,23048],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":949,"linearizedBaseContracts":[949,23048,22666,2923,2654,2722],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":39,"libraryName":{"contractScope":null,"id":37,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":22934,"src":"963:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$22934","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"957:27:0","typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":42,"libraryName":{"contractScope":null,"id":40,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":22934,"src":"995:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$22934","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"989:26:0","typeName":{"id":41,"name":"uint64","nodeType":"ElementaryTypeName","src":"1008:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}},{"id":45,"libraryName":{"contractScope":null,"id":43,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":22747,"src":"1026:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$22747","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"1020:24:0","typeName":{"id":44,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1036:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":129,"nodeType":"Block","src":"1336:442:0","statements":[{"expression":{"argumentTypes":null,"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":62,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1346:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":64,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2663,"src":"1346:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11161","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":66,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"1369:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":65,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11161,"src":"1363:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$11161_$","typeString":"type(contract ERC20)"}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1363:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11161","typeString":"contract ERC20"}},"src":"1346:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11161","typeString":"contract ERC20"}},"id":69,"nodeType":"ExpressionStatement","src":"1346:37:0"},{"expression":{"argumentTypes":null,"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":70,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1393:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":72,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2665,"src":"1393:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":73,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"1411:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1393:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":75,"nodeType":"ExpressionStatement","src":"1393:28:0"},{"expression":{"argumentTypes":null,"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":76,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1431:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":78,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2667,"src":"1431:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":79,"name":"_timeoutThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"1455:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":80,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1475:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":81,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2665,"src":"1475:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1455:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1431:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":84,"nodeType":"ExpressionStatement","src":"1431:59:0"},{"expression":{"argumentTypes":null,"id":89,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":85,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1500:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":87,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2669,"src":"1500:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":88,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"1518:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1500:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":90,"nodeType":"ExpressionStatement","src":"1500:28:0"},{"expression":{"argumentTypes":null,"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":91,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1538:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":93,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"exchangeRate","nodeType":"MemberAccess","referencedDeclaration":2671,"src":"1538:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":94,"name":"_exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"1559:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1538:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":96,"nodeType":"ExpressionStatement","src":"1538:34:0"},{"expression":{"argumentTypes":null,"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":97,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1582:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":99,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2673,"src":"1582:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":101,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23649,"src":"1627:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$949","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$949","typeString":"contract Enigma"}],"id":100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1619:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1619:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1582:50:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"1582:50:0"},{"expression":{"argumentTypes":null,"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":105,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1642:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2706,"src":"1642:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1667:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1642:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":110,"nodeType":"ExpressionStatement","src":"1642:26:0"},{"expression":{"argumentTypes":null,"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":111,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1678:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2708,"src":"1678:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1678:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":116,"nodeType":"ExpressionStatement","src":"1678:25:0"},{"expression":{"argumentTypes":null,"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":117,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1713:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"mrSigner","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"1713:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":120,"name":"_mrSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"1730:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1713:26:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":122,"nodeType":"ExpressionStatement","src":"1713:26:0"},{"expression":{"argumentTypes":null,"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":123,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1749:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isvSvn","nodeType":"MemberAccess","referencedDeclaration":2712,"src":"1749:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":126,"name":"_isvSvn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"1764:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1749:22:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":128,"nodeType":"ExpressionStatement","src":"1749:22:0"}]},"documentation":null,"id":130,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":130,"src":"1168:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1168:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":49,"name":"_principal","nodeType":"VariableDeclaration","scope":130,"src":"1191:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1191:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":51,"name":"_exchangeRate","nodeType":"VariableDeclaration","scope":130,"src":"1211:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":53,"name":"_epochSize","nodeType":"VariableDeclaration","scope":130,"src":"1234:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint","nodeType":"ElementaryTypeName","src":"1234:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":55,"name":"_timeoutThreshold","nodeType":"VariableDeclaration","scope":130,"src":"1259:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint","nodeType":"ElementaryTypeName","src":"1259:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":57,"name":"_mrSigner","nodeType":"VariableDeclaration","scope":130,"src":"1283:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56,"name":"bytes","nodeType":"ElementaryTypeName","src":"1283:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":59,"name":"_isvSvn","nodeType":"VariableDeclaration","scope":130,"src":"1307:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":58,"name":"bytes","nodeType":"ElementaryTypeName","src":"1307:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"1167:161:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"1336:0:0"},"scope":949,"src":"1156:622:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":154,"nodeType":"Block","src":"2068:181:0","statements":[{"assignments":[137],"declarations":[{"constant":false,"id":137,"name":"worker","nodeType":"VariableDeclaration","scope":154,"src":"2078:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":136,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2395,"src":"2078:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":142,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":138,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"2114:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"2114:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2395_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":141,"indexExpression":{"argumentTypes":null,"id":140,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2128:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2114:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2078:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":144,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2152:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"2152:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":146,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"2169:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2436,"src":"2169:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2436_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2169:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2152:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2209:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"2144:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2144:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":152,"nodeType":"ExpressionStatement","src":"2144:87:0"},{"id":153,"nodeType":"PlaceholderStatement","src":"2241:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":155,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"name":"_user","nodeType":"VariableDeclaration","scope":155,"src":"2053:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":131,"name":"address","nodeType":"ElementaryTypeName","src":"2053:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2052:15:0"},"src":"2027:222:0","visibility":"internal"},{"body":{"id":179,"nodeType":"Block","src":"2432:178:0","statements":[{"assignments":[162],"declarations":[{"constant":false,"id":162,"name":"worker","nodeType":"VariableDeclaration","scope":179,"src":"2442:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":161,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2395,"src":"2442:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":167,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":163,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"2478:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"2478:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2395_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":166,"indexExpression":{"argumentTypes":null,"id":165,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2492:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2478:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2442:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":169,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2516:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"2516:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":171,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"2533:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2436,"src":"2533:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2436_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2533:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2516:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2569:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":168,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"2508:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2508:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":177,"nodeType":"ExpressionStatement","src":"2508:84:0"},{"id":178,"nodeType":"PlaceholderStatement","src":"2602:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":180,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"name":"_user","nodeType":"VariableDeclaration","scope":180,"src":"2417:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"2417:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2416:15:0"},"src":"2393:217:0","visibility":"internal"},{"body":{"id":204,"nodeType":"Block","src":"2795:180:0","statements":[{"assignments":[187],"declarations":[{"constant":false,"id":187,"name":"worker","nodeType":"VariableDeclaration","scope":204,"src":"2805:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":186,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2395,"src":"2805:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":192,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":188,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"2841:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"2841:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2395_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":191,"indexExpression":{"argumentTypes":null,"id":190,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"2855:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2841:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2805:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":194,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"2879:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"2879:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":196,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"2896:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2436,"src":"2896:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2436_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2896:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2879:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2933:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2871:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"2871:86:0"},{"id":203,"nodeType":"PlaceholderStatement","src":"2967:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":205,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"name":"_user","nodeType":"VariableDeclaration","scope":205,"src":"2780:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"2780:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2779:15:0"},"src":"2755:220:0","visibility":"internal"},{"body":{"id":248,"nodeType":"Block","src":"3124:395:0","statements":[{"assignments":[212],"declarations":[{"constant":false,"id":212,"name":"worker","nodeType":"VariableDeclaration","scope":248,"src":"3134:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":211,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2395,"src":"3134:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":217,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":213,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"3170:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"3170:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2395_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":216,"indexExpression":{"argumentTypes":null,"id":215,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"3184:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3170:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3134:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":220,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23585,"src":"3228:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3228:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":219,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"3208:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3208:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3245:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3208:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3248:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":218,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"3200:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3200:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":227,"nodeType":"ExpressionStatement","src":"3200:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":229,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"3308:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"3308:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":231,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"3325:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2436,"src":"3325:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2436_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3325:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3308:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3362:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":228,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"3300:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3300:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":237,"nodeType":"ExpressionStatement","src":"3300:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":239,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"3422:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2391,"src":"3422:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":241,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"3440:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2706,"src":"3440:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3422:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3464:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"3414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3414:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":246,"nodeType":"ExpressionStatement","src":"3414:87:0"},{"id":247,"nodeType":"PlaceholderStatement","src":"3511:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":249,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"name":"_user","nodeType":"VariableDeclaration","scope":249,"src":"3109:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3109:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3108:15:0"},"src":"3091:428:0","visibility":"internal"},{"body":{"id":305,"nodeType":"Block","src":"3677:580:0","statements":[{"assignments":[256],"declarations":[{"constant":false,"id":256,"name":"worker","nodeType":"VariableDeclaration","scope":305,"src":"3687:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":255,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2395,"src":"3687:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":261,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":257,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"3723:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"3723:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2395_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":260,"indexExpression":{"argumentTypes":null,"id":259,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"3737:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3723:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3687:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":263,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"3761:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"3761:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":265,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"3778:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2436,"src":"3778:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2436_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3778:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3761:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3815:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"3753:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3753:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":271,"nodeType":"ExpressionStatement","src":"3753:104:0"},{"assignments":[275],"declarations":[{"constant":false,"id":275,"name":"workerLog","nodeType":"VariableDeclaration","scope":305,"src":"3867:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2413_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":274,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2413,"src":"3867:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2413_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":282,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":278,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"3944:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":279,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23585,"src":"3952:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3952:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":276,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"3909:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":10152,"src":"3909:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2395_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2413_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3909:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2413_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3867:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2444","typeString":"enum EnigmaCommon.WorkerLogType"},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":284,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"3983:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2413_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2408,"src":"3983:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2444","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":286,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"4012:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2444,"src":"4012:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2444_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4012:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2444","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3983:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4059:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"3975:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3975:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":292,"nodeType":"ExpressionStatement","src":"3975:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":295,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23585,"src":"4139:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4139:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":294,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"4119:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4119:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":298,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"4155:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2413_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2410,"src":"4155:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4119:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4190:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":293,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"4111:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4111:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":303,"nodeType":"ExpressionStatement","src":"4111:128:0"},{"id":304,"nodeType":"PlaceholderStatement","src":"4249:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":306,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"name":"_user","nodeType":"VariableDeclaration","scope":306,"src":"3662:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":250,"name":"address","nodeType":"ElementaryTypeName","src":"3662:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3661:15:0"},"src":"3641:616:0","visibility":"internal"},{"body":{"id":324,"nodeType":"Block","src":"4424:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2439","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":311,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"4442:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2700,"src":"4442:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2425_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":314,"indexExpression":{"argumentTypes":null,"id":313,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"4458:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4442:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2425_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2424,"src":"4442:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2439","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":316,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"4477:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2439,"src":"4477:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2439_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4477:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2439","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4442:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4522:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"4434:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4434:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"ExpressionStatement","src":"4434:123:0"},{"id":323,"nodeType":"PlaceholderStatement","src":"4567:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":325,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"name":"_scAddr","nodeType":"VariableDeclaration","scope":325,"src":"4407:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4407:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4406:17:0"},"src":"4380:195:0","visibility":"internal"},{"body":{"id":343,"nodeType":"Block","src":"4737:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2439","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":330,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"4755:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2700,"src":"4755:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2425_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":333,"indexExpression":{"argumentTypes":null,"id":332,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"4771:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4755:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2425_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2424,"src":"4755:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2439","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":335,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"4790:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2439,"src":"4790:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2439_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4790:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2439","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4755:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4834:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":329,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"4747:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4747:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":341,"nodeType":"ExpressionStatement","src":"4747:118:0"},{"id":342,"nodeType":"PlaceholderStatement","src":"4875:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":344,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"name":"_scAddr","nodeType":"VariableDeclaration","scope":344,"src":"4720:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4720:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4719:17:0"},"src":"4694:189:0","visibility":"internal"},{"body":{"id":362,"nodeType":"Block","src":"5048:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2432","typeString":"enum EnigmaCommon.TaskStatus"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":349,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"5066:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2693,"src":"5066:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2383_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":352,"indexExpression":{"argumentTypes":null,"id":351,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5078:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5066:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2383_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"5066:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2432","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":354,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"5097:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2432,"src":"5097:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2432_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5097:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2432","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"5066:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5136:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":348,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"5058:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5058:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":360,"nodeType":"ExpressionStatement","src":"5058:100:0"},{"id":361,"nodeType":"PlaceholderStatement","src":"5168:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":363,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"name":"_taskId","nodeType":"VariableDeclaration","scope":363,"src":"5031:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5031:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"5030:17:0"},"src":"5010:166:0","visibility":"internal"},{"body":{"id":396,"nodeType":"Block","src":"5338:202:0","statements":[{"body":{"id":393,"nodeType":"Block","src":"5404:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":380,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"5426:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"5426:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2395_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":386,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":382,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"5440:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":383,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"5440:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":385,"indexExpression":{"argumentTypes":null,"id":384,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"5462:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5440:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5426:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"5426:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":388,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"5476:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5426:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5485:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":379,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"5418:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5418:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":392,"nodeType":"ExpressionStatement","src":"5418:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":371,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"5365:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":372,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"5369:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"5369:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5369:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5365:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":394,"initializationExpression":{"assignments":[368],"declarations":[{"constant":false,"id":368,"name":"i","nodeType":"VariableDeclaration","scope":394,"src":"5353:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":367,"name":"uint","nodeType":"ElementaryTypeName","src":"5353:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":370,"initialValue":{"argumentTypes":null,"hexValue":"30","id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5362:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5353:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5399:3:0","subExpression":{"argumentTypes":null,"id":376,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"5399:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":378,"nodeType":"ExpressionStatement","src":"5399:3:0"},"nodeType":"ForStatement","src":"5348:175:0"},{"id":395,"nodeType":"PlaceholderStatement","src":"5532:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":397,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"name":"_signer","nodeType":"VariableDeclaration","scope":397,"src":"5321:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"5321:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5320:17:0"},"src":"5293:247:0","visibility":"internal"},{"body":{"id":410,"nodeType":"Block","src":"5667:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":401,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23649,"src":"5693:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$949","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$949","typeString":"contract Enigma"}],"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5685:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5685:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":403,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"5702:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2673,"src":"5702:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5685:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74207570646174656420456e69676d6120636f6e7472616374","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5738:29:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""},"value":"Not updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""}],"id":399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"5677:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5677:91:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":408,"nodeType":"ExpressionStatement","src":"5677:91:0"},{"id":409,"nodeType":"PlaceholderStatement","src":"5778:1:0"}]},"documentation":"Ensure that the contract\'s context is the updated contract\\n    ","id":411,"name":"isUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[],"src":"5664:2:0"},"src":"5632:154:0","visibility":"internal"},{"body":{"id":423,"nodeType":"Block","src":"5917:121:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":414,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"5935:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5935:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":416,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"5949:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2673,"src":"5949:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5935:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5985:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""},"value":"Not from updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""}],"id":413,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"5927:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5927:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"ExpressionStatement","src":"5927:93:0"},{"id":422,"nodeType":"PlaceholderStatement","src":"6030:1:0"}]},"documentation":"Ensure the sender of the recent call is the updated contract\\n    ","id":424,"name":"fromUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[],"src":"5914:2:0"},"src":"5880:158:0","visibility":"internal"},{"body":{"id":447,"nodeType":"Block","src":"6687:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":441,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"6722:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":442,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"6729:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":443,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"6738:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":444,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"6747:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":438,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"6697:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":9410,"src":"6697:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6697:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"6697:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":448,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":433,"modifierName":{"argumentTypes":null,"id":432,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"6627:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6627:23:0"},{"arguments":[{"argumentTypes":null,"id":435,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"6674:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":436,"modifierName":{"argumentTypes":null,"id":434,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6655:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6655:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"name":"_signer","nodeType":"VariableDeclaration","scope":448,"src":"6548:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"6548:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":428,"name":"_report","nodeType":"VariableDeclaration","scope":448,"src":"6565:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":427,"name":"bytes","nodeType":"ElementaryTypeName","src":"6565:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":430,"name":"_signature","nodeType":"VariableDeclaration","scope":448,"src":"6587:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":429,"name":"bytes","nodeType":"ElementaryTypeName","src":"6587:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"6547:64:0"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"6687:0:0"},"scope":949,"src":"6530:235:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":468,"nodeType":"Block","src":"7135:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":463,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"7169:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":464,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"7176:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":465,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"7188:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":460,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"7145:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":9626,"src":"7145:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7145:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":467,"nodeType":"ExpressionStatement","src":"7145:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":469,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":455,"modifierName":{"argumentTypes":null,"id":454,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"7074:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"7074:23:0"},{"arguments":[{"argumentTypes":null,"id":457,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"7119:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":458,"modifierName":{"argumentTypes":null,"id":456,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"7102:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7102:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"name":"_custodian","nodeType":"VariableDeclaration","scope":469,"src":"7025:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"7025:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":452,"name":"_amount","nodeType":"VariableDeclaration","scope":469,"src":"7045:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":451,"name":"uint","nodeType":"ElementaryTypeName","src":"7045:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7024:34:0"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"7135:0:0"},"scope":949,"src":"7008:195:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":485,"nodeType":"Block","src":"7476:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":481,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"7511:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":482,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"7518:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":478,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"7486:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":9679,"src":"7486:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7486:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":484,"nodeType":"ExpressionStatement","src":"7486:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":486,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":474,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"7460:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7460:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":476,"modifierName":{"argumentTypes":null,"id":473,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7448:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7448:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"name":"_amount","nodeType":"VariableDeclaration","scope":486,"src":"7419:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":470,"name":"uint","nodeType":"ElementaryTypeName","src":"7419:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7418:14:0"},"returnParameters":{"id":477,"nodeType":"ParameterList","parameters":[],"src":"7476:0:0"},"scope":949,"src":"7401:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":499,"nodeType":"Block","src":"7741:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":496,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"7773:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":493,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"7751:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":9519,"src":"7751:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7751:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"ExpressionStatement","src":"7751:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":500,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":489,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"7729:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7729:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":491,"modifierName":{"argumentTypes":null,"id":488,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"7720:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7720:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":487,"nodeType":"ParameterList","parameters":[],"src":"7710:2:0"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[],"src":"7741:0:0"},"scope":949,"src":"7696:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":513,"nodeType":"Block","src":"7915:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":510,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"7948:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":507,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"7925:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":9565,"src":"7925:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7925:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":512,"nodeType":"ExpressionStatement","src":"7925:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":514,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":503,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"7903:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7903:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":505,"modifierName":{"argumentTypes":null,"id":502,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"7888:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7888:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":501,"nodeType":"ParameterList","parameters":[],"src":"7878:2:0"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"7915:0:0"},"scope":949,"src":"7863:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":544,"nodeType":"Block","src":"8521:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":537,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"8572:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":538,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"8579:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":539,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"8588:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":540,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"8599:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":541,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"8609:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":534,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"8531:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6493_$","typeString":"type(library TaskImpl)"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"8531:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8531:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":543,"nodeType":"ExpressionStatement","src":"8531:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":545,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":525,"modifierName":{"argumentTypes":null,"id":524,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"8431:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8431:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":527,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"8474:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8474:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":529,"modifierName":{"argumentTypes":null,"id":526,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"8459:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8459:26:0"},{"arguments":[{"argumentTypes":null,"id":531,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"8508:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":532,"modifierName":{"argumentTypes":null,"id":530,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"8490:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8490:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"name":"_taskId","nodeType":"VariableDeclaration","scope":545,"src":"8315:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8315:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":518,"name":"_codeHash","nodeType":"VariableDeclaration","scope":545,"src":"8340:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8340:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":520,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":545,"src":"8367:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":519,"name":"uint64","nodeType":"ElementaryTypeName","src":"8367:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":522,"name":"_sig","nodeType":"VariableDeclaration","scope":545,"src":"8392:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":521,"name":"bytes","nodeType":"ElementaryTypeName","src":"8392:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8305:110:0"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"8521:0:0"},"scope":949,"src":"8269:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":582,"nodeType":"Block","src":"9421:153:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":574,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"9465:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":575,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"9472:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":576,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"9482:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":577,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"9516:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},{"argumentTypes":null,"id":578,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"9539:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":579,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"9562:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":571,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"9431:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6493_$","typeString":"type(library TaskImpl)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":5083,"src":"9431:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_uint64_$_t_address_$_t_array$_t_bytes32_$4_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint64,address,bytes32[4] memory,bytes memory,bytes memory)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9431:136:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"ExpressionStatement","src":"9431:136:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _gasUsed Gas used for task\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _bytes32s [taskId, preCodeHash, codeHash, initStateDeltaHash]\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _sig Worker\'s signature for deployment","id":583,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":560,"modifierName":{"argumentTypes":null,"id":559,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"9326:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9326:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":562,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"9369:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9369:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":564,"modifierName":{"argumentTypes":null,"id":561,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"9354:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"9354:26:0"},{"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":566,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"9403:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},"id":568,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9413:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9403:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":569,"modifierName":{"argumentTypes":null,"id":565,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"9385:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"9385:31:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":583,"src":"9131:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":546,"name":"uint64","nodeType":"ElementaryTypeName","src":"9131:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":549,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":583,"src":"9156:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"9156:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":553,"name":"_bytes32s","nodeType":"VariableDeclaration","scope":583,"src":"9206:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4]"},"typeName":{"baseType":{"id":550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9206:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":552,"length":{"argumentTypes":null,"hexValue":"34","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9214:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"9206:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_storage_ptr","typeString":"bytes32[4]"}},"value":null,"visibility":"internal"},{"constant":false,"id":555,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":583,"src":"9243:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":554,"name":"bytes","nodeType":"ElementaryTypeName","src":"9243:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":557,"name":"_sig","nodeType":"VariableDeclaration","scope":583,"src":"9287:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":556,"name":"bytes","nodeType":"ElementaryTypeName","src":"9287:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"9121:189:0"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[],"src":"9421:0:0"},"scope":949,"src":"9092:482:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":593,"nodeType":"Block","src":"9776:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":590,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"9837:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":588,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"9793:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$4090_$","typeString":"type(library SecretContractImpl)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":4022,"src":"9793:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2713_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9793:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":587,"id":592,"nodeType":"Return","src":"9786:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":594,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":584,"nodeType":"ParameterList","parameters":[],"src":"9730:2:0"},"returnParameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"name":"","nodeType":"VariableDeclaration","scope":594,"src":"9766:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint","nodeType":"ElementaryTypeName","src":"9766:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9765:6:0"},"scope":949,"src":"9701:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":611,"nodeType":"Block","src":"10179:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":606,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"10246:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":607,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"10253:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":608,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"10261:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":604,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"10196:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$4090_$","typeString":"type(library SecretContractImpl)"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":4089,"src":"10196:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2713_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10196:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":603,"id":610,"nodeType":"Return","src":"10189:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":612,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"name":"_start","nodeType":"VariableDeclaration","scope":612,"src":"10099:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint","nodeType":"ElementaryTypeName","src":"10099:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":598,"name":"_stop","nodeType":"VariableDeclaration","scope":612,"src":"10112:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint","nodeType":"ElementaryTypeName","src":"10112:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10098:25:0"},"returnParameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"name":"","nodeType":"VariableDeclaration","scope":612,"src":"10157:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10157:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":601,"length":null,"nodeType":"ArrayTypeName","src":"10157:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"10156:18:0"},"scope":949,"src":"10063:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":640,"nodeType":"Block","src":"11357:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":632,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"11407:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":633,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"11414:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":634,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"11427:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":635,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"11438:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":636,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"11446:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":637,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"11465:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":629,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"11367:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6493_$","typeString":"type(library TaskImpl)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4383,"src":"11367:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11367:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":639,"nodeType":"ExpressionStatement","src":"11367:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":641,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":625,"modifierName":{"argumentTypes":null,"id":624,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22981,"src":"11315:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11315:9:0"},{"arguments":null,"id":627,"modifierName":{"argumentTypes":null,"id":626,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"11329:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11329:23:0"}],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":641,"src":"11172:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11172:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":616,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":641,"src":"11201:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":615,"name":"uint64","nodeType":"ElementaryTypeName","src":"11201:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":618,"name":"_gasPx","nodeType":"VariableDeclaration","scope":641,"src":"11227:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":617,"name":"uint64","nodeType":"ElementaryTypeName","src":"11227:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":620,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":641,"src":"11250:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint","nodeType":"ElementaryTypeName","src":"11250:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":622,"name":"_nonce","nodeType":"VariableDeclaration","scope":641,"src":"11282:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":621,"name":"uint","nodeType":"ElementaryTypeName","src":"11282:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11162:137:0"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[],"src":"11357:0:0"},"scope":949,"src":"11127:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":664,"nodeType":"Block","src":"12239:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":657,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"12279:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":658,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"12286:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":659,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"12299:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":660,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"12310:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":661,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"12318:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":654,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"12249:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6493_$","typeString":"type(library TaskImpl)"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":5326,"src":"12249:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12249:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"ExpressionStatement","src":"12249:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":665,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":652,"modifierName":{"argumentTypes":null,"id":651,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"12211:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12211:23:0"}],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":665,"src":"12089:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12089:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":645,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":665,"src":"12118:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":644,"name":"uint64","nodeType":"ElementaryTypeName","src":"12118:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":647,"name":"_gasPx","nodeType":"VariableDeclaration","scope":665,"src":"12144:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":646,"name":"uint64","nodeType":"ElementaryTypeName","src":"12144:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":649,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":665,"src":"12167:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint","nodeType":"ElementaryTypeName","src":"12167:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12079:116:0"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[],"src":"12239:0:0"},"scope":949,"src":"12054:289:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":702,"nodeType":"Block","src":"13161:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":694,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"13198:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":695,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"13205:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":696,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"13215:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":697,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"13261:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},{"argumentTypes":null,"id":698,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"13272:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":699,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"13295:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":691,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"13171:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6493_$","typeString":"type(library TaskImpl)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":6129,"src":"13171:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_uint64_$_t_address_$_t_array$_t_bytes32_$4_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint64,address,bytes32[4] memory,bytes memory,bytes memory)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13171:129:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"ExpressionStatement","src":"13171:129:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _gasUsed Gas used for task computation\\n@param _optionalEthereumContractAddress Output state hash\\n@param _bytes32s [scAddr, taskId, stateDeltaHash, outputHash]\\n@param _optionalEthereumData Output state hash\\n@param _sig Worker\'s signature","id":703,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":680,"modifierName":{"argumentTypes":null,"id":679,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"13067:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13067:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":682,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"13110:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13110:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":684,"modifierName":{"argumentTypes":null,"id":681,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"13095:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13095:26:0"},{"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":686,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"13143:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},"id":688,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13153:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13143:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":689,"modifierName":{"argumentTypes":null,"id":685,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"13126:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13126:30:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":703,"src":"12872:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":666,"name":"uint64","nodeType":"ElementaryTypeName","src":"12872:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":669,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":703,"src":"12897:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"12897:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":673,"name":"_bytes32s","nodeType":"VariableDeclaration","scope":703,"src":"12947:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4]"},"typeName":{"baseType":{"id":670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12947:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":672,"length":{"argumentTypes":null,"hexValue":"34","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12955:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"12947:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_storage_ptr","typeString":"bytes32[4]"}},"value":null,"visibility":"internal"},{"constant":false,"id":675,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":703,"src":"12984:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":674,"name":"bytes","nodeType":"ElementaryTypeName","src":"12984:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":677,"name":"_sig","nodeType":"VariableDeclaration","scope":703,"src":"13028:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":676,"name":"bytes","nodeType":"ElementaryTypeName","src":"13028:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"12862:189:0"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"13161:0:0"},"scope":949,"src":"12840:467:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":736,"nodeType":"Block","src":"13966:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":728,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"14007:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":729,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"14014:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":730,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"14023:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":731,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"14032:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":732,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"14045:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":733,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"14055:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":725,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"13976:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6493_$","typeString":"type(library TaskImpl)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5524,"src":"13976:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13976:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":735,"nodeType":"ExpressionStatement","src":"13976:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":737,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":716,"modifierName":{"argumentTypes":null,"id":715,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"13877:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13877:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":718,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"13920:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13920:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":720,"modifierName":{"argumentTypes":null,"id":717,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"13905:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13905:26:0"},{"arguments":[{"argumentTypes":null,"id":722,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"13953:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":723,"modifierName":{"argumentTypes":null,"id":721,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"13936:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13936:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"name":"_scAddr","nodeType":"VariableDeclaration","scope":737,"src":"13734:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13734:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":707,"name":"_taskId","nodeType":"VariableDeclaration","scope":737,"src":"13759:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13759:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":709,"name":"_outputHash","nodeType":"VariableDeclaration","scope":737,"src":"13784:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13784:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":711,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":737,"src":"13813:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":710,"name":"uint64","nodeType":"ElementaryTypeName","src":"13813:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":713,"name":"_sig","nodeType":"VariableDeclaration","scope":737,"src":"13838:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":712,"name":"bytes","nodeType":"ElementaryTypeName","src":"13838:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13724:137:0"},"returnParameters":{"id":724,"nodeType":"ParameterList","parameters":[],"src":"13966:0:0"},"scope":949,"src":"13698:369:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":752,"nodeType":"Block","src":"14318:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":748,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"14359:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":749,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"14366:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":745,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"14328:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6493_$","typeString":"type(library TaskImpl)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6492,"src":"14328:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14328:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":751,"nodeType":"ExpressionStatement","src":"14328:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":753,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":742,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"14305:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":743,"modifierName":{"argumentTypes":null,"id":741,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"14293:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14293:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"name":"_taskId","nodeType":"VariableDeclaration","scope":753,"src":"14261:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14261:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14260:17:0"},"returnParameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"14318:0:0"},"scope":949,"src":"14234:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":777,"nodeType":"Block","src":"14869:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":771,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"14914:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":772,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"14921:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":773,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"14935:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":774,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"14942:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":768,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"14879:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3450_$","typeString":"type(library PrincipalImpl)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":3279,"src":"14879:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14879:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":776,"nodeType":"ExpressionStatement","src":"14879:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":778,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":762,"modifierName":{"argumentTypes":null,"id":761,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"14808:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"14808:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":764,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"14853:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14853:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":766,"modifierName":{"argumentTypes":null,"id":763,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"14836:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14836:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":778,"src":"14743:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint","nodeType":"ElementaryTypeName","src":"14743:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":757,"name":"_seed","nodeType":"VariableDeclaration","scope":778,"src":"14762:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint","nodeType":"ElementaryTypeName","src":"14762:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":759,"name":"_sig","nodeType":"VariableDeclaration","scope":778,"src":"14774:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":758,"name":"bytes","nodeType":"ElementaryTypeName","src":"14774:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14742:50:0"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[],"src":"14869:0:0"},"scope":949,"src":"14717:237:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":795,"nodeType":"Block","src":"15190:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":791,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"15242:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":792,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"15249:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":789,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"15207:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3450_$","typeString":"type(library PrincipalImpl)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3449,"src":"15207:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2713_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15207:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":788,"id":794,"nodeType":"Return","src":"15200:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":796,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":796,"src":"15101:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":779,"name":"uint","nodeType":"ElementaryTypeName","src":"15101:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15100:19:0"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"name":"","nodeType":"VariableDeclaration","scope":796,"src":"15153:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"15153:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":783,"length":null,"nodeType":"ArrayTypeName","src":"15153:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":787,"name":"","nodeType":"VariableDeclaration","scope":796,"src":"15171:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":785,"name":"uint","nodeType":"ElementaryTypeName","src":"15171:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":786,"length":null,"nodeType":"ArrayTypeName","src":"15171:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15152:33:0"},"scope":949,"src":"15075:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":809,"nodeType":"Block","src":"15531:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":805,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"15584:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":806,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"15591:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":803,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"15548:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":9799,"src":"15548:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2713_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15548:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":802,"id":808,"nodeType":"Return","src":"15541:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":810,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":810,"src":"15473:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint","nodeType":"ElementaryTypeName","src":"15473:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15472:19:0"},"returnParameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"name":"","nodeType":"VariableDeclaration","scope":810,"src":"15525:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":800,"name":"uint","nodeType":"ElementaryTypeName","src":"15525:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15524:6:0"},"scope":949,"src":"15444:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":831,"nodeType":"Block","src":"16017:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":827,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"16066:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":828,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"16073:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":825,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"16034:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":9836,"src":"16034:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2713_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16034:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":824,"id":830,"nodeType":"Return","src":"16027:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":832,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":832,"src":"15920:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint","nodeType":"ElementaryTypeName","src":"15920:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15919:19:0"},"returnParameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"name":"","nodeType":"VariableDeclaration","scope":832,"src":"15972:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint","nodeType":"ElementaryTypeName","src":"15972:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":817,"name":"","nodeType":"VariableDeclaration","scope":832,"src":"15978:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint","nodeType":"ElementaryTypeName","src":"15978:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":820,"name":"","nodeType":"VariableDeclaration","scope":832,"src":"15984:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"15984:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":819,"length":null,"nodeType":"ArrayTypeName","src":"15984:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":823,"name":"","nodeType":"VariableDeclaration","scope":832,"src":"16002:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":821,"name":"uint","nodeType":"ElementaryTypeName","src":"16002:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":822,"length":null,"nodeType":"ArrayTypeName","src":"16002:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15971:45:0"},"scope":949,"src":"15895:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":849,"nodeType":"Block","src":"16545:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":844,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"16593:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":845,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"16600:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":846,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"16614:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":842,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"16562:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":10100,"src":"16562:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2713_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16562:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":841,"id":848,"nodeType":"Return","src":"16555:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":850,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":850,"src":"16454:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint","nodeType":"ElementaryTypeName","src":"16454:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":836,"name":"_scAddr","nodeType":"VariableDeclaration","scope":850,"src":"16473:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16473:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16453:36:0"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"name":"","nodeType":"VariableDeclaration","scope":850,"src":"16523:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"16523:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":839,"length":null,"nodeType":"ArrayTypeName","src":"16523:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"16522:18:0"},"scope":949,"src":"16430:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":868,"nodeType":"Block","src":"16899:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":864,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"16942:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":865,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"16949:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":862,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"16916:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":9447,"src":"16916:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2713_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16916:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":861,"id":867,"nodeType":"Return","src":"16909:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":869,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":855,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"16847:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":856,"modifierName":{"argumentTypes":null,"id":854,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"16830:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"16830:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"name":"_custodian","nodeType":"VariableDeclaration","scope":869,"src":"16786:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"16786:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"16785:20:0"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"name":"","nodeType":"VariableDeclaration","scope":869,"src":"16872:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"16872:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":860,"name":"","nodeType":"VariableDeclaration","scope":869,"src":"16881:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":859,"name":"bytes","nodeType":"ElementaryTypeName","src":"16881:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"16871:23:0"},"scope":949,"src":"16767:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":884,"nodeType":"Block","src":"17282:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":880,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"17328:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":881,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"17335:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":878,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"17299:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":9473,"src":"17299:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17299:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":877,"id":883,"nodeType":"Return","src":"17292:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":885,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"name":"_data","nodeType":"VariableDeclaration","scope":885,"src":"17194:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":870,"name":"bytes","nodeType":"ElementaryTypeName","src":"17194:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":873,"name":"_signature","nodeType":"VariableDeclaration","scope":885,"src":"17214:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":872,"name":"bytes","nodeType":"ElementaryTypeName","src":"17214:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17193:45:0"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"name":"","nodeType":"VariableDeclaration","scope":885,"src":"17272:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint","nodeType":"ElementaryTypeName","src":"17272:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17271:6:0"},"scope":949,"src":"17172:181:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":900,"nodeType":"Block","src":"17621:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":896,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"17676:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":897,"name":"_updatedEnigmaContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"17683:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":894,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9076,"src":"17638:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$9076_$","typeString":"type(library UpgradeImpl)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeEnigmaContractImpl","nodeType":"MemberAccess","referencedDeclaration":8997,"src":"17638:37:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17638:75:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":893,"id":899,"nodeType":"Return","src":"17631:82:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address","id":901,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":890,"modifierName":{"argumentTypes":null,"id":889,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22981,"src":"17579:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17579:9:0"},{"arguments":null,"id":892,"modifierName":{"argumentTypes":null,"id":891,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"17593:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17593:23:0"}],"name":"upgradeEnigmaContract","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"name":"_updatedEnigmaContractAddress","nodeType":"VariableDeclaration","scope":901,"src":"17525:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"17525:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17524:39:0"},"returnParameters":{"id":893,"nodeType":"ParameterList","parameters":[],"src":"17621:0:0"},"scope":949,"src":"17494:226:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":919,"nodeType":"Block","src":"18059:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":914,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"18123:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":915,"name":"_workerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"18130:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":916,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"18146:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":912,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9076,"src":"18076:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$9076_$","typeString":"type(library UpgradeImpl)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferWorkerStakePostUpgradeImpl","nodeType":"MemberAccess","referencedDeclaration":9075,"src":"18076:46:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory) returns (uint256)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18076:75:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":911,"id":918,"nodeType":"Return","src":"18069:82:0"}]},"documentation":"Transfer worker stake from old contract to new contract upon registration\\n@param _workerAddress Newly-registered worker address\\n@param _sig Signature","id":920,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":908,"modifierName":{"argumentTypes":null,"id":907,"name":"fromUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"18007:25:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18007:25:0"}],"name":"transferWorkerStakePostUpgrade","nodeType":"FunctionDefinition","parameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"name":"_workerAddress","nodeType":"VariableDeclaration","scope":920,"src":"17949:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":902,"name":"address","nodeType":"ElementaryTypeName","src":"17949:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":905,"name":"_sig","nodeType":"VariableDeclaration","scope":920,"src":"17973:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":904,"name":"bytes","nodeType":"ElementaryTypeName","src":"17973:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17948:43:0"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"name":"","nodeType":"VariableDeclaration","scope":920,"src":"18046:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"18046:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18045:9:0"},"scope":949,"src":"17909:249:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":933,"nodeType":"Block","src":"18304:43:0","statements":[{"expression":{"argumentTypes":null,"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":927,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"18314:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"mrSigner","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"18314:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":930,"name":"_mrSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"18331:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"18314:26:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":932,"nodeType":"ExpressionStatement","src":"18314:26:0"}]},"documentation":"Set mrSigner\\n@param _mrSigner mrSigner","id":934,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":925,"modifierName":{"argumentTypes":null,"id":924,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22981,"src":"18290:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18290:9:0"}],"name":"setMrSigner","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"name":"_mrSigner","nodeType":"VariableDeclaration","scope":934,"src":"18251:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":921,"name":"bytes","nodeType":"ElementaryTypeName","src":"18251:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18250:24:0"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[],"src":"18304:0:0"},"scope":949,"src":"18230:117:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":947,"nodeType":"Block","src":"18485:39:0","statements":[{"expression":{"argumentTypes":null,"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":941,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"18495:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isvSvn","nodeType":"MemberAccess","referencedDeclaration":2712,"src":"18495:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":944,"name":"_isvSvn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"18510:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"18495:22:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":946,"nodeType":"ExpressionStatement","src":"18495:22:0"}]},"documentation":"Set isvSvn\\n@param _isvSvn mrSigner","id":948,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":939,"modifierName":{"argumentTypes":null,"id":938,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22981,"src":"18471:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18471:9:0"}],"name":"setIsvSvn","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"name":"_isvSvn","nodeType":"VariableDeclaration","scope":948,"src":"18434:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":935,"name":"bytes","nodeType":"ElementaryTypeName","src":"18434:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18433:22:0"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[],"src":"18485:0:0"},"scope":949,"src":"18415:109:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":950,"src":"886:17640:0"}],"src":"0:18527:0"},"legacyAST":{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/Enigma.sol","exportedSymbols":{"Enigma":[949]},"id":950,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".12"],"nodeType":"PragmaDirective","src":"0:24:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"25:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":950,"sourceUnit":22935,"src":"60:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":950,"sourceUnit":22748,"src":"120:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/ownership/Ownable.sol","file":"openzeppelin-solidity/contracts/ownership/Ownable.sol","id":5,"nodeType":"ImportDirective","scope":950,"sourceUnit":23049,"src":"185:63:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":6,"nodeType":"ImportDirective","scope":950,"sourceUnit":22640,"src":"249:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":8,"nodeType":"ImportDirective","scope":950,"sourceUnit":10154,"src":"285:53:0","symbolAliases":[{"foreign":7,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":10,"nodeType":"ImportDirective","scope":950,"sourceUnit":3451,"src":"339:57:0","symbolAliases":[{"foreign":9,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":12,"nodeType":"ImportDirective","scope":950,"sourceUnit":6494,"src":"397:47:0","symbolAliases":[{"foreign":11,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/UpgradeImpl.sol","file":"./impl/UpgradeImpl.sol","id":14,"nodeType":"ImportDirective","scope":950,"sourceUnit":9077,"src":"445:53:0","symbolAliases":[{"foreign":13,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":16,"nodeType":"ImportDirective","scope":950,"sourceUnit":4091,"src":"499:67:0","symbolAliases":[{"foreign":15,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":18,"nodeType":"ImportDirective","scope":950,"sourceUnit":2529,"src":"567:55:0","symbolAliases":[{"foreign":17,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":20,"nodeType":"ImportDirective","scope":950,"sourceUnit":2715,"src":"623:53:0","symbolAliases":[{"foreign":19,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":22,"nodeType":"ImportDirective","scope":950,"sourceUnit":2655,"src":"677:55:0","symbolAliases":[{"foreign":21,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":24,"nodeType":"ImportDirective","scope":950,"sourceUnit":2723,"src":"733:57:0","symbolAliases":[{"foreign":23,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":26,"nodeType":"ImportDirective","scope":950,"sourceUnit":2924,"src":"791:45:0","symbolAliases":[{"foreign":25,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":28,"nodeType":"ImportDirective","scope":950,"sourceUnit":11162,"src":"837:47:0","symbolAliases":[{"foreign":27,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":29,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2722,"src":"905:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2722","typeString":"contract EnigmaStorage"}},"id":30,"nodeType":"InheritanceSpecifier","src":"905:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":31,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2654,"src":"920:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2654","typeString":"contract EnigmaEvents"}},"id":32,"nodeType":"InheritanceSpecifier","src":"920:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":33,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2923,"src":"934:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2923","typeString":"contract Getters"}},"id":34,"nodeType":"InheritanceSpecifier","src":"934:7:0"},{"arguments":null,"baseName":{"contractScope":null,"id":35,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":23048,"src":"943:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$23048","typeString":"contract Ownable"}},"id":36,"nodeType":"InheritanceSpecifier","src":"943:7:0"}],"contractDependencies":[2654,2722,2923,22666,23048],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":949,"linearizedBaseContracts":[949,23048,22666,2923,2654,2722],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":39,"libraryName":{"contractScope":null,"id":37,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":22934,"src":"963:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$22934","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"957:27:0","typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":42,"libraryName":{"contractScope":null,"id":40,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":22934,"src":"995:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$22934","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"989:26:0","typeName":{"id":41,"name":"uint64","nodeType":"ElementaryTypeName","src":"1008:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}},{"id":45,"libraryName":{"contractScope":null,"id":43,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":22747,"src":"1026:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$22747","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"1020:24:0","typeName":{"id":44,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1036:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":129,"nodeType":"Block","src":"1336:442:0","statements":[{"expression":{"argumentTypes":null,"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":62,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1346:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":64,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2663,"src":"1346:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11161","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":66,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"1369:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":65,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11161,"src":"1363:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$11161_$","typeString":"type(contract ERC20)"}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1363:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11161","typeString":"contract ERC20"}},"src":"1346:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11161","typeString":"contract ERC20"}},"id":69,"nodeType":"ExpressionStatement","src":"1346:37:0"},{"expression":{"argumentTypes":null,"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":70,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1393:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":72,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2665,"src":"1393:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":73,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"1411:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1393:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":75,"nodeType":"ExpressionStatement","src":"1393:28:0"},{"expression":{"argumentTypes":null,"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":76,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1431:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":78,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2667,"src":"1431:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":79,"name":"_timeoutThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"1455:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":80,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1475:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":81,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2665,"src":"1475:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1455:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1431:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":84,"nodeType":"ExpressionStatement","src":"1431:59:0"},{"expression":{"argumentTypes":null,"id":89,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":85,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1500:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":87,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2669,"src":"1500:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":88,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"1518:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1500:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":90,"nodeType":"ExpressionStatement","src":"1500:28:0"},{"expression":{"argumentTypes":null,"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":91,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1538:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":93,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"exchangeRate","nodeType":"MemberAccess","referencedDeclaration":2671,"src":"1538:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":94,"name":"_exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"1559:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1538:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":96,"nodeType":"ExpressionStatement","src":"1538:34:0"},{"expression":{"argumentTypes":null,"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":97,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1582:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":99,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2673,"src":"1582:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":101,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23649,"src":"1627:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$949","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$949","typeString":"contract Enigma"}],"id":100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1619:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1619:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1582:50:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"1582:50:0"},{"expression":{"argumentTypes":null,"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":105,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1642:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2706,"src":"1642:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1667:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1642:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":110,"nodeType":"ExpressionStatement","src":"1642:26:0"},{"expression":{"argumentTypes":null,"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":111,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1678:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2708,"src":"1678:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1678:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":116,"nodeType":"ExpressionStatement","src":"1678:25:0"},{"expression":{"argumentTypes":null,"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":117,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1713:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"mrSigner","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"1713:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":120,"name":"_mrSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"1730:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1713:26:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":122,"nodeType":"ExpressionStatement","src":"1713:26:0"},{"expression":{"argumentTypes":null,"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":123,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1749:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isvSvn","nodeType":"MemberAccess","referencedDeclaration":2712,"src":"1749:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":126,"name":"_isvSvn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"1764:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1749:22:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":128,"nodeType":"ExpressionStatement","src":"1749:22:0"}]},"documentation":null,"id":130,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":130,"src":"1168:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1168:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":49,"name":"_principal","nodeType":"VariableDeclaration","scope":130,"src":"1191:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1191:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":51,"name":"_exchangeRate","nodeType":"VariableDeclaration","scope":130,"src":"1211:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":53,"name":"_epochSize","nodeType":"VariableDeclaration","scope":130,"src":"1234:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint","nodeType":"ElementaryTypeName","src":"1234:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":55,"name":"_timeoutThreshold","nodeType":"VariableDeclaration","scope":130,"src":"1259:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint","nodeType":"ElementaryTypeName","src":"1259:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":57,"name":"_mrSigner","nodeType":"VariableDeclaration","scope":130,"src":"1283:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56,"name":"bytes","nodeType":"ElementaryTypeName","src":"1283:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":59,"name":"_isvSvn","nodeType":"VariableDeclaration","scope":130,"src":"1307:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":58,"name":"bytes","nodeType":"ElementaryTypeName","src":"1307:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"1167:161:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"1336:0:0"},"scope":949,"src":"1156:622:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":154,"nodeType":"Block","src":"2068:181:0","statements":[{"assignments":[137],"declarations":[{"constant":false,"id":137,"name":"worker","nodeType":"VariableDeclaration","scope":154,"src":"2078:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":136,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2395,"src":"2078:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":142,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":138,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"2114:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"2114:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2395_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":141,"indexExpression":{"argumentTypes":null,"id":140,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2128:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2114:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2078:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":144,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2152:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"2152:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":146,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"2169:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2436,"src":"2169:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2436_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2169:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2152:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2209:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"2144:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2144:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":152,"nodeType":"ExpressionStatement","src":"2144:87:0"},{"id":153,"nodeType":"PlaceholderStatement","src":"2241:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":155,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"name":"_user","nodeType":"VariableDeclaration","scope":155,"src":"2053:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":131,"name":"address","nodeType":"ElementaryTypeName","src":"2053:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2052:15:0"},"src":"2027:222:0","visibility":"internal"},{"body":{"id":179,"nodeType":"Block","src":"2432:178:0","statements":[{"assignments":[162],"declarations":[{"constant":false,"id":162,"name":"worker","nodeType":"VariableDeclaration","scope":179,"src":"2442:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":161,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2395,"src":"2442:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":167,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":163,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"2478:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"2478:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2395_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":166,"indexExpression":{"argumentTypes":null,"id":165,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2492:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2478:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2442:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":169,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2516:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"2516:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":171,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"2533:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2436,"src":"2533:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2436_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2533:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2516:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2569:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":168,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"2508:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2508:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":177,"nodeType":"ExpressionStatement","src":"2508:84:0"},{"id":178,"nodeType":"PlaceholderStatement","src":"2602:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":180,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"name":"_user","nodeType":"VariableDeclaration","scope":180,"src":"2417:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"2417:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2416:15:0"},"src":"2393:217:0","visibility":"internal"},{"body":{"id":204,"nodeType":"Block","src":"2795:180:0","statements":[{"assignments":[187],"declarations":[{"constant":false,"id":187,"name":"worker","nodeType":"VariableDeclaration","scope":204,"src":"2805:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":186,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2395,"src":"2805:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":192,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":188,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"2841:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"2841:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2395_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":191,"indexExpression":{"argumentTypes":null,"id":190,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"2855:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2841:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2805:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":194,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"2879:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"2879:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":196,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"2896:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2436,"src":"2896:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2436_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2896:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2879:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2933:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2871:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"2871:86:0"},{"id":203,"nodeType":"PlaceholderStatement","src":"2967:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":205,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"name":"_user","nodeType":"VariableDeclaration","scope":205,"src":"2780:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"2780:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2779:15:0"},"src":"2755:220:0","visibility":"internal"},{"body":{"id":248,"nodeType":"Block","src":"3124:395:0","statements":[{"assignments":[212],"declarations":[{"constant":false,"id":212,"name":"worker","nodeType":"VariableDeclaration","scope":248,"src":"3134:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":211,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2395,"src":"3134:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":217,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":213,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"3170:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"3170:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2395_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":216,"indexExpression":{"argumentTypes":null,"id":215,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"3184:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3170:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3134:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":220,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23585,"src":"3228:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3228:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":219,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"3208:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3208:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3245:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3208:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3248:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":218,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"3200:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3200:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":227,"nodeType":"ExpressionStatement","src":"3200:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":229,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"3308:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"3308:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":231,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"3325:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2436,"src":"3325:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2436_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3325:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3308:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3362:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":228,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"3300:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3300:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":237,"nodeType":"ExpressionStatement","src":"3300:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":239,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"3422:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2391,"src":"3422:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":241,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"3440:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2706,"src":"3440:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3422:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3464:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"3414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3414:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":246,"nodeType":"ExpressionStatement","src":"3414:87:0"},{"id":247,"nodeType":"PlaceholderStatement","src":"3511:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":249,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"name":"_user","nodeType":"VariableDeclaration","scope":249,"src":"3109:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3109:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3108:15:0"},"src":"3091:428:0","visibility":"internal"},{"body":{"id":305,"nodeType":"Block","src":"3677:580:0","statements":[{"assignments":[256],"declarations":[{"constant":false,"id":256,"name":"worker","nodeType":"VariableDeclaration","scope":305,"src":"3687:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":255,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2395,"src":"3687:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":261,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":257,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"3723:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"3723:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2395_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":260,"indexExpression":{"argumentTypes":null,"id":259,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"3737:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3723:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3687:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":263,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"3761:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"3761:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":265,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"3778:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2436,"src":"3778:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2436_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3778:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2436","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3761:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3815:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"3753:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3753:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":271,"nodeType":"ExpressionStatement","src":"3753:104:0"},{"assignments":[275],"declarations":[{"constant":false,"id":275,"name":"workerLog","nodeType":"VariableDeclaration","scope":305,"src":"3867:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2413_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":274,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2413,"src":"3867:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2413_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":282,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":278,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"3944:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":279,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23585,"src":"3952:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3952:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2395_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":276,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"3909:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":10152,"src":"3909:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2395_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2413_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3909:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2413_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3867:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2444","typeString":"enum EnigmaCommon.WorkerLogType"},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":284,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"3983:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2413_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2408,"src":"3983:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2444","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":286,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"4012:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2444,"src":"4012:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2444_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4012:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2444","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3983:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4059:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"3975:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3975:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":292,"nodeType":"ExpressionStatement","src":"3975:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":295,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23585,"src":"4139:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4139:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":294,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"4119:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4119:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":298,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"4155:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2413_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2410,"src":"4155:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4119:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4190:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":293,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"4111:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4111:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":303,"nodeType":"ExpressionStatement","src":"4111:128:0"},{"id":304,"nodeType":"PlaceholderStatement","src":"4249:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":306,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"name":"_user","nodeType":"VariableDeclaration","scope":306,"src":"3662:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":250,"name":"address","nodeType":"ElementaryTypeName","src":"3662:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3661:15:0"},"src":"3641:616:0","visibility":"internal"},{"body":{"id":324,"nodeType":"Block","src":"4424:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2439","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":311,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"4442:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2700,"src":"4442:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2425_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":314,"indexExpression":{"argumentTypes":null,"id":313,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"4458:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4442:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2425_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2424,"src":"4442:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2439","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":316,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"4477:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2439,"src":"4477:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2439_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4477:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2439","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4442:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4522:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"4434:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4434:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"ExpressionStatement","src":"4434:123:0"},{"id":323,"nodeType":"PlaceholderStatement","src":"4567:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":325,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"name":"_scAddr","nodeType":"VariableDeclaration","scope":325,"src":"4407:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4407:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4406:17:0"},"src":"4380:195:0","visibility":"internal"},{"body":{"id":343,"nodeType":"Block","src":"4737:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2439","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":330,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"4755:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2700,"src":"4755:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2425_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":333,"indexExpression":{"argumentTypes":null,"id":332,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"4771:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4755:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2425_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2424,"src":"4755:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2439","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":335,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"4790:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2439,"src":"4790:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2439_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4790:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2439","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4755:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4834:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":329,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"4747:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4747:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":341,"nodeType":"ExpressionStatement","src":"4747:118:0"},{"id":342,"nodeType":"PlaceholderStatement","src":"4875:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":344,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"name":"_scAddr","nodeType":"VariableDeclaration","scope":344,"src":"4720:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4720:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4719:17:0"},"src":"4694:189:0","visibility":"internal"},{"body":{"id":362,"nodeType":"Block","src":"5048:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2432","typeString":"enum EnigmaCommon.TaskStatus"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":349,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"5066:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2693,"src":"5066:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2383_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":352,"indexExpression":{"argumentTypes":null,"id":351,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5078:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5066:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2383_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"5066:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2432","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":354,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"5097:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2528_$","typeString":"type(library EnigmaCommon)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2432,"src":"5097:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2432_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5097:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2432","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"5066:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5136:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":348,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"5058:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5058:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":360,"nodeType":"ExpressionStatement","src":"5058:100:0"},{"id":361,"nodeType":"PlaceholderStatement","src":"5168:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":363,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"name":"_taskId","nodeType":"VariableDeclaration","scope":363,"src":"5031:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5031:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"5030:17:0"},"src":"5010:166:0","visibility":"internal"},{"body":{"id":396,"nodeType":"Block","src":"5338:202:0","statements":[{"body":{"id":393,"nodeType":"Block","src":"5404:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":380,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"5426:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"5426:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2395_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":386,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":382,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"5440:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":383,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"5440:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":385,"indexExpression":{"argumentTypes":null,"id":384,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"5462:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5440:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5426:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2395_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"5426:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":388,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"5476:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5426:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5485:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":379,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"5418:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5418:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":392,"nodeType":"ExpressionStatement","src":"5418:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":371,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"5365:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":372,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"5369:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"5369:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5369:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5365:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":394,"initializationExpression":{"assignments":[368],"declarations":[{"constant":false,"id":368,"name":"i","nodeType":"VariableDeclaration","scope":394,"src":"5353:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":367,"name":"uint","nodeType":"ElementaryTypeName","src":"5353:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":370,"initialValue":{"argumentTypes":null,"hexValue":"30","id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5362:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5353:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5399:3:0","subExpression":{"argumentTypes":null,"id":376,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"5399:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":378,"nodeType":"ExpressionStatement","src":"5399:3:0"},"nodeType":"ForStatement","src":"5348:175:0"},{"id":395,"nodeType":"PlaceholderStatement","src":"5532:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":397,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"name":"_signer","nodeType":"VariableDeclaration","scope":397,"src":"5321:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"5321:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5320:17:0"},"src":"5293:247:0","visibility":"internal"},{"body":{"id":410,"nodeType":"Block","src":"5667:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":401,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23649,"src":"5693:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$949","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$949","typeString":"contract Enigma"}],"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5685:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5685:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":403,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"5702:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2673,"src":"5702:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5685:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74207570646174656420456e69676d6120636f6e7472616374","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5738:29:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""},"value":"Not updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""}],"id":399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"5677:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5677:91:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":408,"nodeType":"ExpressionStatement","src":"5677:91:0"},{"id":409,"nodeType":"PlaceholderStatement","src":"5778:1:0"}]},"documentation":"Ensure that the contract\'s context is the updated contract\\n    ","id":411,"name":"isUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[],"src":"5664:2:0"},"src":"5632:154:0","visibility":"internal"},{"body":{"id":423,"nodeType":"Block","src":"5917:121:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":414,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"5935:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5935:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":416,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"5949:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2673,"src":"5949:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5935:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5985:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""},"value":"Not from updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""}],"id":413,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23598,23599],"referencedDeclaration":23599,"src":"5927:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5927:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"ExpressionStatement","src":"5927:93:0"},{"id":422,"nodeType":"PlaceholderStatement","src":"6030:1:0"}]},"documentation":"Ensure the sender of the recent call is the updated contract\\n    ","id":424,"name":"fromUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[],"src":"5914:2:0"},"src":"5880:158:0","visibility":"internal"},{"body":{"id":447,"nodeType":"Block","src":"6687:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":441,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"6722:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":442,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"6729:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":443,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"6738:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":444,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"6747:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":438,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"6697:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":9410,"src":"6697:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6697:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"6697:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":448,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":433,"modifierName":{"argumentTypes":null,"id":432,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"6627:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6627:23:0"},{"arguments":[{"argumentTypes":null,"id":435,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"6674:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":436,"modifierName":{"argumentTypes":null,"id":434,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6655:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6655:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"name":"_signer","nodeType":"VariableDeclaration","scope":448,"src":"6548:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"6548:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":428,"name":"_report","nodeType":"VariableDeclaration","scope":448,"src":"6565:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":427,"name":"bytes","nodeType":"ElementaryTypeName","src":"6565:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":430,"name":"_signature","nodeType":"VariableDeclaration","scope":448,"src":"6587:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":429,"name":"bytes","nodeType":"ElementaryTypeName","src":"6587:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"6547:64:0"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"6687:0:0"},"scope":949,"src":"6530:235:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":468,"nodeType":"Block","src":"7135:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":463,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"7169:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":464,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"7176:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":465,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"7188:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":460,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"7145:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":9626,"src":"7145:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7145:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":467,"nodeType":"ExpressionStatement","src":"7145:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":469,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":455,"modifierName":{"argumentTypes":null,"id":454,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"7074:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"7074:23:0"},{"arguments":[{"argumentTypes":null,"id":457,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"7119:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":458,"modifierName":{"argumentTypes":null,"id":456,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"7102:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7102:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"name":"_custodian","nodeType":"VariableDeclaration","scope":469,"src":"7025:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"7025:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":452,"name":"_amount","nodeType":"VariableDeclaration","scope":469,"src":"7045:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":451,"name":"uint","nodeType":"ElementaryTypeName","src":"7045:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7024:34:0"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"7135:0:0"},"scope":949,"src":"7008:195:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":485,"nodeType":"Block","src":"7476:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":481,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"7511:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":482,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"7518:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":478,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"7486:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":9679,"src":"7486:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7486:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":484,"nodeType":"ExpressionStatement","src":"7486:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":486,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":474,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"7460:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7460:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":476,"modifierName":{"argumentTypes":null,"id":473,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7448:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7448:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"name":"_amount","nodeType":"VariableDeclaration","scope":486,"src":"7419:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":470,"name":"uint","nodeType":"ElementaryTypeName","src":"7419:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7418:14:0"},"returnParameters":{"id":477,"nodeType":"ParameterList","parameters":[],"src":"7476:0:0"},"scope":949,"src":"7401:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":499,"nodeType":"Block","src":"7741:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":496,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"7773:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":493,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"7751:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":9519,"src":"7751:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7751:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"ExpressionStatement","src":"7751:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":500,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":489,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"7729:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7729:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":491,"modifierName":{"argumentTypes":null,"id":488,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"7720:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7720:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":487,"nodeType":"ParameterList","parameters":[],"src":"7710:2:0"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[],"src":"7741:0:0"},"scope":949,"src":"7696:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":513,"nodeType":"Block","src":"7915:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":510,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"7948:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":507,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"7925:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":9565,"src":"7925:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7925:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":512,"nodeType":"ExpressionStatement","src":"7925:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":514,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":503,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"7903:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7903:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":505,"modifierName":{"argumentTypes":null,"id":502,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"7888:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7888:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":501,"nodeType":"ParameterList","parameters":[],"src":"7878:2:0"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"7915:0:0"},"scope":949,"src":"7863:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":544,"nodeType":"Block","src":"8521:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":537,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"8572:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":538,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"8579:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":539,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"8588:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":540,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"8599:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":541,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"8609:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":534,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"8531:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6493_$","typeString":"type(library TaskImpl)"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"8531:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8531:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":543,"nodeType":"ExpressionStatement","src":"8531:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":545,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":525,"modifierName":{"argumentTypes":null,"id":524,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"8431:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8431:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":527,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"8474:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8474:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":529,"modifierName":{"argumentTypes":null,"id":526,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"8459:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8459:26:0"},{"arguments":[{"argumentTypes":null,"id":531,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"8508:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":532,"modifierName":{"argumentTypes":null,"id":530,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"8490:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8490:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"name":"_taskId","nodeType":"VariableDeclaration","scope":545,"src":"8315:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8315:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":518,"name":"_codeHash","nodeType":"VariableDeclaration","scope":545,"src":"8340:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8340:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":520,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":545,"src":"8367:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":519,"name":"uint64","nodeType":"ElementaryTypeName","src":"8367:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":522,"name":"_sig","nodeType":"VariableDeclaration","scope":545,"src":"8392:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":521,"name":"bytes","nodeType":"ElementaryTypeName","src":"8392:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8305:110:0"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"8521:0:0"},"scope":949,"src":"8269:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":582,"nodeType":"Block","src":"9421:153:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":574,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"9465:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":575,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"9472:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":576,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"9482:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":577,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"9516:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},{"argumentTypes":null,"id":578,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"9539:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":579,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"9562:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":571,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"9431:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6493_$","typeString":"type(library TaskImpl)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":5083,"src":"9431:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_uint64_$_t_address_$_t_array$_t_bytes32_$4_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint64,address,bytes32[4] memory,bytes memory,bytes memory)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9431:136:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"ExpressionStatement","src":"9431:136:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _gasUsed Gas used for task\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _bytes32s [taskId, preCodeHash, codeHash, initStateDeltaHash]\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _sig Worker\'s signature for deployment","id":583,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":560,"modifierName":{"argumentTypes":null,"id":559,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"9326:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9326:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":562,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"9369:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9369:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":564,"modifierName":{"argumentTypes":null,"id":561,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"9354:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"9354:26:0"},{"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":566,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"9403:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},"id":568,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9413:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9403:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":569,"modifierName":{"argumentTypes":null,"id":565,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"9385:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"9385:31:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":583,"src":"9131:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":546,"name":"uint64","nodeType":"ElementaryTypeName","src":"9131:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":549,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":583,"src":"9156:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"9156:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":553,"name":"_bytes32s","nodeType":"VariableDeclaration","scope":583,"src":"9206:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4]"},"typeName":{"baseType":{"id":550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9206:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":552,"length":{"argumentTypes":null,"hexValue":"34","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9214:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"9206:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_storage_ptr","typeString":"bytes32[4]"}},"value":null,"visibility":"internal"},{"constant":false,"id":555,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":583,"src":"9243:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":554,"name":"bytes","nodeType":"ElementaryTypeName","src":"9243:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":557,"name":"_sig","nodeType":"VariableDeclaration","scope":583,"src":"9287:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":556,"name":"bytes","nodeType":"ElementaryTypeName","src":"9287:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"9121:189:0"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[],"src":"9421:0:0"},"scope":949,"src":"9092:482:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":593,"nodeType":"Block","src":"9776:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":590,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"9837:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":588,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"9793:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$4090_$","typeString":"type(library SecretContractImpl)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":4022,"src":"9793:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2713_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9793:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":587,"id":592,"nodeType":"Return","src":"9786:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":594,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":584,"nodeType":"ParameterList","parameters":[],"src":"9730:2:0"},"returnParameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"name":"","nodeType":"VariableDeclaration","scope":594,"src":"9766:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint","nodeType":"ElementaryTypeName","src":"9766:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9765:6:0"},"scope":949,"src":"9701:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":611,"nodeType":"Block","src":"10179:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":606,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"10246:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":607,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"10253:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":608,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"10261:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":604,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"10196:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$4090_$","typeString":"type(library SecretContractImpl)"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":4089,"src":"10196:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2713_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10196:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":603,"id":610,"nodeType":"Return","src":"10189:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":612,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"name":"_start","nodeType":"VariableDeclaration","scope":612,"src":"10099:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint","nodeType":"ElementaryTypeName","src":"10099:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":598,"name":"_stop","nodeType":"VariableDeclaration","scope":612,"src":"10112:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint","nodeType":"ElementaryTypeName","src":"10112:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10098:25:0"},"returnParameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"name":"","nodeType":"VariableDeclaration","scope":612,"src":"10157:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10157:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":601,"length":null,"nodeType":"ArrayTypeName","src":"10157:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"10156:18:0"},"scope":949,"src":"10063:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":640,"nodeType":"Block","src":"11357:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":632,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"11407:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":633,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"11414:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":634,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"11427:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":635,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"11438:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":636,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"11446:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":637,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"11465:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":629,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"11367:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6493_$","typeString":"type(library TaskImpl)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4383,"src":"11367:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11367:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":639,"nodeType":"ExpressionStatement","src":"11367:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":641,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":625,"modifierName":{"argumentTypes":null,"id":624,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22981,"src":"11315:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11315:9:0"},{"arguments":null,"id":627,"modifierName":{"argumentTypes":null,"id":626,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"11329:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11329:23:0"}],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":641,"src":"11172:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11172:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":616,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":641,"src":"11201:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":615,"name":"uint64","nodeType":"ElementaryTypeName","src":"11201:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":618,"name":"_gasPx","nodeType":"VariableDeclaration","scope":641,"src":"11227:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":617,"name":"uint64","nodeType":"ElementaryTypeName","src":"11227:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":620,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":641,"src":"11250:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint","nodeType":"ElementaryTypeName","src":"11250:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":622,"name":"_nonce","nodeType":"VariableDeclaration","scope":641,"src":"11282:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":621,"name":"uint","nodeType":"ElementaryTypeName","src":"11282:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11162:137:0"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[],"src":"11357:0:0"},"scope":949,"src":"11127:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":664,"nodeType":"Block","src":"12239:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":657,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"12279:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":658,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"12286:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":659,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"12299:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":660,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"12310:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":661,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"12318:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":654,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"12249:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6493_$","typeString":"type(library TaskImpl)"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":5326,"src":"12249:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12249:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"ExpressionStatement","src":"12249:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":665,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":652,"modifierName":{"argumentTypes":null,"id":651,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"12211:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12211:23:0"}],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":665,"src":"12089:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12089:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":645,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":665,"src":"12118:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":644,"name":"uint64","nodeType":"ElementaryTypeName","src":"12118:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":647,"name":"_gasPx","nodeType":"VariableDeclaration","scope":665,"src":"12144:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":646,"name":"uint64","nodeType":"ElementaryTypeName","src":"12144:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":649,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":665,"src":"12167:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint","nodeType":"ElementaryTypeName","src":"12167:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12079:116:0"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[],"src":"12239:0:0"},"scope":949,"src":"12054:289:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":702,"nodeType":"Block","src":"13161:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":694,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"13198:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":695,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"13205:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":696,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"13215:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":697,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"13261:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},{"argumentTypes":null,"id":698,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"13272:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":699,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"13295:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":691,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"13171:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6493_$","typeString":"type(library TaskImpl)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":6129,"src":"13171:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_uint64_$_t_address_$_t_array$_t_bytes32_$4_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint64,address,bytes32[4] memory,bytes memory,bytes memory)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13171:129:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"ExpressionStatement","src":"13171:129:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _gasUsed Gas used for task computation\\n@param _optionalEthereumContractAddress Output state hash\\n@param _bytes32s [scAddr, taskId, stateDeltaHash, outputHash]\\n@param _optionalEthereumData Output state hash\\n@param _sig Worker\'s signature","id":703,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":680,"modifierName":{"argumentTypes":null,"id":679,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"13067:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13067:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":682,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"13110:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13110:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":684,"modifierName":{"argumentTypes":null,"id":681,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"13095:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13095:26:0"},{"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":686,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"13143:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},"id":688,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13153:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13143:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":689,"modifierName":{"argumentTypes":null,"id":685,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"13126:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13126:30:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":703,"src":"12872:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":666,"name":"uint64","nodeType":"ElementaryTypeName","src":"12872:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":669,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":703,"src":"12897:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"12897:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":673,"name":"_bytes32s","nodeType":"VariableDeclaration","scope":703,"src":"12947:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4]"},"typeName":{"baseType":{"id":670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12947:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":672,"length":{"argumentTypes":null,"hexValue":"34","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12955:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"12947:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_storage_ptr","typeString":"bytes32[4]"}},"value":null,"visibility":"internal"},{"constant":false,"id":675,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":703,"src":"12984:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":674,"name":"bytes","nodeType":"ElementaryTypeName","src":"12984:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":677,"name":"_sig","nodeType":"VariableDeclaration","scope":703,"src":"13028:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":676,"name":"bytes","nodeType":"ElementaryTypeName","src":"13028:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"12862:189:0"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"13161:0:0"},"scope":949,"src":"12840:467:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":736,"nodeType":"Block","src":"13966:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":728,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"14007:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":729,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"14014:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":730,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"14023:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":731,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"14032:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":732,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"14045:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":733,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"14055:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":725,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"13976:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6493_$","typeString":"type(library TaskImpl)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5524,"src":"13976:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13976:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":735,"nodeType":"ExpressionStatement","src":"13976:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":737,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":716,"modifierName":{"argumentTypes":null,"id":715,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"13877:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13877:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":718,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"13920:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13920:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":720,"modifierName":{"argumentTypes":null,"id":717,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"13905:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13905:26:0"},{"arguments":[{"argumentTypes":null,"id":722,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"13953:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":723,"modifierName":{"argumentTypes":null,"id":721,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"13936:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13936:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"name":"_scAddr","nodeType":"VariableDeclaration","scope":737,"src":"13734:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13734:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":707,"name":"_taskId","nodeType":"VariableDeclaration","scope":737,"src":"13759:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13759:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":709,"name":"_outputHash","nodeType":"VariableDeclaration","scope":737,"src":"13784:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13784:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":711,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":737,"src":"13813:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":710,"name":"uint64","nodeType":"ElementaryTypeName","src":"13813:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":713,"name":"_sig","nodeType":"VariableDeclaration","scope":737,"src":"13838:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":712,"name":"bytes","nodeType":"ElementaryTypeName","src":"13838:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13724:137:0"},"returnParameters":{"id":724,"nodeType":"ParameterList","parameters":[],"src":"13966:0:0"},"scope":949,"src":"13698:369:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":752,"nodeType":"Block","src":"14318:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":748,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"14359:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":749,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"14366:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":745,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"14328:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6493_$","typeString":"type(library TaskImpl)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6492,"src":"14328:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14328:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":751,"nodeType":"ExpressionStatement","src":"14328:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":753,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":742,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"14305:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":743,"modifierName":{"argumentTypes":null,"id":741,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"14293:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14293:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"name":"_taskId","nodeType":"VariableDeclaration","scope":753,"src":"14261:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14261:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14260:17:0"},"returnParameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"14318:0:0"},"scope":949,"src":"14234:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":777,"nodeType":"Block","src":"14869:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":771,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"14914:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":772,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"14921:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":773,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"14935:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":774,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"14942:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":768,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"14879:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3450_$","typeString":"type(library PrincipalImpl)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":3279,"src":"14879:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14879:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":776,"nodeType":"ExpressionStatement","src":"14879:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":778,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":762,"modifierName":{"argumentTypes":null,"id":761,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"14808:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"14808:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":764,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"14853:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14853:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":766,"modifierName":{"argumentTypes":null,"id":763,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"14836:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14836:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":778,"src":"14743:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint","nodeType":"ElementaryTypeName","src":"14743:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":757,"name":"_seed","nodeType":"VariableDeclaration","scope":778,"src":"14762:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint","nodeType":"ElementaryTypeName","src":"14762:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":759,"name":"_sig","nodeType":"VariableDeclaration","scope":778,"src":"14774:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":758,"name":"bytes","nodeType":"ElementaryTypeName","src":"14774:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14742:50:0"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[],"src":"14869:0:0"},"scope":949,"src":"14717:237:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":795,"nodeType":"Block","src":"15190:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":791,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"15242:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":792,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"15249:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":789,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"15207:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3450_$","typeString":"type(library PrincipalImpl)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3449,"src":"15207:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2713_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15207:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":788,"id":794,"nodeType":"Return","src":"15200:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":796,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":796,"src":"15101:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":779,"name":"uint","nodeType":"ElementaryTypeName","src":"15101:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15100:19:0"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"name":"","nodeType":"VariableDeclaration","scope":796,"src":"15153:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"15153:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":783,"length":null,"nodeType":"ArrayTypeName","src":"15153:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":787,"name":"","nodeType":"VariableDeclaration","scope":796,"src":"15171:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":785,"name":"uint","nodeType":"ElementaryTypeName","src":"15171:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":786,"length":null,"nodeType":"ArrayTypeName","src":"15171:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15152:33:0"},"scope":949,"src":"15075:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":809,"nodeType":"Block","src":"15531:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":805,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"15584:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":806,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"15591:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":803,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"15548:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":9799,"src":"15548:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2713_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15548:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":802,"id":808,"nodeType":"Return","src":"15541:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":810,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":810,"src":"15473:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint","nodeType":"ElementaryTypeName","src":"15473:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15472:19:0"},"returnParameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"name":"","nodeType":"VariableDeclaration","scope":810,"src":"15525:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":800,"name":"uint","nodeType":"ElementaryTypeName","src":"15525:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15524:6:0"},"scope":949,"src":"15444:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":831,"nodeType":"Block","src":"16017:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":827,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"16066:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":828,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"16073:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":825,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"16034:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":9836,"src":"16034:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2713_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16034:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":824,"id":830,"nodeType":"Return","src":"16027:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":832,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":832,"src":"15920:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint","nodeType":"ElementaryTypeName","src":"15920:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15919:19:0"},"returnParameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"name":"","nodeType":"VariableDeclaration","scope":832,"src":"15972:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint","nodeType":"ElementaryTypeName","src":"15972:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":817,"name":"","nodeType":"VariableDeclaration","scope":832,"src":"15978:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint","nodeType":"ElementaryTypeName","src":"15978:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":820,"name":"","nodeType":"VariableDeclaration","scope":832,"src":"15984:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"15984:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":819,"length":null,"nodeType":"ArrayTypeName","src":"15984:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":823,"name":"","nodeType":"VariableDeclaration","scope":832,"src":"16002:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":821,"name":"uint","nodeType":"ElementaryTypeName","src":"16002:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":822,"length":null,"nodeType":"ArrayTypeName","src":"16002:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15971:45:0"},"scope":949,"src":"15895:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":849,"nodeType":"Block","src":"16545:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":844,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"16593:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":845,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"16600:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":846,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"16614:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":842,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"16562:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":10100,"src":"16562:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2713_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16562:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":841,"id":848,"nodeType":"Return","src":"16555:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":850,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":850,"src":"16454:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint","nodeType":"ElementaryTypeName","src":"16454:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":836,"name":"_scAddr","nodeType":"VariableDeclaration","scope":850,"src":"16473:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16473:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16453:36:0"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"name":"","nodeType":"VariableDeclaration","scope":850,"src":"16523:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"16523:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":839,"length":null,"nodeType":"ArrayTypeName","src":"16523:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"16522:18:0"},"scope":949,"src":"16430:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":868,"nodeType":"Block","src":"16899:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":864,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"16942:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":865,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"16949:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":862,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"16916:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":9447,"src":"16916:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2713_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16916:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":861,"id":867,"nodeType":"Return","src":"16909:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":869,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":855,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"16847:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":856,"modifierName":{"argumentTypes":null,"id":854,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"16830:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"16830:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"name":"_custodian","nodeType":"VariableDeclaration","scope":869,"src":"16786:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"16786:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"16785:20:0"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"name":"","nodeType":"VariableDeclaration","scope":869,"src":"16872:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"16872:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":860,"name":"","nodeType":"VariableDeclaration","scope":869,"src":"16881:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":859,"name":"bytes","nodeType":"ElementaryTypeName","src":"16881:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"16871:23:0"},"scope":949,"src":"16767:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":884,"nodeType":"Block","src":"17282:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":880,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"17328:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":881,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"17335:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":878,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"17299:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10153_$","typeString":"type(library WorkersImpl)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":9473,"src":"17299:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17299:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":877,"id":883,"nodeType":"Return","src":"17292:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":885,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"name":"_data","nodeType":"VariableDeclaration","scope":885,"src":"17194:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":870,"name":"bytes","nodeType":"ElementaryTypeName","src":"17194:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":873,"name":"_signature","nodeType":"VariableDeclaration","scope":885,"src":"17214:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":872,"name":"bytes","nodeType":"ElementaryTypeName","src":"17214:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17193:45:0"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"name":"","nodeType":"VariableDeclaration","scope":885,"src":"17272:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint","nodeType":"ElementaryTypeName","src":"17272:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17271:6:0"},"scope":949,"src":"17172:181:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":900,"nodeType":"Block","src":"17621:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":896,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"17676:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":897,"name":"_updatedEnigmaContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"17683:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":894,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9076,"src":"17638:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$9076_$","typeString":"type(library UpgradeImpl)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeEnigmaContractImpl","nodeType":"MemberAccess","referencedDeclaration":8997,"src":"17638:37:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17638:75:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":893,"id":899,"nodeType":"Return","src":"17631:82:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address","id":901,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":890,"modifierName":{"argumentTypes":null,"id":889,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22981,"src":"17579:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17579:9:0"},{"arguments":null,"id":892,"modifierName":{"argumentTypes":null,"id":891,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"17593:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17593:23:0"}],"name":"upgradeEnigmaContract","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"name":"_updatedEnigmaContractAddress","nodeType":"VariableDeclaration","scope":901,"src":"17525:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"17525:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17524:39:0"},"returnParameters":{"id":893,"nodeType":"ParameterList","parameters":[],"src":"17621:0:0"},"scope":949,"src":"17494:226:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":919,"nodeType":"Block","src":"18059:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":914,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"18123:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":915,"name":"_workerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"18130:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":916,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"18146:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":912,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9076,"src":"18076:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$9076_$","typeString":"type(library UpgradeImpl)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferWorkerStakePostUpgradeImpl","nodeType":"MemberAccess","referencedDeclaration":9075,"src":"18076:46:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2713_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory) returns (uint256)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18076:75:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":911,"id":918,"nodeType":"Return","src":"18069:82:0"}]},"documentation":"Transfer worker stake from old contract to new contract upon registration\\n@param _workerAddress Newly-registered worker address\\n@param _sig Signature","id":920,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":908,"modifierName":{"argumentTypes":null,"id":907,"name":"fromUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"18007:25:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18007:25:0"}],"name":"transferWorkerStakePostUpgrade","nodeType":"FunctionDefinition","parameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"name":"_workerAddress","nodeType":"VariableDeclaration","scope":920,"src":"17949:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":902,"name":"address","nodeType":"ElementaryTypeName","src":"17949:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":905,"name":"_sig","nodeType":"VariableDeclaration","scope":920,"src":"17973:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":904,"name":"bytes","nodeType":"ElementaryTypeName","src":"17973:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17948:43:0"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"name":"","nodeType":"VariableDeclaration","scope":920,"src":"18046:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"18046:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18045:9:0"},"scope":949,"src":"17909:249:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":933,"nodeType":"Block","src":"18304:43:0","statements":[{"expression":{"argumentTypes":null,"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":927,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"18314:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"mrSigner","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"18314:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":930,"name":"_mrSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"18331:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"18314:26:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":932,"nodeType":"ExpressionStatement","src":"18314:26:0"}]},"documentation":"Set mrSigner\\n@param _mrSigner mrSigner","id":934,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":925,"modifierName":{"argumentTypes":null,"id":924,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22981,"src":"18290:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18290:9:0"}],"name":"setMrSigner","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"name":"_mrSigner","nodeType":"VariableDeclaration","scope":934,"src":"18251:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":921,"name":"bytes","nodeType":"ElementaryTypeName","src":"18251:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18250:24:0"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[],"src":"18304:0:0"},"scope":949,"src":"18230:117:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":947,"nodeType":"Block","src":"18485:39:0","statements":[{"expression":{"argumentTypes":null,"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":941,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"18495:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2713_storage","typeString":"struct EnigmaState.State storage ref"}},"id":943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isvSvn","nodeType":"MemberAccess","referencedDeclaration":2712,"src":"18495:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":944,"name":"_isvSvn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"18510:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"18495:22:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":946,"nodeType":"ExpressionStatement","src":"18495:22:0"}]},"documentation":"Set isvSvn\\n@param _isvSvn mrSigner","id":948,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":939,"modifierName":{"argumentTypes":null,"id":938,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22981,"src":"18471:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18471:9:0"}],"name":"setIsvSvn","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"name":"_isvSvn","nodeType":"VariableDeclaration","scope":948,"src":"18434:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":935,"name":"bytes","nodeType":"ElementaryTypeName","src":"18434:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18433:22:0"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[],"src":"18485:0:0"},"scope":949,"src":"18415:109:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":950,"src":"886:17640:0"}],"src":"0:18527:0"},"compiler":{"name":"solc","version":"0.5.12+commit.7709ece9.Emscripten.clang"},"networks":{"4447":{"events":{"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55":{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address","internalType":"address"},{"indexed":false,"name":"signer","type":"address","internalType":"address"}],"name":"Registered","type":"event","signature":"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55"},"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb":{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event","signature":"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb"},"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd":{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"workers","type":"address[]","internalType":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]","internalType":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256","internalType":"uint256"}],"name":"WorkersParameterized","type":"event","signature":"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd"},"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint256"},{"indexed":false,"name":"gasPx","type":"uint256"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7"},"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint256[]"},{"indexed":false,"name":"gasPxs","type":"uint256[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7"},"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142"},"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event","signature":"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f"},"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event","signature":"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454"},"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event","signature":"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f"},"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32","internalType":"bytes32"}],"name":"TaskFeeReturned","type":"event","signature":"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f"},"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5":{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address","internalType":"address"},{"indexed":false,"name":"value","type":"uint256","internalType":"uint256"}],"name":"DepositSuccessful","type":"event","signature":"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5"},"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9":{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address","internalType":"address"},{"indexed":false,"name":"value","type":"uint256","internalType":"uint256"}],"name":"WithdrawSuccessful","type":"event","signature":"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9"},"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158":{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event","signature":"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158"},"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32","internalType":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32","internalType":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint64","internalType":"uint64"},{"indexed":false,"name":"gasPx","type":"uint64","internalType":"uint64"},{"indexed":false,"name":"sender","type":"address","internalType":"address"},{"indexed":false,"name":"blockNumber","type":"uint256","internalType":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d"},"0x4bd41c1b1fe5d4fab28fe14a580082e19937fe7f97068b2bd8424abe636220a9":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"workerAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0x4bd41c1b1fe5d4fab28fe14a580082e19937fe7f97068b2bd8424abe636220a9"},"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address","internalType":"address"},{"indexed":true,"name":"newOwner","type":"address","internalType":"address"}],"name":"OwnershipTransferred","type":"event","signature":"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"},"0x81ec9994a9c987e62ebfddb9120cd523132fd17a7d2487069ed6f5fb98f4044b":{"anonymous":false,"inputs":[{"indexed":false,"name":"gasUsed","type":"uint64","internalType":"uint64"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address","internalType":"address"},{"indexed":false,"name":"bytes32s","type":"bytes32[4]","internalType":"bytes32[4]"},{"indexed":false,"name":"deltaHashIndex","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"gasUsedTotal","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes","internalType":"bytes"},{"indexed":false,"name":"workerAddress","type":"address","internalType":"address"},{"indexed":false,"name":"sig","type":"bytes","internalType":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0x81ec9994a9c987e62ebfddb9120cd523132fd17a7d2487069ed6f5fb98f4044b"},"0x46216b692e6c99daacda2844a09844fd9b83f5834ff1f4ff211b6130c5f288f0":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32","internalType":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32","internalType":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"workerAddress","type":"address","internalType":"address"},{"indexed":false,"name":"sig","type":"bytes","internalType":"bytes"}],"name":"ReceiptFailed","type":"event","signature":"0x46216b692e6c99daacda2844a09844fd9b83f5834ff1f4ff211b6130c5f288f0"},"0x5dee55d018f978a2726933d05dd5004ada75a6f0d6cb984427803a2a1165cbfb":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32","internalType":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32","internalType":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"gasUsedTotal","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"workerAddress","type":"address","internalType":"address"},{"indexed":false,"name":"sig","type":"bytes","internalType":"bytes"}],"name":"ReceiptFailedETH","type":"event","signature":"0x5dee55d018f978a2726933d05dd5004ada75a6f0d6cb984427803a2a1165cbfb"},"0xe48e7d798803aa26679cdc4e9bc6f7af8ac2230a062656300f5b90b8152eb5b3":{"anonymous":false,"inputs":[{"indexed":false,"name":"gasUsed","type":"uint64","internalType":"uint64"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address","internalType":"address"},{"indexed":false,"name":"bytes32s","type":"bytes32[4]","internalType":"bytes32[4]"},{"indexed":false,"name":"gasUsedTotal","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes","internalType":"bytes"},{"indexed":false,"name":"workerAddress","type":"address","internalType":"address"}],"name":"SecretContractDeployed","type":"event","signature":"0xe48e7d798803aa26679cdc4e9bc6f7af8ac2230a062656300f5b90b8152eb5b3"},"0x0a581ae4192c44a0074ccc9c655d264ea6a838e99ca8dfc8ca439aee62cb5183":{"anonymous":false,"inputs":[{"indexed":false,"name":"workerAddress","type":"address","internalType":"address"}],"name":"LoggedIn","type":"event","signature":"0x0a581ae4192c44a0074ccc9c655d264ea6a838e99ca8dfc8ca439aee62cb5183"},"0x8d11ef6404d9eeb0a13d346ad9b49adf23be5a095f5efb8741c3eec74e43ee9c":{"anonymous":false,"inputs":[{"indexed":false,"name":"workerAddress","type":"address","internalType":"address"}],"name":"LoggedOut","type":"event","signature":"0x8d11ef6404d9eeb0a13d346ad9b49adf23be5a095f5efb8741c3eec74e43ee9c"}},"links":{"WorkersImpl":"0xd6a071376c4F45f0648686e8EACDfB5851485959","PrincipalImpl":"0xe07CA3A5B3A160fFE09B08e45609e77E64f96bcD","TaskImpl":"0xAB34d29942AA355202b0D11341b7c2D7bB64D14b","SecretContractImpl":"0x99C228B250C4e60b88b4dA43140A2E7E93BBdE7E","UpgradeImpl":"0x5Dc87425CAd7844E098f393f9A11E80E030810c2"},"address":"0x81Fcea1848eA8e2B627223fCDbD4CdebE31dE077","transactionHash":"0xe78b27f757c40d5f6459a792cb68544e7fd783225779d9649bf3cc329c303a73"},"5777":{"events":{"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55":{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event","signature":"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55"},"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb":{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event","signature":"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb"},"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd":{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event","signature":"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd"},"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint256"},{"indexed":false,"name":"gasPx","type":"uint256"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7"},"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint256[]"},{"indexed":false,"name":"gasPxs","type":"uint256[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7"},"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142"},"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event","signature":"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f"},"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event","signature":"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454"},"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event","signature":"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f"},"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event","signature":"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f"},"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5":{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event","signature":"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5"},"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9":{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event","signature":"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9"},"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158":{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event","signature":"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158"}},"links":{"WorkersImpl":"0x3cB7b205A61CC7c938bfA20880B6b2f3e46cf5C7","PrincipalImpl":"0x7Ca96BaFD53E6322E37e48D9765c83fF23Da035d","TaskImpl":"0x42f4ee53C5cd7a6850b1a0d189423B5f38fF9f67","SecretContractImpl":"0x54A4F5d9912EF6e017c0d3802C69aEF3D06D9bFb"},"address":"0x744A739E961f45A72F0004e6F9d24611635ea0E2","transactionHash":"0x6850fe8afcddb6756fe59b33747a258dbe5f3a3326181c79238cee66fdc0a848"}},"schemaVersion":"3.0.19","updatedAt":"2019-12-01T02:15:34.952Z","networkType":"ethereum","devdoc":{"methods":{"commitReceipt(uint64,address,bytes32[4],bytes,bytes)":{"params":{"_bytes32s":"[scAddr, taskId, stateDeltaHash, outputHash]","_gasUsed":"Gas used for task computation","_optionalEthereumContractAddress":"Output state hash","_optionalEthereumData":"Output state hash","_sig":"Worker\'s signature"}},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_taskId":"Unique taskId"}},"countSecretContracts()":{"return":"Number of deployed secret contracts"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash","_nonce":"Locally-computed nonce value for this deployment"}},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"deploySecretContract(uint64,address,bytes32[4],bytes,bytes)":{"params":{"_bytes32s":"[taskId, preCodeHash, codeHash, initStateDeltaHash]","_gasUsed":"Gas used for task","_optionalEthereumContractAddress":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumData":"Initial state delta hash as a result of the contract\'s constructor","_sig":"Worker\'s signature for deployment"}},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deposit(address,uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit","_custodian":"The worker\'s ETH address"}},"getActiveWorkers(uint256)":{"params":{"_blockNumber":"Block number"}},"getAllSecretContractAddresses()":{"return":"Array of secret contract addresses"},"getEpochSize()":{"return":"Epoch size"},"getFirstBlockNumber(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Block number"},"getIsvSvn()":{"return":"isvSvn"},"getMrSigner()":{"return":"mrSigner"},"getReport(address)":{"params":{"_custodian":"The worker\'s custodian address"}},"getSecretContract(bytes32)":{"params":{"_scAddr":"Secret contract address"},"return":"SecretContract struct"},"getSecretContractAddresses(uint256,uint256)":{"params":{"_start":"Start of range","_stop":"End of range"},"return":"Subset of deployed secret contract addresses"},"getSigningAddress()":{"return":"Signing address"},"getTaskRecord(bytes32)":{"params":{"_taskId":"Unique identifier for a given task"},"return":"TaskRecord struct"},"getTaskTimeoutSize()":{"return":"task timeout"},"getUpdatedEnigmaContractAddress()":{"return":"Updated Enigma contract address"},"getUserTaskDeployments(address)":{"params":{"_sender":"Task sender\'s ethereum address"},"return":"Current number for task deployments for user"},"getWorker(address)":{"params":{"_worker":"Worker\'s ethereum address"},"return":"Worker struct"},"getWorkerFromSigningAddress(address)":{"params":{"_signer":"Worker\'s signing address"},"return":"Ethereum addressWorker struct"},"getWorkerGroup(uint256,bytes32)":{"params":{"_blockNumber":"Block number the task record was mined","_scAddr":"Secret contract address"},"return":"Selected workers\' addresses"},"getWorkerParams(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes"},"getWorkersParams()":{"return":"Array of WorkersParams structs"},"isOwner()":{"details":"Returns true if the caller is the current owner."},"owner()":{"details":"Returns the address of the current owner."},"register(address,bytes,bytes)":{"params":{"_report":"The RLP encoded report returned by the IAS","_signature":"Signature","_signer":"The signer address, derived from the enclave public key"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"returnFeesForTask(bytes32)":{"params":{"_taskId":"Unique taskId"}},"setIsvSvn(bytes)":{"params":{"_isvSvn":"mrSigner"}},"setMrSigner(bytes)":{"params":{"_mrSigner":"mrSigner"}},"setWorkersParams(uint256,uint256,bytes)":{"params":{"_blockNumber":"Block number principal node is attempting to set worker params","_seed":"The random integer generated by the enclave","_sig":"Principal node\'s signature"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferWorkerStakePostUpgrade(address,bytes)":{"params":{"_sig":"Signature","_workerAddress":"Newly-registered worker address"}},"upgradeEnigmaContract(address)":{"params":{"_updatedEnigmaContractAddress":"Updated newly-deployed Enigma contract address"}},"verifyReport(bytes,bytes)":{"params":{"_data":"The report itself","_signature":"The signature of the report"}},"withdraw(uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit"}}}},"userdoc":{"methods":{"commitReceipt(uint64,address,bytes32[4],bytes,bytes)":{"notice":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee."},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"notice":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure."},"countSecretContracts()":{"notice":"Check if secret contract has been deployed"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"notice":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid."},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"notice":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"deploySecretContract(uint64,address,bytes32[4],bytes,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deposit(address,uint256)":{"notice":"Deposits ENG stake into contract from worker. Worker must be registered to do so."},"getActiveWorkers(uint256)":{"notice":"Get active workers before a certain block number"},"getAllSecretContractAddresses()":{"notice":"Get all secret contract addresses"},"getEpochSize()":{"notice":"Get the epoch block size"},"getFirstBlockNumber(uint256)":{"notice":"Get the first block number of an epoch that a given block number belongs to"},"getIsvSvn()":{"notice":"Get isvSvn"},"getMrSigner()":{"notice":"Get mrSigner"},"getReport(address)":{"notice":"The RLP encoded report returned by the IAS server"},"getSecretContract(bytes32)":{"notice":"Get a SecretContract struct given a particular secret contract address"},"getSecretContractAddresses(uint256,uint256)":{"notice":"Get deployed secret contract addresses within a range"},"getSigningAddress()":{"notice":"Get signing address of calling worker"},"getTaskRecord(bytes32)":{"notice":"Get a TaskRecord struct given a particular task\'s ID"},"getTaskTimeoutSize()":{"notice":"Get the task timeout size"},"getUpdatedEnigmaContractAddress()":{"notice":"Get updated Enigma contract address"},"getUserTaskDeployments(address)":{"notice":"Get the current number/index (used as unique nonce value) of task deployments for a given user user"},"getWorker(address)":{"notice":"Get Worker struct from a given worker\'s ethereum address"},"getWorkerFromSigningAddress(address)":{"notice":"Get Worker struct from a given worker\'s signing address"},"getWorkerGroup(uint256,bytes32)":{"notice":"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address."},"getWorkerParams(uint256)":{"notice":"Get worker params for an epoch given a particular block number"},"getWorkersParams()":{"notice":"Get epoch-based history of worker params information"},"login()":{"notice":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process."},"logout()":{"notice":"Logout worker. Worker must be logged in to do so."},"register(address,bytes,bytes)":{"notice":"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks."},"returnFeesForTask(bytes32)":{"notice":"Return the task fee to the task creator when too many blocks have elapsed without task resolution."},"setIsvSvn(bytes)":{"notice":"Set isvSvn"},"setMrSigner(bytes)":{"notice":"Set mrSigner"},"setWorkersParams(uint256,uint256,bytes)":{"notice":"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node"},"transferWorkerStakePostUpgrade(address,bytes)":{"notice":"Transfer worker stake from old contract to new contract upon registration"},"upgradeEnigmaContract(address)":{"notice":"Upgrade Enigma Contract"},"verifyReport(bytes,bytes)":{"notice":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate."},"withdraw(uint256)":{"notice":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so."}}}}')},function(e){e.exports=JSON.parse('{"contractName":"EnigmaToken","abi":[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[],"name":"INITIAL_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.12+commit.7709ece9\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"INITIAL_SUPPLY\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"internalType\\":\\"uint8\\",\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"subtractedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"decreaseAllowance\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"addedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"increaseAllowance\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_from\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"details\\":\\"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. \\",\\"methods\\":{\\"approve(address,uint256)\\":{\\"details\\":\\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\",\\"params\\":{\\"_spender\\":\\"The address which will spend the funds.\\",\\"_value\\":\\"The amount of tokens to be spent.\\"}},\\"balanceOf(address)\\":{\\"details\\":\\"See {IERC20-balanceOf}.\\"},\\"constructor\\":{\\"details\\":\\"EnigmaToken Constructor Runs only on initial contract creation.\\"},\\"decimals()\\":{\\"details\\":\\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\\"},\\"decreaseAllowance(address,uint256)\\":{\\"details\\":\\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\\"},\\"increaseAllowance(address,uint256)\\":{\\"details\\":\\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\\"},\\"name()\\":{\\"details\\":\\"Returns the name of the token.\\"},\\"symbol()\\":{\\"details\\":\\"Returns the symbol of the token, usually a shorter version of the name.\\"},\\"totalSupply()\\":{\\"details\\":\\"See {IERC20-totalSupply}.\\"},\\"transfer(address,uint256)\\":{\\"details\\":\\"Transfer token for a specified address when not paused\\",\\"params\\":{\\"_to\\":\\"The address to transfer to.\\",\\"_value\\":\\"The amount to be transferred.\\"}},\\"transferFrom(address,address,uint256)\\":{\\"details\\":\\"Transfer tokens from one address to another when not paused\\",\\"params\\":{\\"_from\\":\\"address The address which you want to send tokens from\\",\\"_to\\":\\"address The address which you want to transfer to\\",\\"_value\\":\\"uint256 the amount of tokens to be transferred\\"}}},\\"title\\":\\"Enigma Token\\"},\\"userdoc\\":{\\"methods\\":{}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/EnigmaToken.sol\\":\\"EnigmaToken\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/EnigmaToken.sol\\":{\\"keccak256\\":\\"0x02ab7fd2fdc4816f2ac021dbc37bd6c0c784a5b18654bebcc59e0f8498768b46\\",\\"urls\\":[\\"bzz-raw://192116264305047f6e30d3cea3695ddfe502d344fd9073aa5f93c737de3f0f98\\",\\"dweb:/ipfs/QmTf56fb2oxN4oKW7NgBDkBgG6e15bHtK1Kjy1bFseHM8V\\"]},\\"openzeppelin-solidity/contracts/GSN/Context.sol\\":{\\"keccak256\\":\\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\\",\\"urls\\":[\\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\\",\\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\\",\\"urls\\":[\\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\\",\\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\":{\\"keccak256\\":\\"0x65a4078c03875c25413a068ce9cfdd7e68a90f8786612d1189c89341e6e3b802\\",\\"urls\\":[\\"bzz-raw://45c0d95495b944fbb1aa09d900b0ab530903a432125ab8fddfa05064a7988991\\",\\"dweb:/ipfs/Qma2VeknkKA1THeubGzshWFk44BktXkXP1UKp9Un2uDSsu\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\":{\\"keccak256\\":\\"0x4a3a810b7ebe742e897e1fd428b3eeed2196d3acea58eaf9c566ed10d545d2ed\\",\\"urls\\":[\\"bzz-raw://28d03f328e19e4099d5013de0649afaeaabac1a614e130767ab1cb4aca9775b6\\",\\"dweb:/ipfs/Qmb9iW7yNuYehB2NfhRMs9TakqbLVQhBhmGMkaDZ5g1Eb4\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\":{\\"keccak256\\":\\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\\",\\"urls\\":[\\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\\",\\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b506040518060400160405280600681526020017f456e69676d6100000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f454e47000000000000000000000000000000000000000000000000000000000081525060088260039080519060200190610095929190610266565b5081516100a9906004906020850190610266565b506005805460ff191660ff92909216919091179055506100d290503366354a6ba7a180006100d7565b610301565b6001600160a01b03821661014c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610165816002546101eb60201b6105a81790919060201c565b6002556001600160a01b038216600090815260208181526040909120546101959183906105a86101eb821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008282018381101561025f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102a757805160ff19168380011785556102d4565b828001600101855582156102d4579182015b828111156102d45782518255916020019190600101906102b9565b506102e09291506102e4565b5090565b6102fe91905b808211156102e057600081556001016102ea565b90565b610a56806103106000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610406565b6100c1610421565b6101626004803603604081101561025c57600080fd5b506001600160a01b038135169060200135610482565b6101626004803603604081101561028857600080fd5b506001600160a01b0381351690602001356104f0565b61017e600480360360408110156102b457600080fd5b506001600160a01b03813581169160200135166104fc565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e8383610508565b9392505050565b60025490565b600061038884848461051c565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006103fd6103b16105a4565b846103f885600160006103c26105a4565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6105a816565b610602565b50600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006103fd61048f6105a4565b846103f8856040518060600160405280602581526020016109fd60259139600160006104b96105a4565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6106ee16565b600061036e8383610785565b600061036e8383610799565b60006103fd6105156105a4565b8484610602565b60006105298484846107c4565b61059a846105356105a4565b6103f88560405180606001604052806028815260200161098c602891396001600160a01b038a166000908152600160205260408120906105736105a4565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6106ee16565b5060019392505050565b3390565b60008282018381101561036e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0383166106475760405162461bcd60e51b81526004018080602001828103825260248152602001806109d96024913960400191505060405180910390fd5b6001600160a01b03821661068c5760405162461bcd60e51b81526004018080602001828103825260228152602001806109446022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000818484111561077d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561074257818101518382015260200161072a565b50505050905090810190601f16801561076f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60006103fd6107926105a4565b84846107c4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166108095760405162461bcd60e51b81526004018080602001828103825260258152602001806109b46025913960400191505060405180910390fd5b6001600160a01b03821661084e5760405162461bcd60e51b81526004018080602001828103825260238152602001806109216023913960400191505060405180910390fd5b61089181604051806060016040528060268152602001610966602691396001600160a01b038616600090815260208190526040902054919063ffffffff6106ee16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108c6908263ffffffff6105a816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158203e9d0db10c7d95ae8a0e37a41764952c46d6f754bcdf02f0f0cda42a7a9cd34564736f6c634300050c0032","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610406565b6100c1610421565b6101626004803603604081101561025c57600080fd5b506001600160a01b038135169060200135610482565b6101626004803603604081101561028857600080fd5b506001600160a01b0381351690602001356104f0565b61017e600480360360408110156102b457600080fd5b506001600160a01b03813581169160200135166104fc565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e8383610508565b9392505050565b60025490565b600061038884848461051c565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006103fd6103b16105a4565b846103f885600160006103c26105a4565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6105a816565b610602565b50600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006103fd61048f6105a4565b846103f8856040518060600160405280602581526020016109fd60259139600160006104b96105a4565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6106ee16565b600061036e8383610785565b600061036e8383610799565b60006103fd6105156105a4565b8484610602565b60006105298484846107c4565b61059a846105356105a4565b6103f88560405180606001604052806028815260200161098c602891396001600160a01b038a166000908152600160205260408120906105736105a4565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6106ee16565b5060019392505050565b3390565b60008282018381101561036e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0383166106475760405162461bcd60e51b81526004018080602001828103825260248152602001806109d96024913960400191505060405180910390fd5b6001600160a01b03821661068c5760405162461bcd60e51b81526004018080602001828103825260228152602001806109446022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000818484111561077d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561074257818101518382015260200161072a565b50505050905090810190601f16801561076f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60006103fd6107926105a4565b84846107c4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166108095760405162461bcd60e51b81526004018080602001828103825260258152602001806109b46025913960400191505060405180910390fd5b6001600160a01b03821661084e5760405162461bcd60e51b81526004018080602001828103825260238152602001806109216023913960400191505060405180910390fd5b61089181604051806060016040528060268152602001610966602691396001600160a01b038616600090815260208190526040902054919063ffffffff6106ee16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108c6908263ffffffff6105a816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158203e9d0db10c7d95ae8a0e37a41764952c46d6f754bcdf02f0f0cda42a7a9cd34564736f6c634300050c0032","sourceMap":"661:1642:2:-;;;914:105;8:9:-1;5:2;;;30:1;27;20:12;5:2;914:105:2;416:163:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;966:1:2;512:4:41;504:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;526:16:41;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;552:9:41;:20;;-1:-1:-1;;552:20:41;;;;;;;;;;;;-1:-1:-1;979:33:2;;-1:-1:-1;985:10:2;754:17;979:5;:33::i;:::-;661:1642;;5962:302:40;-1:-1:-1;;;;;6037:21:40;;6029:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6120:24;6137:6;6120:12;;:16;;;;;;:24;;;;:::i;:::-;6105:12;:39;-1:-1:-1;;;;;6175:18:40;;:9;:18;;;;;;;;;;;;:30;;6198:6;;6175:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;6154:18:40;;:9;:18;;;;;;;;;;;:51;;;;6220:37;;;;;;;6154:18;;:9;;6220:37;;;;;;;;;;5962:302;;:::o;834:176:38:-;892:7;923:5;;;946:6;;;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:38:o;661:1642:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;661:1642:2;;;-1:-1:-1;661:1642:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","deployedSourceMap":"661:1642:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;661:1642:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;644:81:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2027:128:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2027:128:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1559:89:40;;;:::i;:::-;;;;;;;;;;;;;;;;1621:150:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1621:150:2;;;;;;;;;;;;;;;;;:::i;713:58::-;;;:::i;1472:81:41:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3802:207:40;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3802:207:40;;;;;;;;:::i;1706:108::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1706:108:40;-1:-1:-1;;;;;1706:108:40;;:::i;838:85:41:-;;;:::i;4496:258:40:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4496:258:40;;;;;;;;:::i;1201:120:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1201:120:2;;;;;;;;:::i;2161:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2161:139:2;;;;;;;;;;:::i;644:81:41:-;713:5;706:12;;;;;;;;-1:-1:-1;;706:12:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:13;;706:12;;713:5;;706:12;;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;2027:128:2:-;2094:4;2117:31;2131:8;2141:6;2117:13;:31::i;:::-;2110:38;2027:128;-1:-1:-1;;;2027:128:2:o;1559:89:40:-;1629:12;;1559:89;:::o;1621:150:2:-;1703:4;1726:38;1745:5;1752:3;1757:6;1726:18;:38::i;:::-;1719:45;1621:150;-1:-1:-1;;;;1621:150:2:o;713:58::-;754:17;713:58;:::o;1472:81:41:-;1537:9;;;;1472:81;:::o;3802:207:40:-;3882:4;3898:83;3907:12;:10;:12::i;:::-;3921:7;3930:50;3969:10;3930:11;:25;3942:12;:10;:12::i;:::-;-1:-1:-1;;;;;3930:25:40;;;;;;;;;;;;;;;;;-1:-1:-1;3930:25:40;;;:34;;;;;;;;;;;:50;:38;:50;:::i;:::-;3898:8;:83::i;:::-;-1:-1:-1;3998:4:40;3802:207;;;;:::o;1706:108::-;-1:-1:-1;;;;;1789:18:40;1763:7;1789:18;;;;;;;;;;;;1706:108::o;838:85:41:-;909:7;902:14;;;;;;;;-1:-1:-1;;902:14:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:13;;902:14;;909:7;;902:14;;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;4496:258:40;4581:4;4597:129;4606:12;:10;:12::i;:::-;4620:7;4629:96;4668:15;4629:96;;;;;;;;;;;;;;;;;:11;:25;4641:12;:10;:12::i;:::-;-1:-1:-1;;;;;4629:25:40;;;;;;;;;;;;;;;;;-1:-1:-1;4629:25:40;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;1201:120:2:-;1264:4;1287:27;1302:3;1307:6;1287:14;:27::i;2161:139::-;2235:7;2261:32;2277:6;2284:8;2261:15;:32::i;2500:149:40:-;2566:4;2582:39;2591:12;:10;:12::i;:::-;2605:7;2614:6;2582:8;:39::i;3107:300::-;3196:4;3212:36;3222:6;3230:9;3241:6;3212:9;:36::i;:::-;3258:121;3267:6;3275:12;:10;:12::i;:::-;3289:89;3327:6;3289:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3289:19:40;;;;;;:11;:19;;;;;;3309:12;:10;:12::i;:::-;-1:-1:-1;;;;;3289:33:40;;;;;;;;;;;;-1:-1:-1;3289:33:40;;;:89;;:37;:89;:::i;3258:121::-;-1:-1:-1;3396:4:40;3107:300;;;;;:::o;788:96:36:-;867:10;788:96;:::o;834:176:38:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:38;;;;;;;;;;;;;;;;;;;;;;;;;;;7351:332:40;-1:-1:-1;;;;;7444:19:40;;7436:68;;;;-1:-1:-1;;;7436:68:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7522:21:40;;7514:68;;;;-1:-1:-1;;;7514:68:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7593:18:40;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7644:32;;;;;;;;;;;;;;;;;7351:332;;;:::o;1732:187:38:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:38;;;1732:187::o;2017:155:40:-;2086:4;2102:42;2112:12;:10;:12::i;:::-;2126:9;2137:6;2102:9;:42::i;2230:132::-;-1:-1:-1;;;;;2328:18:40;;;2302:7;2328:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2230:132::o;5228:464::-;-1:-1:-1;;;;;5325:20:40;;5317:70;;;;-1:-1:-1;;;5317:70:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5405:23:40;;5397:71;;;;-1:-1:-1;;;5397:71:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499;5521:6;5499:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5499:17:40;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5479:17:40;;;:9;:17;;;;;;;;;;;:91;;;;5603:20;;;;;;;:32;;5628:6;5603:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5580:20:40;;;:9;:20;;;;;;;;;;;;:55;;;;5650:35;;;;;;;5580:20;;5650:35;;;;;;;;;;;;;5228:464;;;:::o","source":"pragma solidity ^0.5.12;\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\";\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\";\\n\\n/**\\n * @title Enigma Token\\n * @dev ERC20 Enigma Token (ENG)\\n *\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\n * units referred to as \'Grains\'.\\n *\\n * ENG are displayed using 8 decimal places of precision.\\n *\\n * 1 ENG is equivalent to:\\n *   100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n *\\n * 150 million ENG (total supply) is equivalent to:\\n *   15000000000000000 == 150000000 * 10**8 == 1e17\\n *\\n * All initial ENG Grains are assigned to the creator of\\n * this contract.\\n *\\n */\\ncontract EnigmaToken is ERC20, ERC20Detailed {\\n\\n    uint256 public constant INITIAL_SUPPLY = 150000000 * 10**8;  // 150 million ENG specified in Grains\\n\\n    /**\\n    * @dev EnigmaToken Constructor\\n    * Runs only on initial contract creation.\\n    */\\n    constructor() public ERC20Detailed(\\"Enigma\\", \\"ENG\\", 8) {\\n        _mint(msg.sender, INITIAL_SUPPLY);\\n    }\\n\\n    /**\\n    * @dev Transfer token for a specified address when not paused\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint256 _value) public returns (bool) {\\n        return super.transfer(_to, _value);\\n    }\\n\\n    /**\\n    * @dev Transfer tokens from one address to another when not paused\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint256 the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\\n        return super.transferFrom(_from, _to, _value);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint256 _value) public returns (bool) {\\n        return super.approve(_spender, _value);\\n    }\\n\\n    function allowance(address _owner, address _spender) public view returns (uint256) {\\n        return super.allowance(_owner,_spender);\\n    }\\n\\n}\\n","sourcePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/EnigmaToken.sol","ast":{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1997]},"id":1998,"nodeType":"SourceUnit","nodes":[{"id":1901,"literals":["solidity","^","0.5",".12"],"nodeType":"PragmaDirective","src":"0:24:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1902,"nodeType":"ImportDirective","scope":1998,"sourceUnit":23454,"src":"25:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1903,"nodeType":"ImportDirective","scope":1998,"sourceUnit":23512,"src":"89:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1904,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":23453,"src":"685:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$23453","typeString":"contract ERC20"}},"id":1905,"nodeType":"InheritanceSpecifier","src":"685:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1906,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":23511,"src":"692:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$23511","typeString":"contract ERC20Detailed"}},"id":1907,"nodeType":"InheritanceSpecifier","src":"692:13:2"}],"contractDependencies":[22666,23453,23511,23580],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1997,"linearizedBaseContracts":[1997,23511,23453,23580,22666],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1914,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1997,"src":"713:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"766:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"770:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"766:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"754:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1928,"nodeType":"Block","src":"969:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1923,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"985:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"985:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1925,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"997:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1922,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23337,"src":"979:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"979:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1927,"nodeType":"ExpressionStatement","src":"979:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1929,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"949:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"959:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"966:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1920,"modifierName":{"argumentTypes":null,"id":1916,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23511,"src":"935:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$23511_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"935:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[],"src":"925:2:2"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[],"src":"969:0:2"},"scope":1997,"src":"914:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1944,"nodeType":"Block","src":"1270:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1940,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"1302:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1941,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"1307:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1938,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23662,"src":"1287:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1997","typeString":"contract super EnigmaToken"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":23111,"src":"1287:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1287:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1937,"id":1943,"nodeType":"Return","src":"1280:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1945,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"name":"_to","nodeType":"VariableDeclaration","scope":1945,"src":"1219:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1930,"name":"address","nodeType":"ElementaryTypeName","src":"1219:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1933,"name":"_value","nodeType":"VariableDeclaration","scope":1945,"src":"1232:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1218:29:2"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"name":"","nodeType":"VariableDeclaration","scope":1945,"src":"1264:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1935,"name":"bool","nodeType":"ElementaryTypeName","src":"1264:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1263:6:2"},"scope":1997,"src":"1201:120:2","stateMutability":"nonpayable","superFunction":23111,"visibility":"public"},{"body":{"id":1963,"nodeType":"Block","src":"1709:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1958,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"1745:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1959,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"1752:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1960,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"1757:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1956,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23662,"src":"1726:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1997","typeString":"contract super EnigmaToken"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":23182,"src":"1726:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1726:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1955,"id":1962,"nodeType":"Return","src":"1719:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1964,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"name":"_from","nodeType":"VariableDeclaration","scope":1964,"src":"1643:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"1643:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1949,"name":"_to","nodeType":"VariableDeclaration","scope":1964,"src":"1658:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1951,"name":"_value","nodeType":"VariableDeclaration","scope":1964,"src":"1671:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"1671:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1642:44:2"},"returnParameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"name":"","nodeType":"VariableDeclaration","scope":1964,"src":"1703:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1953,"name":"bool","nodeType":"ElementaryTypeName","src":"1703:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1702:6:2"},"scope":1997,"src":"1621:150:2","stateMutability":"nonpayable","superFunction":23182,"visibility":"public"},{"body":{"id":1979,"nodeType":"Block","src":"2100:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1975,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"2131:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1976,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"2141:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1973,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23662,"src":"2117:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1997","typeString":"contract super EnigmaToken"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":23146,"src":"2117:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2117:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1972,"id":1978,"nodeType":"Return","src":"2110:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1980,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"name":"_spender","nodeType":"VariableDeclaration","scope":1980,"src":"2044:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1965,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1968,"name":"_value","nodeType":"VariableDeclaration","scope":1980,"src":"2062:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"2062:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2043:34:2"},"returnParameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"name":"","nodeType":"VariableDeclaration","scope":1980,"src":"2094:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1970,"name":"bool","nodeType":"ElementaryTypeName","src":"2094:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2093:6:2"},"scope":1997,"src":"2027:128:2","stateMutability":"nonpayable","superFunction":23146,"visibility":"public"},{"body":{"id":1995,"nodeType":"Block","src":"2244:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1991,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"2277:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1992,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"2284:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1989,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23662,"src":"2261:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1997","typeString":"contract super EnigmaToken"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":23127,"src":"2261:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1988,"id":1994,"nodeType":"Return","src":"2254:39:2"}]},"documentation":null,"id":1996,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"name":"_owner","nodeType":"VariableDeclaration","scope":1996,"src":"2180:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"2180:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1984,"name":"_spender","nodeType":"VariableDeclaration","scope":1996,"src":"2196:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1983,"name":"address","nodeType":"ElementaryTypeName","src":"2196:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2179:34:2"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"name":"","nodeType":"VariableDeclaration","scope":1996,"src":"2235:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"2235:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2234:9:2"},"scope":1997,"src":"2161:139:2","stateMutability":"view","superFunction":23127,"visibility":"public"}],"scope":1998,"src":"661:1642:2"}],"src":"0:2304:2"},"legacyAST":{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1997]},"id":1998,"nodeType":"SourceUnit","nodes":[{"id":1901,"literals":["solidity","^","0.5",".12"],"nodeType":"PragmaDirective","src":"0:24:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1902,"nodeType":"ImportDirective","scope":1998,"sourceUnit":23454,"src":"25:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1903,"nodeType":"ImportDirective","scope":1998,"sourceUnit":23512,"src":"89:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1904,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":23453,"src":"685:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$23453","typeString":"contract ERC20"}},"id":1905,"nodeType":"InheritanceSpecifier","src":"685:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1906,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":23511,"src":"692:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$23511","typeString":"contract ERC20Detailed"}},"id":1907,"nodeType":"InheritanceSpecifier","src":"692:13:2"}],"contractDependencies":[22666,23453,23511,23580],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1997,"linearizedBaseContracts":[1997,23511,23453,23580,22666],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1914,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1997,"src":"713:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"766:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"770:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"766:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"754:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1928,"nodeType":"Block","src":"969:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1923,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"985:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"985:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1925,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"997:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1922,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23337,"src":"979:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"979:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1927,"nodeType":"ExpressionStatement","src":"979:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1929,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"949:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"959:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"966:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1920,"modifierName":{"argumentTypes":null,"id":1916,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23511,"src":"935:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$23511_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"935:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[],"src":"925:2:2"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[],"src":"969:0:2"},"scope":1997,"src":"914:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1944,"nodeType":"Block","src":"1270:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1940,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"1302:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1941,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"1307:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1938,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23662,"src":"1287:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1997","typeString":"contract super EnigmaToken"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":23111,"src":"1287:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1287:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1937,"id":1943,"nodeType":"Return","src":"1280:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1945,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"name":"_to","nodeType":"VariableDeclaration","scope":1945,"src":"1219:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1930,"name":"address","nodeType":"ElementaryTypeName","src":"1219:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1933,"name":"_value","nodeType":"VariableDeclaration","scope":1945,"src":"1232:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1218:29:2"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"name":"","nodeType":"VariableDeclaration","scope":1945,"src":"1264:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1935,"name":"bool","nodeType":"ElementaryTypeName","src":"1264:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1263:6:2"},"scope":1997,"src":"1201:120:2","stateMutability":"nonpayable","superFunction":23111,"visibility":"public"},{"body":{"id":1963,"nodeType":"Block","src":"1709:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1958,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"1745:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1959,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"1752:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1960,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"1757:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1956,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23662,"src":"1726:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1997","typeString":"contract super EnigmaToken"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":23182,"src":"1726:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1726:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1955,"id":1962,"nodeType":"Return","src":"1719:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1964,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"name":"_from","nodeType":"VariableDeclaration","scope":1964,"src":"1643:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"1643:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1949,"name":"_to","nodeType":"VariableDeclaration","scope":1964,"src":"1658:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1951,"name":"_value","nodeType":"VariableDeclaration","scope":1964,"src":"1671:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"1671:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1642:44:2"},"returnParameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"name":"","nodeType":"VariableDeclaration","scope":1964,"src":"1703:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1953,"name":"bool","nodeType":"ElementaryTypeName","src":"1703:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1702:6:2"},"scope":1997,"src":"1621:150:2","stateMutability":"nonpayable","superFunction":23182,"visibility":"public"},{"body":{"id":1979,"nodeType":"Block","src":"2100:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1975,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"2131:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1976,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"2141:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1973,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23662,"src":"2117:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1997","typeString":"contract super EnigmaToken"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":23146,"src":"2117:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2117:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1972,"id":1978,"nodeType":"Return","src":"2110:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1980,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"name":"_spender","nodeType":"VariableDeclaration","scope":1980,"src":"2044:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1965,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1968,"name":"_value","nodeType":"VariableDeclaration","scope":1980,"src":"2062:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"2062:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2043:34:2"},"returnParameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"name":"","nodeType":"VariableDeclaration","scope":1980,"src":"2094:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1970,"name":"bool","nodeType":"ElementaryTypeName","src":"2094:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2093:6:2"},"scope":1997,"src":"2027:128:2","stateMutability":"nonpayable","superFunction":23146,"visibility":"public"},{"body":{"id":1995,"nodeType":"Block","src":"2244:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1991,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"2277:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1992,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"2284:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1989,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23662,"src":"2261:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1997","typeString":"contract super EnigmaToken"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":23127,"src":"2261:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1988,"id":1994,"nodeType":"Return","src":"2254:39:2"}]},"documentation":null,"id":1996,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"name":"_owner","nodeType":"VariableDeclaration","scope":1996,"src":"2180:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"2180:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1984,"name":"_spender","nodeType":"VariableDeclaration","scope":1996,"src":"2196:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1983,"name":"address","nodeType":"ElementaryTypeName","src":"2196:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2179:34:2"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"name":"","nodeType":"VariableDeclaration","scope":1996,"src":"2235:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"2235:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2234:9:2"},"scope":1997,"src":"2161:139:2","stateMutability":"view","superFunction":23127,"visibility":"public"}],"scope":1998,"src":"661:1642:2"}],"src":"0:2304:2"},"compiler":{"name":"solc","version":"0.5.12+commit.7709ece9.Emscripten.clang"},"networks":{"4447":{"events":{"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address","internalType":"address"},{"indexed":true,"name":"to","type":"address","internalType":"address"},{"indexed":false,"name":"value","type":"uint256","internalType":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address","internalType":"address"},{"indexed":true,"name":"spender","type":"address","internalType":"address"},{"indexed":false,"name":"value","type":"uint256","internalType":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}},"links":{},"address":"0x937ec258289459977B83eaA27fcC595BD6310a57","transactionHash":"0xc68429b3bcbe4d17aba795a7bd18af55262954d57b9576d48236bc674b2d61db"},"5777":{"events":{"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}},"links":{},"address":"0xaAB4eCc53b9B6Eee785303EaF7691cF20120318C","transactionHash":"0x23e06b59f52b4058a038b692eaadfd40c288c4a8442f16819b3c07b7fc946b53"}},"schemaVersion":"3.0.19","updatedAt":"2019-12-01T02:15:34.923Z","networkType":"ethereum","devdoc":{"details":"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. ","methods":{"approve(address,uint256)":{"details":"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.","params":{"_spender":"The address which will spend the funds.","_value":"The amount of tokens to be spent."}},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"EnigmaToken Constructor Runs only on initial contract creation."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"Transfer token for a specified address when not paused","params":{"_to":"The address to transfer to.","_value":"The amount to be transferred."}},"transferFrom(address,address,uint256)":{"details":"Transfer tokens from one address to another when not paused","params":{"_from":"address The address which you want to send tokens from","_to":"address The address which you want to transfer to","_value":"uint256 the amount of tokens to be transferred"}}},"title":"Enigma Token"},"userdoc":{"methods":{}}}')},function(e,t){e.exports=require("jayson/lib/client/browser")},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("retry")},function(e,t){e.exports=require("ethereumjs-abi")},function(e,t,n){e.exports=n(17)},function(e,t){e.exports=require("core-js/stable")},function(e,t){e.exports=require("regenerator-runtime/runtime")},function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"ERROR",(function(){return $})),n.d(r,"DEPOSIT_TRANSACTION_HASH",(function(){return h})),n.d(r,"DEPOSIT_CONFIRMATION",(function(){return E})),n.d(r,"DEPOSIT_RECEIPT",(function(){return C})),n.d(r,"WITHDRAW_TRANSACTION_HASH",(function(){return V})),n.d(r,"WITHDRAW_CONFIRMATION",(function(){return x})),n.d(r,"WITHDRAW_RECEIPT",(function(){return L})),n.d(r,"LOGIN_TRANSACTION_HASH",(function(){return N})),n.d(r,"LOGIN_CONFIRMATION",(function(){return w})),n.d(r,"LOGIN_RECEIPT",(function(){return R})),n.d(r,"LOGOUT_TRANSACTION_HASH",(function(){return P})),n.d(r,"LOGOUT_CONFIRMATION",(function(){return A})),n.d(r,"LOGOUT_RECEIPT",(function(){return W})),n.d(r,"DEPLOY_SC_ADDR_RESULT",(function(){return q})),n.d(r,"DEPLOY_SC_ETH_TRANSACTION_HASH",(function(){return M})),n.d(r,"DEPLOY_SC_ETH_CONFIRMATION",(function(){return U})),n.d(r,"DEPLOY_SC_ETH_RECEIPT",(function(){return F})),n.d(r,"DEPLOY_SC_ENG_RECEIPT",(function(){return B})),n.d(r,"CREATE_TASK",(function(){return H})),n.d(r,"CREATE_TASK_INPUT",(function(){return G})),n.d(r,"CREATE_TASK_RECORD_TRANSACTION_HASH",(function(){return O})),n.d(r,"CREATE_TASK_RECORD_CONFIRMATION",(function(){return z})),n.d(r,"CREATE_TASK_RECORD_RECEIPT",(function(){return K})),n.d(r,"CREATE_TASK_RECORD",(function(){return Q})),n.d(r,"SEND_TASK_INPUT_RESULT",(function(){return j})),n.d(r,"POLL_TASK_STATUS_RESULT",(function(){return Y})),n.d(r,"GET_TASK_RESULT_RESULT",(function(){return X})),n.d(r,"DEPLOY_SECRET_CONTRACT_RESULT",(function(){return Z})),n.d(r,"RETURN_FEES_FOR_TASK_RECEIPT",(function(){return J})),n.d(r,"RETURN_FEES_FOR_TASK",(function(){return ee})),n.d(r,"POLL_TASK_ETH_RESULT",(function(){return te})),n.d(r,"RPC_SEND_TASK_INPUT",(function(){return ne})),n.d(r,"RPC_DEPLOY_SECRET_CONTRACT",(function(){return re})),n.d(r,"RPC_GET_TASK_RESULT",(function(){return ae})),n.d(r,"RPC_GET_TASK_STATUS",(function(){return ie})),n.d(r,"GET_TASK_RESULT_SUCCESS",(function(){return se})),n.d(r,"GET_TASK_RESULT_FAILED",(function(){return oe})),n.d(r,"GET_TASK_RESULT_UNVERIFIED",(function(){return de})),n.d(r,"GET_TASK_RESULT_INPROGRESS",(function(){return pe})),n.d(r,"ETH_STATUS_UNDEFINED",(function(){return le})),n.d(r,"ETH_STATUS_CREATED",(function(){return ce})),n.d(r,"ETH_STATUS_VERIFIED",(function(){return ye})),n.d(r,"ETH_STATUS_FAILED",(function(){return ue})),n.d(r,"ETH_STATUS_FAILED_ETH",(function(){return me})),n.d(r,"ETH_STATUS_FAILED_RETURN",(function(){return fe}));n(15),n(16);var a=n(2),i=n.n(a),s=n(3),o=n.n(s),d=n(0),p=n.n(d),l=n(7),c=n.n(l),y=n(4),u=n(5),m=n.n(u);p.a.options.usePureJavaScript=!0;var f=c.a.ec;function b(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2]?"00":"",r=!0,a=!1,s=void 0;try{for(var o,d=t[Symbol.iterator]();!(r=(o=d.next()).done);r=!0){var p=o.value;p=g(p),e+=n+i.a.BigInt(p.length/2).toString(16).padStart(16,"0")+p}}catch(e){a=!0,s=e}finally{try{r||null==d.return||d.return()}finally{if(a)throw s}}return e}function _(e,t){var n=!0,r=!1,a=void 0;try{for(var s,o=t[Symbol.iterator]();!(n=(s=o.next()).done);n=!0){var d=s.value;e=b(e+="01"+i.a.BigInt(d[0].length*(d[1]+9)).toString(16).padStart(16,"0"),d[0],!0)}}catch(e){r=!0,a=e}finally{try{n||null==o.return||o.return()}finally{if(r)throw a}}return e}function g(e){return"0x"==e.substring(0,2)?e.substring(2):e}var T={test:function(){return"hello2"},generateScAddr:function(e,t){return o.a.soliditySha3({t:"bytes",v:e},{t:"uint",v:t})},hash:function(e){var t=b("",e);return o.a.soliditySha3({t:"bytes",v:t})},principalHash:function(e,t,n,r){var a="";return a=_(a=b(a,[e,t],!0),[[n,20],[r,32]]),o.a.soliditySha3({t:"bytes",v:a})},commitReceiptsHash:function(e,t,n,r,a,i,s,d,p){var l="";return l=b(l,[e]),l=b(l=_(l,[t]),[n]),l=b(l=_(l,[r,a,i]),[s,d,p]),o.a.soliditySha3({t:"bytes",v:l})},getDerivedKey:function(e,t){var n=new f("secp256k1");128==e.length&&(e="04"+e);var r=n.keyFromPrivate(t,"hex"),a=n.keyFromPublic(e,"hex").getPublic().mul(r.getPrivate()),i=2|(a.getY().isOdd()?1:0),s=a.getX(),o=y.Buffer.from([i]),d=s.toArrayLike(y.Buffer,"be",32),l=p.a.md.sha256.create();return l.update(o.toString("binary")),l.update(d.toString("binary")),l.digest().toHex()},encryptMessage:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:p.a.random.getBytesSync(12),r=p.a.util.hexToBytes(e),a=p.a.cipher.createCipher("AES-GCM",r);return a.start({iv:n}),a.update(p.a.util.createBuffer(t)),a.finish(),a.output.putBuffer(a.mode.tag).putBytes(n).toHex()},decryptMessage:function(e,t){var n=p.a.util.hexToBytes(e),r=y.Buffer.from(t,"hex"),a=p.a.util.createBuffer(r.slice(-12)),i=p.a.util.createBuffer(r.slice(-28,-12)),s=p.a.cipher.createDecipher("AES-GCM",n);if(s.start({iv:a,tag:i}),s.update(p.a.util.createBuffer(r.slice(0,-28))),s.finish())return s.output.toHex();throw new Error("decipher did not finish")},toGrains:function(e){return e*Math.pow(10,8)}};T.remove0x=g,T.hexToAscii=function(e){if("number"!=typeof e&&"string"!=typeof e)return"";e=e.toString().replace(/\s+/gi,"");for(var t=[],n=0;n<e.length;n+=2){var r=parseInt(e.substr(n,2),16);isNaN(r)||0===r||t.push(String.fromCharCode(r))}return t.join("")},T.sleep=function(e){return new Promise((function(t){return setTimeout(t,e)}))},T.gzip=function(e){return new Promise((function(t,n){m.a.gzip(e,(function(e,r){e?n(e):t(r)}))}))},T.gunzip=function(e){return new Promise((function(t,n){m.a.gunzip(e,(function(e,r){e?n(e):t(r)}))}))};var D=T,S=n(8),I=n(9),k=n(1),v=n.n(k),$="error",h="depositTransactionHash",E="depositConfirmation",C="depositReceipt",V="withdrawTransactionHash",x="withdrawConfirmation",L="withdrawReceipt",N="loginTransactionHash",w="loginConfirmation",R="loginReceipt",P="logoutTransactionHash",A="logoutConfirmation",W="logoutReceipt",q="deploySCAddrResult",M="deploySCEthTransactionHash",U="deploySCEthConfirmation",F="deploySCEthReceipt",B="deploySCEngReceipt",H="createTask",G="createTaskInput",O="createTaskRecordTransactionHash",z="createTaskRecordConfirmation",K="createTaskRecordReceipt",Q="createTaskRecord",j="sendTaskInputResult",Y="pollTaskStatusResult",X="getTaskResultResult",Z="deploySecretContractResult",J="returnFeesForTaskReceipt",ee="returnFeesForTask",te="pollTaskETHResult",ne="sendTaskInput",re="deploySecretContract",ae="getTaskResult",ie="getTaskStatus",se="SUCCESS",oe="FAILED",de="UNVERIFIED",pe="INPROGRESS",le=0,ce=1,ye=2,ue=3,me=4,fe=5;function be(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var _e=function(){function e(t,n,r,a,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.enigmaContract=n,this.tokenContract=r,this.txDefaults=a,this.enigma=i}var t,n,r;return t=e,(n=[{key:"findBySigningAddress",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getWorkerFromSigningAddress(e).call());case 2:return t=n.sent,n.abrupt("return",{account:t[0],status:parseInt(t[1][1]),report:t[1][2],balance:parseInt(t[1][3]),logs:t[1][4]});case 4:case"end":return n.stop()}}),null,this)}},{key:"getWorkerStatus",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getWorker(e).call());case 2:return t=n.sent,n.abrupt("return",parseInt(t.status));case 4:case"end":return n.stop()}}),null,this)}},{key:"isDeployed",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.t0=parseInt,t.next=3,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 3:return t.t1=t.sent.status,t.t2=(0,t.t0)(t.t1),t.abrupt("return",1===t.t2);case 6:case"end":return t.stop()}}),null,this)}},{key:"countSecretContracts",value:function(){return regeneratorRuntime.async((function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,regeneratorRuntime.awrap(this.enigmaContract.methods.countSecretContracts().call());case 3:return e.t1=e.sent,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}}),null,this)}},{key:"getSecretContractAddresses",value:function(e,t){return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContractAddresses(e,t).call());case 2:return n.abrupt("return",n.sent);case 3:case"end":return n.stop()}}),null,this)}},{key:"getAllSecretContractAddresses",value:function(){return regeneratorRuntime.async((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getAllSecretContractAddresses().call());case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),null,this)}},{key:"getCodeHash",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 2:return t.abrupt("return",t.sent.codeHash);case 3:case"end":return t.stop()}}),null,this)}},{key:"countStateDeltas",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 2:return t.abrupt("return",t.sent.stateDeltaHashes.length);case 3:case"end":return t.stop()}}),null,this)}},{key:"getStateDeltaHash",value:function(e,t){return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 2:return n.t0=t,n.abrupt("return",n.sent.stateDeltaHashes[n.t0]);case 4:case"end":return n.stop()}}),null,this)}},{key:"getStateDeltaHashes",value:function(e,t,n){return regeneratorRuntime.async((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 2:return r.t0=t,r.t1=n,r.abrupt("return",r.sent.stateDeltaHashes.slice(r.t0,r.t1));case 5:case"end":return r.stop()}}),null,this)}},{key:"isValidDeltaHash",value:function(e,t){return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 2:return n.t0=t,n.abrupt("return",n.sent.stateDeltaHashes.includes(n.t0));case 4:case"end":return n.stop()}}),null,this)}},{key:"login",value:function(e){var t=this,n=new v.a;return regeneratorRuntime.async((function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,regeneratorRuntime.awrap(t.enigmaContract.methods.login().send({from:e}).on("transactionHash",(function(e){n.emit(N,e)})).on("confirmation",(function(e,t){n.emit(w,e,t)})).on("receipt",(function(e){n.emit(R,e)})));case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit($,r.t0.message);case 8:case"end":return r.stop()}}),null,null,[[0,5]]),n}},{key:"logout",value:function(e){var t=this,n=new v.a;return regeneratorRuntime.async((function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,regeneratorRuntime.awrap(t.enigmaContract.methods.logout().send({from:e}).on("transactionHash",(function(e){n.emit(P,e)})).on("confirmation",(function(e,t){n.emit(A,e,t)})).on("receipt",(function(e){n.emit(W,e)})));case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit($,r.t0.message);case 8:case"end":return r.stop()}}),null,null,[[0,5]]),n}},{key:"deposit",value:function(e,t){var n,r=this,a=new v.a;return regeneratorRuntime.async((function(i){for(;;)switch(i.prev=i.next){case 0:return i.next=2,regeneratorRuntime.awrap(r.tokenContract.methods.balanceOf(e).call());case 2:if(!(i.sent<t)){i.next=7;break}return a.emit("error",{name:"NotEnoughTokens",message:"Not enough tokens in wallet"}),i.abrupt("return");case 7:return i.next=9,regeneratorRuntime.awrap(r.tokenContract.methods.approve(r.enigmaContract.options.address,t).send({from:e}));case 9:return i.prev=9,i.next=12,regeneratorRuntime.awrap(r.enigmaContract.methods.deposit(e,t).send({from:e}).on("transactionHash",(function(e){a.emit(h,e)})).on("confirmation",(function(e,t){a.emit(E,e,t)})));case 12:n=i.sent,a.emit(C,n),i.next=19;break;case 16:i.prev=16,i.t0=i.catch(9),a.emit($,i.t0.message);case 19:case"end":return i.stop()}}),null,null,[[9,16]]),a}},{key:"withdraw",value:function(e,t){var n=this,r=new v.a;return regeneratorRuntime.async((function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,regeneratorRuntime.awrap(n.enigmaContract.methods.withdraw(t).send({from:e}).on("transactionHash",(function(e){r.emit(V,e)})).on("confirmation",(function(e,t){r.emit(x,e,t)})).on("receipt",(function(e){r.emit(L,e)})));case 3:a.next=8;break;case 5:a.prev=5,a.t0=a.catch(0),r.emit($,a.t0.message);case 8:case"end":return a.stop()}}),null,null,[[0,5]]),r}},{key:"getBalance",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.t0=parseInt,t.next=3,regeneratorRuntime.awrap(this.enigmaContract.methods.getWorker(e).call());case 3:return t.t1=t.sent.balance,t.abrupt("return",(0,t.t0)(t.t1));case 5:case"end":return t.stop()}}),null,this)}},{key:"getWorkerSignerAddr",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getWorker(e).call());case 2:return t.abrupt("return",t.sent.signer);case 3:case"end":return t.stop()}}),null,this)}}])&&be(t.prototype,n),r&&be(t,r),e}();var ge=function e(t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,b){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.inputsHash=D.hash([n,r,b?f:t,o]),this.scAddr=t,this.encryptedFn=n,this.encryptedAbiEncodedArgs=r,this.gasLimit=a,this.gasPx=i,this.msgId=s,this.userPubKey=o,this.firstBlockNumber=d,this.workerAddress=p,this.workerEncryptionKey=l,this.sender=c,this.userTaskSig=y,this.nonce=u,this.preCode=m,this.preCodeHash=f,this.isContractDeploymentTask=b,this.transactionHash="",this.taskId="",this.receipt="",this.ethStatus=0,this.proof="",this.creationBlockNumber=-1,this.encryptedAbiEncodedOutputs="",this.delta="",this.usedGas="",this.ethereumPayload="",this.ethereumAddress="",this.workerTaskSig="",this.engStatus="null",this.decryptedOutput=""},Te=n(10),De=n.n(Te),Se=n(11),Ie=n.n(Se),ke=n(12),ve=n.n(ke),$e=n(13),he=n(6),Ee=n.n(he);function Ce(e){return(Ce="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ve(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var xe=function(){function e(t,n,r,a){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.txDefaults=i,this.config={},this.config.retry={},this.config.retry.retries=s.retry&&null!=s.retry.retries?s.retry.retries:5,this.config.retry.factor=s.retry&&null!=s.retry.factor?s.retry.factor:2,this.config.retry.minTimeout=s.retry&&null!=s.retry.minTimeout?s.retry.minTimeout:2e3,this.config.retry.maxTimeout=s.retry&&null!=s.retry.maxTimeout?s.retry.maxTimeout:"Infinity",this.config.retry.randomize=!s.retry||(null==s.retry.randomize||s.retry.randomize);this.client=De()((function(e,t){Ie.a.post(a,JSON.parse(e),{headers:{"Content-Type":"application/json",credentials:"include"}}).then((function(e){if($ in e.data)t(e.data.error,null);else{var n=JSON.stringify(e.data.result);t(null,n)}})).catch((function(e){t({code:-32e3,message:e.message},null)}))}),{}),this.workerParamsCache={},this.selectedWorkerGroupCache={},this.taskKeyLocalStorage={},this.createContracts(n,r)}var t,n,r;return t=e,r=[{key:"serializeTask",value:function(e){return e.isContractDeploymentTask?{preCode:e.preCode,encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),encryptedFn:D.remove0x(e.encryptedFn),userDHKey:D.remove0x(e.userPubKey),contractAddress:D.remove0x(e.scAddr),workerAddress:e.workerAddress}:{taskId:D.remove0x(e.taskId),workerAddress:e.workerAddress,encryptedFn:D.remove0x(e.encryptedFn),encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),contractAddress:D.remove0x(e.scAddr),userDHKey:D.remove0x(e.userPubKey)}}},{key:"version",value:function(){return"0.0.1"}}],(n=[{key:"admin",value:function(){this.admin=new _e(this.web3,this.enigmaContract,this.tokenContract,this.txDefaults,this)}},{key:"createContracts",value:function(e,t){this.enigmaContract=new this.web3.eth.Contract(S.abi,e,this.txDefaults),this.tokenContract=new this.web3.eth.Contract(I.abi,t,this.txDefaults)}},{key:"createTask",value:function(e,t,n,r,a,i,s){var o,d,p,l,c,y,u,m,f,b,_,g,T,S,I,k,h,E,C,V,x,L,N,w,R=this,P=new v.a;return regeneratorRuntime.async((function(v){for(;;)switch(v.prev=v.next){case 0:return v.t0=parseInt,v.next=3,regeneratorRuntime.awrap(R.enigmaContract.methods.getUserTaskDeployments(a).call());case 3:if(v.t1=v.sent,o=(0,v.t0)(v.t1),d=s?D.generateScAddr(a,o):i,!s){v.next=17;break}if(!Buffer.isBuffer(i)){v.next=14;break}return p=i,v.next=11,regeneratorRuntime.awrap(D.gzip(p));case 11:l=v.sent,v.next=15;break;case 14:throw Error("PreCode expected to be a Buffer, instead got "+Ce(i));case 15:v.next=19;break;case 17:p="",l="";case 19:for(c=s?R.web3.utils.soliditySha3({t:"bytes",value:p.toString("hex")}):"",y=void 0===t||0===t.length?[[],[]]:t[0].map((function(e,n){return t.map((function(e){return e[n]}))})),u=D.remove0x(R.web3.eth.abi.encodeParameters(y[1],y[0])),m=[],f=0;f<u.length;f+=2)m.push(parseInt(u.substr(f,2),16));return v.next=26,regeneratorRuntime.awrap(R.web3.eth.getBlockNumber());case 26:return b=v.sent,v.next=29,regeneratorRuntime.awrap(R.getWorkerParams(b));case 29:return _=v.sent,g=_.firstBlockNumber,v.next=33,regeneratorRuntime.awrap(R.selectWorkerGroup(d,_,1)[0]);case 33:return T=(T=v.sent).toLowerCase().slice(-40),S=R.obtainTaskKeyPair(),I=S.publicKey,k=S.privateKey,v.prev=36,v.next=39,regeneratorRuntime.awrap(R.obtainWorkerEncryptionKey(T,_.firstBlockNumber,I));case 39:if(h=v.sent,E=h.workerEncryptionKey,C=h.id,!E){v.next=51;break}return V=D.getDerivedKey(E,k),x=D.encryptMessage(V,e),L=D.encryptMessage(V,Buffer.from(m)),N=R.web3.utils.soliditySha3({t:"bytes",v:x},{t:"bytes",v:L}),v.next=49,regeneratorRuntime.awrap(R.web3.eth.sign(N,a));case 49:w=v.sent,P.emit(H,new ge(d,x,L,n,r,C,I,g,T,E,a,w,o,l.toString("base64"),c,s));case 51:v.next=56;break;case 53:v.prev=53,v.t2=v.catch(36),P.emit($,v.t2);case 56:case"end":return v.stop()}}),null,null,[[36,53]]),P}},{key:"createTaskRecord",value:function(e){var t,n=this,r=new v.a;return regeneratorRuntime.async((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,regeneratorRuntime.awrap(n.tokenContract.methods.balanceOf(e.sender).call());case 2:if(!(a.sent<e.gasLimit*e.gasPx)){a.next=6;break}return r.emit($,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),a.abrupt("return");case 6:return a.next=8,regeneratorRuntime.awrap(n.tokenContract.methods.approve(n.enigmaContract.options.address,e.gasLimit*e.gasPx).send({from:e.sender}));case 8:if(a.prev=8,!e.isContractDeploymentTask){a.next=15;break}return a.next=12,regeneratorRuntime.awrap(n.enigmaContract.methods.createDeploymentTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber,e.nonce).send({from:e.sender}).on("transactionHash",(function(t){e.transactionHash=t,r.emit(O,t)})).on("confirmation",(function(e,t){r.emit(z,e,t)})));case 12:a.t0=a.sent,a.next=18;break;case 15:return a.next=17,regeneratorRuntime.awrap(n.enigmaContract.methods.createTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber).send({from:e.sender}).on("transactionHash",(function(t){e.transactionHash=t,r.emit(O,t)})).on("confirmation",(function(e,t){r.emit(z,e,t)})));case 17:a.t0=a.sent;case 18:t=a.t0,e.taskId=t.events.TaskRecordCreated.returnValues.taskId,e.receipt=t,e.ethStatus=1,e.creationBlockNumber=t.blockNumber,r.emit(K,t),r.emit(Q,e),a.next=30;break;case 27:a.prev=27,a.t1=a.catch(8),r.emit($,a.t1.message);case 30:case"end":return a.stop()}}),null,null,[[8,27]]),r}},{key:"getTaskRecordStatus",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getTaskRecord(e.taskId).call());case 2:return t=n.sent,e.ethStatus=parseInt(t.status),e.proof=t.proof,n.abrupt("return",e);case 6:case"end":return n.stop()}}),null,this)}},{key:"getTaskRecordFromTaskId",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getTaskRecord(e).call());case 2:return t=n.sent,n.abrupt("return",{sender:t.sender,inputsHash:t.inputsHash,outputHash:t.outputHash,gasLimit:parseInt(t.gasLimit),gasPx:parseInt(t.gasPx),blockNumber:parseInt(t.blockNumber),status:parseInt(t.status),proof:t.proof});case 4:case"end":return n.stop()}}),null,this)}},{key:"getTaskOutputHash",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getTaskRecord(e.taskId).call());case 2:return t.abrupt("return",t.sent.outputHash);case 3:case"end":return t.stop()}}),null,this)}},{key:"getReport",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getReport(e).call());case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),null,this)}},{key:"getWorkerParams",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:if(!(0===Object.keys(this.workerParamsCache).length||e-this.workerParamsCache.firstBlockNumber>=this.epochSize)){n.next=8;break}return n.next=3,regeneratorRuntime.awrap(this.enigmaContract.methods.getEpochSize().call());case 3:return this.epochSize=n.sent,n.next=6,regeneratorRuntime.awrap(this.enigmaContract.methods.getWorkerParams(e).call());case 6:t=n.sent,this.workerParamsCache={firstBlockNumber:parseInt(t[0]),seed:i.a.BigInt(t[1]),workers:t[2],stakes:t[3].map((function(e){return i.a.BigInt(e)}))};case 8:return n.abrupt("return",this.workerParamsCache);case 9:case"end":return n.stop()}}),null,this)}},{key:"selectWorkerGroup",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5,r=t.stakes.reduce((function(e,t){return i.a.add(e,t)}),i.a.BigInt(0)),a=0,s=[];do{for(var d=$e.rawEncode(["uint256","bytes32","uint256"],[t.seed.toString(10),e,a]),p=o.a.keccak256(d),l=i.a.remainder(i.a.BigInt(p),r),c=t.workers[t.workers.length-1],y=0;y<t.workers.length;y++)if((l=i.a.subtract(l,t.stakes[y]))<=0){c=t.workers[y];break}s.includes(c)||s.push(c),a++}while(s.length<n);return s}},{key:"sendTaskInput",value:function(t){var n,r,a=this,i=new v.a;return regeneratorRuntime.async((function(s){for(;;)switch(s.prev=s.next){case 0:return n=ne,r=j,t.isContractDeploymentTask&&(n=re,r=Z),s.prev=3,s.next=6,regeneratorRuntime.awrap(new Promise((function(r,i){a.client.request(n,e.serializeTask(t),(function(e,t){e?i(e):r(t)}))})));case 6:i.emit(r,t),s.next=12;break;case 9:s.prev=9,s.t0=s.catch(3),i.emit($,s.t0);case 12:case"end":return s.stop()}}),null,null,[[3,9]]),i}},{key:"getTaskResult",value:function(e){var t=this,n=new v.a,r=ve.a.operation(this.config.retry);return r.attempt((function(a){var i;return regeneratorRuntime.async((function(s){for(;;)switch(s.prev=s.next){case 0:return s.prev=0,s.next=3,regeneratorRuntime.awrap(new Promise((function(n,r){t.client.request(ae,{taskId:D.remove0x(e.taskId)},(function(e,t){e?r(e):n(t)}))})));case 3:if(!(i=s.sent).result){s.next=20;break}s.t0=i.result.status,s.next=s.t0===se?8:s.t0===oe?12:s.t0===de?15:s.t0===pe?15:17;break;case 8:e.delta=i.result.delta,e.ethereumPayload=i.result.ethereumPayload,e.ethereumAddress=i.result.ethereumAddress,e.preCodeHash=i.result.preCodeHash;case 12:e.encryptedAbiEncodedOutputs=i.result.output,e.usedGas=i.result.usedGas,e.workerTaskSig=i.result.signature;case 15:return e.engStatus=i.result.status,s.abrupt("break",18);case 17:throw new Error("Invalid task result status").message;case 18:s.next=26;break;case 20:if(!r.retry(!0)){s.next=25;break}return console.log("Warning: Got an empty TaskResult on attempt "+a+" of "+(t.config.retry.retries+1)+". Retrying..."),s.abrupt("return");case 25:e.engStatus=null;case 26:n.emit(X,e),s.next=32;break;case 29:s.prev=29,s.t1=s.catch(0),n.emit($,s.t1);case 32:case"end":return s.stop()}}),null,null,[[0,29]])})),n}},{key:"returnFeesForTask",value:function(e){var t,n,r=this,a=new v.a;return regeneratorRuntime.async((function(i){for(;;)switch(i.prev=i.next){case 0:return i.next=2,regeneratorRuntime.awrap(r.enigmaContract.methods.getTaskTimeoutSize().call());case 2:return t=i.sent,i.next=5,regeneratorRuntime.awrap(r.web3.eth.getBlockNumber());case 5:if(!(i.sent-e.creationBlockNumber<=t)){i.next=9;break}return a.emit($,{name:"InvalidTaskReturn",message:"Not enough time has elapsed to return task funds"}),i.abrupt("return");case 9:return i.prev=9,i.next=12,regeneratorRuntime.awrap(r.enigmaContract.methods.returnFeesForTask(e.taskId).send({from:e.sender}));case 12:n=i.sent,e.ethStatus=fe,a.emit(J,n),a.emit(ee,e),i.next=21;break;case 18:i.prev=18,i.t0=i.catch(9),a.emit($,i.t0.message);case 21:case"end":return i.stop()}}),null,null,[[9,18]]),a}},{key:"decryptTaskResult",value:function(e){var t,n,r;return regeneratorRuntime.async((function(a){for(;;)switch(a.prev=a.next){case 0:return console.log("task.encryptedAbiEncodedOutputs is "+e.encryptedAbiEncodedOutputs),e.encryptedAbiEncodedOutputs?(t=this.obtainTaskKeyPair(),n=t.privateKey,r=D.getDerivedKey(e.workerEncryptionKey,n),e.decryptedOutput=D.decryptMessage(r,e.encryptedAbiEncodedOutputs)):(console.log("Warning: task.encryptedAbiEncodedOutputs is empty, there is nothing to decrypt."),e.decryptedOutput=null),a.abrupt("return",e);case 3:case"end":return a.stop()}}),null,this)}},{key:"verifyTaskOutput",value:function(e){var t,n;return regeneratorRuntime.async((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,regeneratorRuntime.awrap(this.getTaskOutputHash(e));case 2:return t=r.sent,n=this.web3.utils.soliditySha3({t:"bytes",value:e.encryptedAbiEncodedOutputs.toString("hex")}),r.abrupt("return",t===n);case 5:case"end":return r.stop()}}),null,this)}},{key:"verifyTaskStatus",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.getTaskRecordStatus(e));case 2:t=n.sent.ethStatus,n.t0=e.engStatus,n.next=n.t0===se?6:n.t0===oe?8:n.t0===de?10:n.t0===pe?10:12;break;case 6:return n.abrupt("return",t===ye);case 8:return n.abrupt("return",t===ue);case 10:return n.abrupt("return",t===ce);case 12:return n.abrupt("return",t===le);case 13:case"end":return n.stop()}}),null,this)}},{key:"pollTaskStatusGen",value:regeneratorRuntime.mark((function e(t,n){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,new Promise((function(e,a){r.client.request(ie,{taskId:D.remove0x(t.taskId),workerAddress:t.workerAddress,withResult:n},(function(r,i){r?a(r):(t.engStatus=i.result.status,n&&(t.encryptedAbiEncodedOutputs=i.result.output),e(t))}))}));case 3:e.next=0;break;case 5:case"end":return e.stop()}}),e)}))},{key:"innerPollTaskStatus",value:function(e,t,n){var r=this;t.next().value.then((function(a){n.emit(Y,a),"SUCCESS"!==a.engStatus&&"FAILED"!==a.engStatus&&r.innerPollTaskStatus(e,t,n)})).catch((function(e){n.emit($,e)}))}},{key:"pollTaskStatus",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=new v.a,r=this.pollTaskStatusGen(e,t);return this.innerPollTaskStatus(e,r,n),n}},{key:"pollTaskETH",value:function(e){var t,n=arguments;return regeneratorRuntime.async((function(r){for(;;)switch(r.prev=r.next){case 0:t=n.length>1&&void 0!==n[1]?n[1]:1e3;case 1:if(e.ethStatus!==ce){r.next=9;break}return r.next=4,regeneratorRuntime.awrap(this.getTaskRecordStatus(e));case 4:return e=r.sent,r.next=7,regeneratorRuntime.awrap(D.sleep(t));case 7:r.next=1;break;case 9:return r.abrupt("return",e);case 10:case"end":return r.stop()}}),null,this)}},{key:"obtainTaskKeyPair",value:function(){var e,t="undefined"!=typeof window,n=t?window.localStorage.getItem("encodedPrivateKey"):this.taskKeyLocalStorage.encodedPrivateKey;if(null==n)throw Error("Need to set task key pair first");return e=t?atob(n):Buffer.from(n,"base64").toString("binary"),{publicKey:Ee.a.publicKeyByPrivateKey(e),privateKey:e}}},{key:"setTaskKeyPair",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t="undefined"!=typeof window;if(""===e)for(var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",r=0;r<9;r++)e+=n.charAt(Math.floor(Math.random()*n.length));var a=p.a.random.createInstance();a.seedFileSync=function(t){return p.a.util.fillString(e,t)};var i=p.a.util.bytesToHex(a.getBytes(32));return t?window.localStorage.setItem("encodedPrivateKey",btoa(i)):this.taskKeyLocalStorage.encodedPrivateKey=Buffer.from(i,"binary").toString("base64"),e}},{key:"obtainWorkerEncryptionKey",value:function(e,t,n){var r,a,i,s,o,d,p,l=this;return regeneratorRuntime.async((function(c){for(;;)switch(c.prev=c.next){case 0:if(!this.taskKeyLocalStorage.hasOwnProperty(t)||!this.taskKeyLocalStorage[t].hasOwnProperty(e)){c.next=4;break}return c.abrupt("return",this.taskKeyLocalStorage[t][e]);case 4:return c.next=6,regeneratorRuntime.awrap(new Promise((function(t,r){l.client.request("getWorkerEncryptionKey",{workerAddress:e,userPubKey:n},(function(e,n){e?r(e):t(n)}))})));case 6:if(r=c.sent,a=r.result,i=r.id,s=a.workerEncryptionKey,o=a.workerSig,d="0x0000000000000013456e69676d612055736572204d6573736167650000000000000040"+s,p=(p=Ee.a.recover("0x"+o,this.web3.utils.soliditySha3({t:"bytes",value:d}))).toLowerCase().slice(-40),e===p){c.next=17;break}throw console.error("Worker address",e,"!= recovered address",p),Error("Invalid worker encryption key + signature combo ".concat(e," != ").concat(p));case 17:return this.taskKeyLocalStorage.hasOwnProperty(t)||(this.taskKeyLocalStorage[t]={}),this.taskKeyLocalStorage[t][e]={workerEncryptionKey:s,id:i},c.abrupt("return",{workerEncryptionKey:s,id:i});case 20:case"end":return c.stop()}}),null,this)}},{key:"deploySecretContract",value:function(e,t,n,r,a,i){var s,o=this,d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,p=new v.a;return regeneratorRuntime.async((function(l){for(;;)switch(l.prev=l.next){case 0:s=0;case 1:return l.prev=2,l.next=5,regeneratorRuntime.awrap(function(){var s;return regeneratorRuntime.async((function(d){for(;;)switch(d.prev=d.next){case 0:return d.next=2,regeneratorRuntime.awrap(new Promise((function(s,d){o.createTask(e,t,n,r,a,i,!0).on(H,(function(e){return s(e)})).on($,(function(e){return d(e)}))})));case 2:return s=d.sent,p.emit(H,s),d.next=6,regeneratorRuntime.awrap(new Promise((function(e,t){o.createTaskRecord(s).on(Q,(function(t){return e(t)})).on($,(function(e){return t(e)}))})));case 6:return s=d.sent,p.emit(Q,s),d.next=10,regeneratorRuntime.awrap(new Promise((function(e,t){o.sendTaskInput(s).on(Z,(function(t){return e(t)})).on($,(function(e){return t(e)}))})));case 10:return p.emit(Z,s),d.abrupt("return","break");case 12:case"end":return d.stop()}}))}());case 5:if("break"!==l.sent){l.next=8;break}return l.abrupt("break",17);case 8:l.next=15;break;case 10:if(l.prev=10,l.t0=l.catch(2),!(s++>=d||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==l.t0)){l.next=15;break}return p.emit($,l.t0),l.abrupt("break",17);case 15:l.next=1;break;case 17:case"end":return l.stop()}}),null,null,[[2,10]]),p}},{key:"computeTask",value:function(e,t,n,r,a,i){var s,o=this,d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,p=new v.a;return regeneratorRuntime.async((function(l){for(;;)switch(l.prev=l.next){case 0:s=0;case 1:return l.prev=2,l.next=5,regeneratorRuntime.awrap(function(){var s;return regeneratorRuntime.async((function(d){for(;;)switch(d.prev=d.next){case 0:return d.next=2,regeneratorRuntime.awrap(new Promise((function(s,d){o.createTask(e,t,n,r,a,i,!1).on(H,(function(e){return s(e)})).on($,(function(e){return d(e)}))})));case 2:return s=d.sent,p.emit(H,s),d.next=6,regeneratorRuntime.awrap(new Promise((function(e,t){o.createTaskRecord(s).on(Q,(function(t){return e(t)})).on($,(function(e){return t(e)}))})));case 6:return s=d.sent,p.emit(Q,s),d.next=10,regeneratorRuntime.awrap(new Promise((function(e,t){o.sendTaskInput(s).on(j,(function(t){return e(t)})).on($,(function(e){return t(e)}))})));case 10:return p.emit(j,s),d.abrupt("return","break");case 12:case"end":return d.stop()}}))}());case 5:if("break"!==l.sent){l.next=8;break}return l.abrupt("break",17);case 8:l.next=15;break;case 10:if(l.prev=10,l.t0=l.catch(2),!(s++>=d||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==l.t0)){l.next=15;break}return p.emit($,l.t0),l.abrupt("break",17);case 15:l.next=1;break;case 17:case"end":return l.stop()}}),null,null,[[2,10]]),p}}])&&Ve(t.prototype,n),r&&Ve(t,r),e}();n.d(t,"Enigma",(function(){return xe})),n.d(t,"utils",(function(){return D})),n.d(t,"eeConstants",(function(){return r})),n.d(t,"Task",(function(){return ge}))}])}));
//# sourceMappingURL=enigma-js.node.min.js.map