!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("enigma-js",[],t):"object"==typeof exports?exports["enigma-js"]=t():e["enigma-js"]=t()}(global,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=14)}([function(e,t){e.exports=require("node-forge")},function(e,t){e.exports=require("eventemitter3")},function(e,t){e.exports=require("jsbi")},function(e,t){e.exports=require("web3-utils")},function(e,t){e.exports=require("buffer")},function(e,t){e.exports=require("zlib")},function(e,t){e.exports=require("eth-crypto")},function(e,t){e.exports=require("elliptic")},function(e){e.exports=JSON.parse('{"contractName":"Enigma","abi":[{"constant":true,"inputs":[],"name":"getAllSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getWorkersParams","outputs":[{"components":[{"name":"firstBlockNumber","type":"uint256"},{"name":"workers","type":"address[]"},{"name":"stakes","type":"uint256[]"},{"name":"seed","type":"uint256"}],"name":"","type":"tuple[5]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_scAddr","type":"bytes32"}],"name":"getSecretContract","outputs":[{"components":[{"name":"owner","type":"address"},{"name":"preCodeHash","type":"bytes32"},{"name":"codeHash","type":"bytes32"},{"name":"stateDeltaHashes","type":"bytes32[]"},{"name":"status","type":"uint8"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"getTaskRecord","outputs":[{"components":[{"name":"sender","type":"address"},{"name":"inputsHash","type":"bytes32"},{"name":"outputHash","type":"bytes32"},{"name":"gasLimit","type":"uint64"},{"name":"gasPx","type":"uint64"},{"name":"blockNumber","type":"uint256"},{"name":"status","type":"uint8"},{"name":"proof","type":"bytes"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_signer","type":"address"}],"name":"getWorkerFromSigningAddress","outputs":[{"name":"","type":"address"},{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_worker","type":"address"}],"name":"getWorker","outputs":[{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSigningAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEpochSize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_sender","type":"address"}],"name":"getUserTaskDeployments","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_tokenAddress","type":"address"},{"name":"_principal","type":"address"},{"name":"_epochSize","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint64"},{"indexed":false,"name":"gasPx","type":"uint64"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint64[]"},{"indexed":false,"name":"gasPxs","type":"uint64[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"workerAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event"},{"constant":false,"inputs":[{"name":"_signer","type":"address"},{"name":"_report","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_custodian","type":"address"},{"name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"login","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"logout","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_codeHash","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContractFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_preCodeHash","type":"bytes32"},{"name":"_codeHash","type":"bytes32"},{"name":"_initStateDeltaHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"countSecretContracts","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_start","type":"uint256"},{"name":"_stop","type":"uint256"}],"name":"getSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint64"},{"name":"_gasPx","type":"uint64"},{"name":"_firstBlockNumber","type":"uint256"},{"name":"_nonce","type":"uint256"}],"name":"createDeploymentTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint64"},{"name":"_gasPx","type":"uint64"},{"name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHashes","type":"bytes32[]"},{"name":"_gasLimits","type":"uint64[]"},{"name":"_gasPxs","type":"uint64[]"},{"name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecords","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_stateDeltaHash","type":"bytes32"},{"name":"_outputHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitReceipt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_outputHash","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitTaskFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"returnFeesForTask","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_seed","type":"uint256"},{"name":"_sig","type":"bytes"}],"name":"setWorkersParams","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getActiveWorkers","outputs":[{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getFirstBlockNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getWorkerParams","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_scAddr","type":"bytes32"}],"name":"getWorkerGroup","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_custodian","type":"address"}],"name":"getReport","outputs":[{"name":"","type":"address"},{"name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_data","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"verifyReport","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.8+commit.23d335f2\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getActiveWorkers\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getWorkerGroup\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"logout\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdraw\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitReceipt\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"deposit\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_initStateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_seed\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setWorkersParams\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getAllSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getWorkersParams\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple[5]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"countSecretContracts\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getSecretContract\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"register\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_start\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_stop\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getTaskRecord\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"proof\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getWorkerParams\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorkerFromSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContractFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"login\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_data\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"verifyReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"name\\":\\"_gasLimits\\",\\"type\\":\\"uint64[]\\"},{\\"name\\":\\"_gasPxs\\",\\"type\\":\\"uint64[]\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecords\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_worker\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorker\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createDeploymentTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitTaskFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getFirstBlockNumber\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getEpochSize\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"returnFeesForTask\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_sender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getUserTaskDeployments\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"name\\":\\"_tokenAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_principal\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_epochSize\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"custodian\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"Registered\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"hash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"workerAddr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"ValidatedSig\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"inclusionBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"indexed\\":false,\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"name\\":\\"nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WorkersParameterized\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskIds\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"inputsHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"gasLimits\\",\\"type\\":\\"uint64[]\\"},{\\"indexed\\":false,\\"name\\":\\"gasPxs\\",\\"type\\":\\"uint64[]\\"},{\\"indexed\\":false,\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordsCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"deltaHashIndex\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskIds\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"outputHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptsVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailed\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailedETH\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"TaskFeeReturned\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"DepositSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WithdrawSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"initStateDeltaHash\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"SecretContractDeployed\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_optionalEthereumContractAddress\\":\\"Output state hash\\",\\"_optionalEthereumData\\":\\"Output state hash\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_stateDeltaHash\\":\\"Input state delta hash\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"countSecretContracts()\\":{\\"return\\":\\"Number of deployed secret contracts\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\",\\"_nonce\\":\\"Locally-computed nonce value for this deployment\\"}},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"createTaskRecords(bytes32[],uint64[],uint64[],uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimits\\":\\"ENG gas limit\\",\\"_gasPxs\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHashes\\":\\"Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_initStateDeltaHash\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumContractAddress\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumData\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_preCodeHash\\":\\"Predeployed bytecode hash\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deposit(address,uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\",\\"_custodian\\":\\"The worker\'s ETH address\\"}},\\"getActiveWorkers(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"}},\\"getAllSecretContractAddresses()\\":{\\"return\\":\\"Array of secret contract addresses\\"},\\"getEpochSize()\\":{\\"return\\":\\"Epoch size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Block number\\"},\\"getReport(address)\\":{\\"params\\":{\\"_custodian\\":\\"The worker\'s custodian address\\"}},\\"getSecretContract(bytes32)\\":{\\"params\\":{\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"SecretContract struct\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"params\\":{\\"_start\\":\\"Start of range\\",\\"_stop\\":\\"End of range\\"},\\"return\\":\\"Subset of deployed secret contract addresses\\"},\\"getSigningAddress()\\":{\\"return\\":\\"Signing address\\"},\\"getTaskRecord(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique identifier for a given task\\"},\\"return\\":\\"TaskRecord struct\\"},\\"getUserTaskDeployments(address)\\":{\\"params\\":{\\"_sender\\":\\"Task sender\'s ethereum address\\"},\\"return\\":\\"Current number for task deployments for user\\"},\\"getWorker(address)\\":{\\"params\\":{\\"_worker\\":\\"Worker\'s ethereum address\\"},\\"return\\":\\"Worker struct\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"params\\":{\\"_signer\\":\\"Worker\'s signing address\\"},\\"return\\":\\"Ethereum addressWorker struct\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number the task record was mined\\",\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"Selected workers\' addresses\\"},\\"getWorkerParams(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes\\"},\\"getWorkersParams()\\":{\\"return\\":\\"Array of WorkersParams structs\\"},\\"register(address,bytes,bytes)\\":{\\"params\\":{\\"_report\\":\\"The RLP encoded report returned by the IAS\\",\\"_signature\\":\\"Signature\\",\\"_signer\\":\\"The signer address, derived from the enclave public key\\"}},\\"returnFeesForTask(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique taskId\\"}},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number principal node is attempting to set worker params\\",\\"_seed\\":\\"The random integer generated by the enclave\\",\\"_sig\\":\\"Principal node\'s signature\\"}},\\"verifyReport(bytes,bytes)\\":{\\"params\\":{\\"_data\\":\\"The report itself\\",\\"_signature\\":\\"The signature of the report\\"}},\\"withdraw(uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\"}}}},\\"userdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee.\\"},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure.\\"},\\"countSecretContracts()\\":{\\"notice\\":\\"Check if secret contract has been deployed\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"notice\\":\\"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid.\\"},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"notice\\":\\"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"createTaskRecords(bytes32[],uint64[],uint64[],uint256)\\":{\\"notice\\":\\"Create task records for tasks (either contract deployment or regular tasks). This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deposit(address,uint256)\\":{\\"notice\\":\\"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\"},\\"getActiveWorkers(uint256)\\":{\\"notice\\":\\"Get active workers before a certain block number\\"},\\"getAllSecretContractAddresses()\\":{\\"notice\\":\\"Get all secret contract addresses\\"},\\"getEpochSize()\\":{\\"notice\\":\\"Get the epoch block size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"notice\\":\\"Get the first block number of an epoch that a given block number belongs to\\"},\\"getReport(address)\\":{\\"notice\\":\\"The RLP encoded report returned by the IAS server\\"},\\"getSecretContract(bytes32)\\":{\\"notice\\":\\"Get a SecretContract struct given a particular secret contract address\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"notice\\":\\"Get deployed secret contract addresses within a range\\"},\\"getSigningAddress()\\":{\\"notice\\":\\"Get signing address of calling worker\\"},\\"getTaskRecord(bytes32)\\":{\\"notice\\":\\"Get a TaskRecord struct given a particular task\'s ID\\"},\\"getUserTaskDeployments(address)\\":{\\"notice\\":\\"Get the current number/index (used as unique nonce value) of task deployments for a given user user\\"},\\"getWorker(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s ethereum address\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s signing address\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"notice\\":\\"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address.\\"},\\"getWorkerParams(uint256)\\":{\\"notice\\":\\"Get worker params for an epoch given a particular block number\\"},\\"getWorkersParams()\\":{\\"notice\\":\\"Get epoch-based history of worker params information\\"},\\"login()\\":{\\"notice\\":\\"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process.\\"},\\"logout()\\":{\\"notice\\":\\"Logout worker. Worker must be logged in to do so.\\"},\\"register(address,bytes,bytes)\\":{\\"notice\\":\\"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks.\\"},\\"returnFeesForTask(bytes32)\\":{\\"notice\\":\\"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\"},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"notice\\":\\"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node\\"},\\"verifyReport(bytes,bytes)\\":{\\"notice\\":\\"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\"},\\"withdraw(uint256)\\":{\\"notice\\":\\"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\"}}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":\\"Enigma\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":{\\"keccak256\\":\\"0xb4682e29039feb946aa1b766ac09ced11047abc522e607873cff6a3af184f8f8\\",\\"urls\\":[\\"bzzr://c0ab59a4d80c66e1ef5575104366159e4bb3273588f3170d1c8f0b7cd4ea595d\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol\\":{\\"keccak256\\":\\"0xdbd260da77be72ac762308384b22f58abb61c63d87cab0302a57c5a337d1de2c\\",\\"urls\\":[\\"bzzr://5cef024e63e997d0a48bf668be5332656d2398ec6f9611a50b9101e716d7f2c9\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol\\":{\\"keccak256\\":\\"0x85d20b0a45fa97f06a09bb0f5fa2699839ad651a6aaa66ec4e2b807173bda6c5\\",\\"urls\\":[\\"bzzr://2a4d99d8211f5ad682106c277cc6ec82f93341714d79ccc966c1211e3d7e184c\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol\\":{\\"keccak256\\":\\"0xa51a72e8404dbd12f291f205b02b0e9f5ecb505d78c38bc1b86bedb2257b7a28\\",\\"urls\\":[\\"bzzr://9f7f4cc58ebec18084bc7f0ce09692f6f132ab0e0c703fc09bdabec913736fda\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol\\":{\\"keccak256\\":\\"0xaba87ac6cd834c8a356a454c9eeca6373a159c772e70c2d444facb024907f087\\",\\"urls\\":[\\"bzzr://e8c6d14b96f76d84c547c841b61e0df7a87fdb3f099621cafbe70f45c79cbf05\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol\\":{\\"keccak256\\":\\"0xc9bd3a53a57a95af1958676186382951d915ec96f46a3db61164eb8d0298556e\\",\\"urls\\":[\\"bzzr://128fe282e7acd0f113926aaba8983c8fadaaab7c7060f23282d67a68a2c44b7d\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol\\":{\\"keccak256\\":\\"0xa024ae15d1fddc2e1fdd568fa4b30491b686a925f201c4505f8c8aff6899fda6\\",\\"urls\\":[\\"bzzr://ef337efb647966a0e6691af7187f20c2091a9635945052cf2c57acaf6e0c27ee\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol\\":{\\"keccak256\\":\\"0x4e00d7b1cd34e5f91b51a6d6cff4af44221cda6b193ce91e76f71a838fa889f1\\",\\"urls\\":[\\"bzzr://215fe7b649e59d98e2bb8c94efe38336b3364ea428f69fb2871b5896f65432be\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol\\":{\\"keccak256\\":\\"0x25db17fd54bb2af9042bc8f9adf88a3285302c2624f59b78917582c33b2e9623\\",\\"urls\\":[\\"bzzr://12e7f93b1675b8d365718926c362674ea9e85ddd0701e6f3fafd04b8176114d5\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol\\":{\\"keccak256\\":\\"0xe918c3a32ffaa3be9a2ca32e0c156fa13f45df3a180b4afb966ed74beac68aee\\",\\"urls\\":[\\"bzzr://4cf87b0dd13996acd984d0964bef0de24f9f5b8a7f9c181ac6fcb2cdf04b2e38\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol\\":{\\"keccak256\\":\\"0xe21e3ce303a61dc1fe7e5ee8c77c94b0a96eaa9015f8abe6eb1fbce2d903b8ee\\",\\"urls\\":[\\"bzzr://ff90e3a82eb6fb10497c419d71bf240f43c544d0071b74b251204200dc08bba1\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Base64.sol\\":{\\"keccak256\\":\\"0x6b6fca483b4fd19ab6f282b45b24f02277ad2b0e2e65269c1f1f9b0672bf8ef3\\",\\"urls\\":[\\"bzzr://227cecb0afb5c808a338d0c757cedf9c085786a8f74fece5d9b14fac332f1301\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Bytes.sol\\":{\\"keccak256\\":\\"0xa9504cd72371444aaec522d40e02f930e9017fc59059c80b4d0b60afe6d3f151\\",\\"urls\\":[\\"bzzr://09e35d59d1fd6c478388e098f8f586d0eb3004af0e8402e5dc0c003b3d555e56\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Memory.sol\\":{\\"keccak256\\":\\"0xbb69933fc38ebf561a60fc4496c8d48f4aef12b5cef49bb9dd2957d8c6478ce0\\",\\"urls\\":[\\"bzzr://a4b1117bcf978aebba7df92a10df9e866cf854033bc2f4d8e426e360ba78d1fa\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol\\":{\\"keccak256\\":\\"0x171f88dc2ce91d601aa659bf84a240a2e7565d26d1a3ef1a0f98ec8181573498\\",\\"urls\\":[\\"bzzr://3830487ad541d0a7df9b761dee0a835cf065e369c6f1b2ac5f8409413f1777b6\\"]},\\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\":{\\"keccak256\\":\\"0xb48974d92a87053dc1d6c5389f3d1b2ad522dec23afcb508eaa935d98dfdc0b6\\",\\"urls\\":[\\"bzzr://e665a84309432c27a26e622665dd97ff29d4d6ad7ad655d6e2c50226a5e99b56\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]}},\\"version\\":1}","bytecode":"0x60806040523480156200001157600080fd5b506040516060806200492583398101806040526200003391908101906200009b565b600080546001600160a01b039485166001600160a01b031991821617909155600191825560c86002556003805493909416921691909117909155601e819055601f5562000129565b8051620000888162000104565b92915050565b805162000088816200011e565b600080600060608486031215620000b157600080fd5b6000620000bf86866200007b565b9350506020620000d2868287016200007b565b9250506040620000e5868287016200008e565b9150509250925092565b60006001600160a01b03821662000088565b90565b6200010f81620000ef565b81146200011b57600080fd5b50565b6200010f8162000101565b6147ec80620001396000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80639836ca311161010f578063c011b1c3116100a2578063d855a57911610071578063d855a57914610454578063df4da46114610469578063ee6dcef914610471578063f9a9b7ae14610484576101e5565b8063c011b1c3146103fb578063c652b9191461041b578063ca2af5f21461042e578063cbbc061d14610441576101e5565b8063b34e97e8116100de578063b34e97e8146103ba578063b5c14992146103c2578063b695ca7a146103d5578063ba252688146103e8576101e5565b80639836ca3114610342578063a0c3998214610365578063a153ec6014610386578063a3bdae3e14610399576101e5565b806350946a9f116101875780637624281e116101565780637624281e146102dc578063786cd4d7146102fc5780638e055b8b1461030f5780638ed0573714610322576101e5565b806350946a9f1461028a578063550baa2f1461029d57806370266a47146102b257806375bbf75b146102c7576101e5565b80632e1a7d4d116101c35780632e1a7d4d1461023e578063365a2cb31461025157806347e7ef241461026457806348cc376114610277576101e5565b806316f9a2a4146101ea5780631d40ff0b146102145780631f3c99c314610234575b600080fd5b6101fd6101f83660046132ef565b610497565b60405161020b929190614114565b60405180910390f35b610227610222366004613628565b610531565b60405161020b9190614103565b61023c6105d0565b005b61023c61024c3660046132ef565b610829565b61023c61025f36600461330d565b610b70565b61023c610272366004613155565b610e1c565b61023c61028536600461330d565b61103d565b61023c6102983660046136ca565b6112ab565b6102a5611505565b60405161020b9190614139565b6102ba611560565b60405161020b919061414a565b6102cf61167a565b60405161020b91906145c3565b6102ef6102ea3660046132ef565b61170c565b60405161020b9190614230565b61023c61030a3660046130da565b6117d3565b6102a561031d366004613628565b611897565b6103356103303660046132ef565b61192d565b60405161020b9190614581565b6103556103503660046132ef565b611a6d565b60405161020b94939291906145d1565b610378610373366004613063565b611b10565b60405161020b9291906140e3565b61023c610394366004613477565b611d53565b6103ac6103a7366004613063565b611ff2565b60405161020b9291906140c3565b61023c612274565b6102cf6103d036600461358f565b6124e0565b61023c6103e336600461324a565b61256f565b61023c6103f63660046134e3565b6125b2565b61040e610409366004613063565b6125f5565b60405161020b9190614592565b61023c610429366004613527565b6127a6565b61023c61043c3660046133eb565b6127eb565b6102cf61044f3660046132ef565b612a8d565b61045c612b1c565b60405161020b91906140b5565b6102cf612b38565b61023c61047f3660046132ef565b612b3e565b6102cf610492366004613063565b612bbf565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b81526004016104d492919061433b565b60006040518083038186803b1580156104ec57600080fd5b505af4158015610500573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052891908101906131b9565b91509150915091565b604051600160e11b635deadfbd02815260609073__WorkersImpl___________________________9063bbd5bf7a90610573906000908790879060040161452c565b60006040518083038186803b15801561058b57600080fd5b505af415801561059f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105c79190810190613185565b90505b92915050565b336105d9612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561062157fe5b600281111561062c57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106c95780601f1061069e576101008083540402835291602001916106c9565b820191906000526020600020905b8154815290600101906020018083116106ac57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561077457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561074257fe5b600381111561074d57fe5b81526020016001820154815260200160028201548152505081526020019060010190610701565b505050915250909150600190508160200151600281111561079157fe5b146107ba57604051600160e51b62461bcd0281526004016107b1906141f0565b60405180910390fd5b604051600160e01b6349e44f4902815273__WorkersImpl___________________________906349e44f49906107f590600090600401614241565b60006040518083038186803b15801561080d57600080fd5b505af4158015610821573d6000803e3d6000fd5b505050505050565b33610832612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561087a57fe5b600281111561088557fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109225780601f106108f757610100808354040283529160200191610922565b820191906000526020600020905b81548152906001019060200180831161090557829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156109cd57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561099b57fe5b60038111156109a657fe5b8152602001600182015481526020016002820154815250508152602001906001019061095a565b50505091525090915060029050816020015160028111156109ea57fe5b14610a0a57604051600160e51b62461bcd0281526004016107b190614220565b610a12612c0a565b604051600160e21b6328de336102815273__WorkersImpl___________________________9063a378cd8490610a4e90859043906004016145a3565b60606040518083038186803b158015610a6657600080fd5b505af4158015610a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a9e91908101906135ec565b9050600281516003811115610aaf57fe5b14610acf57604051600160e51b62461bcd0281526004016107b1906141a0565b8060200151610add43612a8d565b11610afd57604051600160e51b62461bcd0281526004016107b1906141e0565b604051600160e21b632fdb7d1902815273__WorkersImpl___________________________9063bf6df46490610b3a90600090889060040161433b565b60006040518083038186803b158015610b5257600080fd5b505af4158015610b66573d6000803e3d6000fd5b5050505050505050565b33610b79612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610bc157fe5b6002811115610bcc57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c695780601f10610c3e57610100808354040283529160200191610c69565b820191906000526020600020905b815481529060010190602001808311610c4c57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610d1457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610ce257fe5b6003811115610ced57fe5b81526020016001820154815260200160028201548152505081526020019060010190610ca1565b5050509152509091506001905081602001516002811115610d3157fe5b14610d5157604051600160e51b62461bcd0281526004016107b1906141f0565b8960016000828152601c602052604090206004015460ff166001811115610d7457fe5b14610d9457604051600160e51b62461bcd0281526004016107b1906141b0565b604051600160e01b632def3b6902815273__TaskImpl______________________________90632def3b6990610ddf906000908f908f908f908f908f908f908f908f90600401614356565b60006040518083038186803b158015610df757600080fd5b505af4158015610e0b573d6000803e3d6000fd5b505050505050505050505050505050565b81610e25612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610e6d57fe5b6002811115610e7857fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f155780601f10610eea57610100808354040283529160200191610f15565b820191906000526020600020905b815481529060010190602001808311610ef857829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610fc057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610f8e57fe5b6003811115610f9957fe5b81526020016001820154815260200160028201548152505081526020019060010190610f4d565b5050509152509091506000905081602001516002811115610fdd57fe5b1415610ffe57604051600160e51b62461bcd0281526004016107b190614200565b604051600160e21b630e80483102815273__WorkersImpl___________________________90633a0120c490610b3a90600090889088906004016142bc565b33611046612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561108e57fe5b600281111561109957fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111365780601f1061110b57610100808354040283529160200191611136565b820191906000526020600020905b81548152906001019060200180831161111957829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156111e157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156111af57fe5b60038111156111ba57fe5b8152602001600182015481526020016002820154815250508152602001906001019061116e565b50505091525090915060019050816020015160028111156111fe57fe5b1461121e57604051600160e51b62461bcd0281526004016107b1906141f0565b89600080828152601c602052604090206004015460ff16600181111561124057fe5b1461126057604051600160e51b62461bcd0281526004016107b190614210565b604051600160e01b63b36d042b02815273__TaskImpl______________________________9063b36d042b90610ddf906000908f908f908f908f908f908f908f908f90600401614356565b336112b4612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156112fc57fe5b600281111561130757fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113a45780601f10611379576101008083540402835291602001916113a4565b820191906000526020600020905b81548152906001019060200180831161138757829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561144f57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561141d57fe5b600381111561142857fe5b815260200160018201548152602001600282015481525050815260200190600101906113dc565b505050915250909150600090508160200151600281111561146c57fe5b141561148d57604051600160e51b62461bcd0281526004016107b190614200565b604051600160e31b63184e876302815273__PrincipalImpl_________________________9063c2743b18906114ce90600090899089908990600401614547565b60006040518083038186803b1580156114e657600080fd5b505af41580156114fa573d6000803e3d6000fd5b505050505050505050565b6060600060190180548060200260200160405190810160405280929190818152602001828054801561155657602002820191906000526020600020905b815481526020019060010190808311611542575b5050505050905090565b611568612c2c565b6040805160a08101909152600460056000835b828210156116715783826004020160405180608001604052908160008201548152602001600182018054806020026020016040519081016040528092919081815260200182805480156115f757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116115d9575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561164f57602002820191906000526020600020905b81548152602001906001019080831161163b575b505050505081526020016003820154815250508152602001906001019061157b565b50505050905090565b604051600160e11b6302b519c302815260009073__SecretContractImpl____________________9063056a3386906116b7908490600401614241565b60206040518083038186803b1580156116cf57600080fd5b505af41580156116e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611707919081019061360a565b905090565b611714612c5a565b6000828152601c6020908152604091829020825160a08101845281546001600160a01b03168152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561179c57602002820191906000526020600020905b815481526020019060010190808311611788575b5050509183525050600482015460209091019060ff1660018111156117bd57fe5b60018111156117c857fe5b90525090505b919050565b8260005b60185481101561185557816001600160a01b03166000601a01600080601801848154811061180157fe5b60009182526020808320909101546001600160a01b03908116845290830193909352604090910190205416141561184d57604051600160e51b62461bcd0281526004016107b190614190565b6001016117d7565b50604051600160e51b63063e88f102815273__WorkersImpl___________________________9063c7d11e2090610b3a90600090889088908890600401614271565b604051600160e01b63e5a2600902815260609073__SecretContractImpl____________________9063e5a26009906118d9906000908790879060040161452c565b60006040518083038186803b1580156118f157600080fd5b505af4158015611905573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105c79190810190613216565b611935612c85565b6000828152601b602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101549282019290925260038201546001600160401b03808216606084015268010000000000000000909104166080820152600482015460a082015260058083015491929160c084019160ff909116908111156119c457fe5b60058111156119cf57fe5b815260068201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611a5d5780601f10611a3257610100808354040283529160200191611a5d565b820191906000526020600020905b815481529060010190602001808311611a4057829003601f168201915b5050505050815250509050919050565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611aad92919061433b565b60006040518083038186803b158015611ac557600080fd5b505af4158015611ad9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b019190810190613647565b93509350935093509193509193565b6000611b1a612bda565b6000611b24612bda565b60005b601854811015611d485760188054601a9160009184908110611b4557fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b909104166002811115611b9b57fe5b6002811115611ba657fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c435780601f10611c1857610100808354040283529160200191611c43565b820191906000526020600020905b815481529060010190602001808311611c2657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611cee57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611cbc57fe5b6003811115611cc757fe5b81526020016001820154815260200160028201548152505081526020019060010190611c7b565b50505050815250509150856001600160a01b031682600001516001600160a01b03161415611d40576018805482908110611d2457fe5b6000918252602090912001546001600160a01b03169250611d48565b600101611b27565b509092509050915091565b33611d5c612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115611da457fe5b6002811115611daf57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e4c5780601f10611e2157610100808354040283529160200191611e4c565b820191906000526020600020905b815481529060010190602001808311611e2f57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611ef757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611ec557fe5b6003811115611ed057fe5b81526020016001820154815260200160028201548152505081526020019060010190611e84565b5050509152509091506001905081602001516002811115611f1457fe5b14611f3457604051600160e51b62461bcd0281526004016107b1906141f0565b85600080828152601c602052604090206004015460ff166001811115611f5657fe5b14611f7657604051600160e51b62461bcd0281526004016107b190614210565b604051600160e21b6301c7aeeb02815273__TaskImpl______________________________9063071ebbac90611fb9906000908b908b908b908b90600401614449565b60006040518083038186803b158015611fd157600080fd5b505af4158015611fe5573d6000803e3d6000fd5b5050505050505050505050565b6000606082611fff612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561204757fe5b600281111561205257fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120ef5780601f106120c4576101008083540402835291602001916120ef565b820191906000526020600020905b8154815290600101906020018083116120d257829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561219a57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561216857fe5b600381111561217357fe5b81526020016001820154815260200160028201548152505081526020019060010190612127565b50505091525090915060009050816020015160028111156121b757fe5b14156121d857604051600160e51b62461bcd0281526004016107b190614200565b604051600160e01b632f68f03102815273__WorkersImpl___________________________90632f68f0319061221590600090899060040161424f565b60006040518083038186803b15801561222d57600080fd5b505af4158015612241573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526122699190810190613089565b935093505050915091565b3361227d612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156122c557fe5b60028111156122d057fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561236d5780601f106123425761010080835404028352916020019161236d565b820191906000526020600020905b81548152906001019060200180831161235057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561241857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156123e657fe5b60038111156123f157fe5b815260200160018201548152602001600282015481525050815260200190600101906123a5565b5050505081525050905061242b43612a8d565b61244a57604051600160e51b62461bcd0281526004016107b1906141d0565b60028160200151600281111561245c57fe5b1461247c57604051600160e51b62461bcd0281526004016107b190614220565b601e54606082015110156124a557604051600160e51b62461bcd0281526004016107b190614180565b604051600160e11b6318a8dc7102815273__WorkersImpl___________________________90633151b8e2906107f590600090600401614241565b604051600160e31b6312c8c46d02815260009073__WorkersImpl___________________________9063964623689061251f908690869060040161415b565b60206040518083038186803b15801561253757600080fd5b505af415801561254b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105c7919081019061360a565b604051600160e01b63512e7a1702815273__TaskImpl______________________________9063512e7a1790610b3a9060009088908890889088906004016142e4565b604051600160e01b638c91056d02815273__TaskImpl______________________________90638c91056d90610b3a90600090889088908890889060040161449b565b6125fd612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561264557fe5b600281111561265057fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126ed5780601f106126c2576101008083540402835291602001916126ed565b820191906000526020600020905b8154815290600101906020018083116126d057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561279857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561276657fe5b600381111561277157fe5b81526020016001820154815260200160028201548152505081526020019060010190612725565b505050915250909392505050565b604051600160e01b6366e13f4302815273__TaskImpl______________________________906366e13f43906114ce90600090899089908990899089906004016144dd565b336127f4612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561283c57fe5b600281111561284757fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128e45780601f106128b9576101008083540402835291602001916128e4565b820191906000526020600020905b8154815290600101906020018083116128c757829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561298f57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561295d57fe5b600381111561296857fe5b8152602001600182015481526020016002820154815250508152602001906001019061291c565b50505091525090915060019050816020015160028111156129ac57fe5b146129cc57604051600160e51b62461bcd0281526004016107b1906141f0565b8660016000828152601c602052604090206004015460ff1660018111156129ef57fe5b14612a0f57604051600160e51b62461bcd0281526004016107b1906141b0565b604051600160e61b6289b28102815273__TaskImpl______________________________9063226ca04090612a53906000908c908c908c908c908c906004016143e9565b60006040518083038186803b158015612a6b57600080fd5b505af4158015612a7f573d6000803e3d6000fd5b505050505050505050505050565b604051600160e31b6304d5c11302815260009073__WorkersImpl___________________________906326ae089890612acc908490869060040161433b565b60206040518083038186803b158015612ae457600080fd5b505af4158015612af8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105ca919081019061360a565b336000908152601a60205260409020546001600160a01b031690565b60015490565b8060016000828152601b6020526040902060059081015460ff1690811115612b6257fe5b14612b8257604051600160e51b62461bcd0281526004016107b1906141c0565b604051600160e01b631c9a715b02815273__TaskImpl______________________________90631c9a715b906107f590600090869060040161433b565b6001600160a01b03166000908152601d602052604090205490565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b6040518061028001604052806005905b612c44612cca565b815260200190600190039081612c3c5790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b80356105ca8161477f565b80516105ca8161477f565b600082601f830112612d1957600080fd5b8151612d2c612d2782614638565b614612565b91508181835260208401935060208101905083856020840282011115612d5157600080fd5b60005b83811015612d7d5781612d678882612cfd565b8452506020928301929190910190600101612d54565b5050505092915050565b600082601f830112612d9857600080fd5b8135612da6612d2782614638565b91508181835260208401935060208101905083856020840282011115612dcb57600080fd5b60005b83811015612d7d5781612de18882612f47565b8452506020928301929190910190600101612dce565b600082601f830112612e0857600080fd5b8151612e16612d2782614638565b91508181835260208401935060208101905083856020840282011115612e3b57600080fd5b60005b83811015612d7d5781612e518882612f52565b8452506020928301929190910190600101612e3e565b600082601f830112612e7857600080fd5b8151612e86612d2782614638565b91508181835260208401935060208101905083856020840282011115612eab57600080fd5b60005b83811015612d7d5781612ec18882612f52565b8452506020928301929190910190600101612eae565b600082601f830112612ee857600080fd5b8135612ef6612d2782614638565b91508181835260208401935060208101905083856020840282011115612f1b57600080fd5b60005b83811015612d7d5781612f318882613058565b8452506020928301929190910190600101612f1e565b80356105ca81614793565b80516105ca81614793565b600082601f830112612f6e57600080fd5b8135612f7c612d2782614658565b91508082526020830160208301858383011115612f9857600080fd5b612fa3838284614712565b50505092915050565b600082601f830112612fbd57600080fd5b8151612fcb612d2782614658565b91508082526020830160208301858383011115612fe757600080fd5b612fa383828461471e565b80516105ca8161479c565b60006060828403121561300f57600080fd5b6130196060614612565b905060006130278484612ff2565b825250602061303884848301612f52565b602083015250604061304c84828501612f52565b60408301525092915050565b80356105ca816147a9565b60006020828403121561307557600080fd5b60006130818484612cf2565b949350505050565b6000806040838503121561309c57600080fd5b60006130a88585612cfd565b92505060208301516001600160401b038111156130c457600080fd5b6130d085828601612fac565b9150509250929050565b6000806000606084860312156130ef57600080fd5b60006130fb8686612cf2565b93505060208401356001600160401b0381111561311757600080fd5b61312386828701612f5d565b92505060408401356001600160401b0381111561313f57600080fd5b61314b86828701612f5d565b9150509250925092565b6000806040838503121561316857600080fd5b60006131748585612cf2565b92505060206130d085828601612f47565b60006020828403121561319757600080fd5b81516001600160401b038111156131ad57600080fd5b61308184828501612d08565b600080604083850312156131cc57600080fd5b82516001600160401b038111156131e257600080fd5b6131ee85828601612d08565b92505060208301516001600160401b0381111561320a57600080fd5b6130d085828601612e67565b60006020828403121561322857600080fd5b81516001600160401b0381111561323e57600080fd5b61308184828501612df7565b6000806000806080858703121561326057600080fd5b84356001600160401b0381111561327657600080fd5b61328287828801612d87565b94505060208501356001600160401b0381111561329e57600080fd5b6132aa87828801612ed7565b93505060408501356001600160401b038111156132c657600080fd5b6132d287828801612ed7565b92505060606132e387828801612f47565b91505092959194509250565b60006020828403121561330157600080fd5b60006130818484612f47565b600080600080600080600080610100898b03121561332a57600080fd5b60006133368b8b612f47565b98505060206133478b828c01612f47565b97505060406133588b828c01612f47565b96505060606133698b828c01612f47565b95505060808901356001600160401b0381111561338557600080fd5b6133918b828c01612f5d565b94505060a06133a28b828c01612cf2565b93505060c06133b38b828c01613058565b92505060e08901356001600160401b038111156133cf57600080fd5b6133db8b828c01612f5d565b9150509295985092959890939650565b600080600080600060a0868803121561340357600080fd5b600061340f8888612f47565b955050602061342088828901612f47565b945050604061343188828901612f47565b935050606061344288828901613058565b92505060808601356001600160401b0381111561345e57600080fd5b61346a88828901612f5d565b9150509295509295909350565b6000806000806080858703121561348d57600080fd5b60006134998787612f47565b94505060206134aa87828801612f47565b93505060406134bb87828801613058565b92505060608501356001600160401b038111156134d757600080fd5b6132e387828801612f5d565b600080600080608085870312156134f957600080fd5b60006135058787612f47565b945050602061351687828801613058565b93505060406132d287828801613058565b600080600080600060a0868803121561353f57600080fd5b600061354b8888612f47565b955050602061355c88828901613058565b945050604061356d88828901613058565b935050606061357e88828901612f47565b925050608061346a88828901612f47565b600080604083850312156135a257600080fd5b82356001600160401b038111156135b857600080fd5b6135c485828601612f5d565b92505060208301356001600160401b038111156135e057600080fd5b6130d085828601612f5d565b6000606082840312156135fe57600080fd5b60006130818484612ffd565b60006020828403121561361c57600080fd5b60006130818484612f52565b6000806040838503121561363b57600080fd5b60006131748585612f47565b6000806000806080858703121561365d57600080fd5b60006136698787612f52565b945050602061367a87828801612f52565b93505060408501516001600160401b0381111561369657600080fd5b6136a287828801612d08565b92505060608501516001600160401b038111156136be57600080fd5b6132e387828801612e67565b6000806000606084860312156136df57600080fd5b60006136eb8686612f47565b935050602061312386828701612f47565b60006137088383613748565b505060200190565b60006137088383613adc565b60006137288383613f3c565b505060600190565b60006105c78383614051565b600061370883836140ac565b6137518161469b565b82525050565b600061376282614688565b61376c8185614692565b93506137778361467f565b8060005b838110156137a557815161378f88826136fc565b975061379a8361467f565b92505060010161377b565b509495945050505050565b60006137bb82614688565b6137c58185614692565b93506137d08361467f565b8060005b838110156137a55781516137e888826136fc565b97506137f38361467f565b9250506001016137d4565b600061380982614688565b6138138185614692565b935061381e8361467f565b8060005b838110156137a55781516138368882613710565b97506138418361467f565b925050600101613822565b600061385782614688565b6138618185614692565b935061386c8361467f565b8060005b838110156137a55781516138848882613710565b975061388f8361467f565b925050600101613870565b60006138a582614688565b6138af8185614692565b93506138ba8361467f565b8060005b838110156137a55781516138d28882613710565b97506138dd8361467f565b9250506001016138be565b60006138f382614688565b6138fd8185614692565b93506139088361467f565b8060005b838110156137a5578151613920888261371c565b975061392b8361467f565b92505060010161390c565b600061394182614688565b61394b8185614692565b93506139568361467f565b8060005b838110156137a557815161396e888261371c565b97506139798361467f565b92505060010161395a565b600061398f8261468c565b61399981856117ce565b9350836020820285016139ab85614685565b8060005b858110156139e557848403895281516139c88582613730565b94506139d38361467f565b60209a909a01999250506001016139af565b5091979650505050505050565b60006139fd82614688565b613a078185614692565b9350613a128361467f565b8060005b838110156137a5578151613a2a8882613710565b9750613a358361467f565b925050600101613a16565b6000613a4b82614688565b613a558185614692565b9350613a608361467f565b8060005b838110156137a5578151613a788882613710565b9750613a838361467f565b925050600101613a64565b6000613a9982614688565b613aa38185614692565b9350613aae8361467f565b8060005b838110156137a5578151613ac6888261373c565b9750613ad18361467f565b925050600101613ab2565b61375181614685565b6000613af082614688565b613afa8185614692565b9350613b0a81856020860161471e565b613b138161474a565b9093019392505050565b613751816146e6565b613751816146f1565b613751816146fc565b61375181614707565b6000613b4e602283614692565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152600160f21b611b9d02602082015260400192915050565b6000613b95601883614692565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b6000613bce602783614692565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152600160c81b667574207479706502602082015260400192915050565b6000613c1a601c83614692565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b6000613c53601383614692565b7f5461736b206973206e6f742077616974696e6700000000000000000000000000815260200192915050565b6000613c8c602783614692565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152600160ca1b661a585b1a5e995902602082015260400192915050565b6000613cd8602e83614692565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381527f206c6f67206f7574206576656e74000000000000000000000000000000000000602082015260400192915050565b6000613d37601483614692565b7f576f726b6572206e6f74206c6f6767656420696e000000000000000000000000815260200192915050565b6000613d70601383614692565b7f556e7265676973746572656420776f726b657200000000000000000000000000815260200192915050565b6000613da9602083614692565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000613de2602783614692565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f678152600160ca1b6619d959081bdd5d02602082015260400192915050565b805160009060a0840190613e358582613748565b506020830151613e486020860182613adc565b506040830151613e5b6040860182613adc565b5060608301518482036060860152613e73828261389a565b9150506080830151613e886080860182613b1d565b509392505050565b9052565b8051600090610100840190613ea98582613748565b506020830151613ebc6020860182613adc565b506040830151613ecf6040860182613adc565b506060830151613ee260608601826140ac565b506080830151613ef560808601826140ac565b5060a0830151613f0860a0860182613adc565b5060c0830151613f1b60c0860182613b26565b5060e083015184820360e0860152613f338282613ae5565b95945050505050565b80516060830190613f4d8482613b2f565b506020820151613f606020850182613adc565b506040820151613f736040850182613adc565b50505050565b805160009060a0840190613f8d8582613748565b506020830151613fa06020860182613b38565b5060408301518482036040860152613fb88282613ae5565b9150506060830151613fcd6060860182613adc565b5060808301518482036080860152613f3382826138e8565b805160009060a0840190613ff98582613748565b50602083015161400c6020860182613b38565b50604083015184820360408601526140248282613ae5565b91505060608301516140396060860182613adc565b5060808301518482036080860152613f338282613936565b805160009060808401906140658582613adc565b506020830151848203602086015261407d82826137b0565b915050604083015184820360408601526140978282613a40565b9150506060830151613e886060860182613adc565b613751816146da565b602081016105ca8284613748565b604081016140d18285613748565b81810360208301526130818184613ae5565b604081016140f18285613748565b81810360208301526130818184613f79565b602080825281016105c78184613757565b604080825281016141258185613757565b9050818103602083015261308181846139f2565b602080825281016105c781846137fe565b602080825281016105c78184613984565b6040808252810161416c8185613ae5565b905081810360208301526130818184613ae5565b602080825281016105ca81613b41565b602080825281016105ca81613b88565b602080825281016105ca81613bc1565b602080825281016105ca81613c0d565b602080825281016105ca81613c46565b602080825281016105ca81613c7f565b602080825281016105ca81613ccb565b602080825281016105ca81613d2a565b602080825281016105ca81613d63565b602080825281016105ca81613d9c565b602080825281016105ca81613dd5565b602080825281016105c78184613e21565b602081016105ca8284613e90565b6040810161425d8285613e90565b61426a6020830184613748565b9392505050565b6080810161427f8287613e90565b61428c6020830186613748565b818103604083015261429e8185613ae5565b905081810360608301526142b28184613ae5565b9695505050505050565b606081016142ca8286613e90565b6142d76020830185613748565b6130816040830184613adc565b60a081016142f28288613e90565b8181036020830152614304818761384c565b905081810360408301526143188186613a8e565b9050818103606083015261432c8185613a8e565b90506142b26080830184613adc565b604081016143498285613e90565b61426a6020830184613adc565b6101208101614365828c613e90565b614372602083018b613adc565b61437f604083018a613adc565b61438c6060830189613adc565b6143996080830188613adc565b81810360a08301526143ab8187613ae5565b90506143ba60c0830186613748565b6143c760e08301856140ac565b8181036101008301526143da8184613ae5565b9b9a5050505050505050505050565b60c081016143f78289613e90565b6144046020830188613adc565b6144116040830187613adc565b61441e6060830186613adc565b61442b60808301856140ac565b81810360a083015261443d8184613ae5565b98975050505050505050565b60a081016144578288613e90565b6144646020830187613adc565b6144716040830186613adc565b61447e60608301856140ac565b81810360808301526144908184613ae5565b979650505050505050565b60a081016144a98288613e90565b6144b66020830187613adc565b6144c360408301866140ac565b6144d060608301856140ac565b6142b26080830184613adc565b60c081016144eb8289613e90565b6144f86020830188613adc565b61450560408301876140ac565b61451260608301866140ac565b61451f6080830185613adc565b61449060a0830184613adc565b6060810161453a8286613e90565b6142d76020830185613adc565b608081016145558287613e90565b6145626020830186613adc565b61456f6040830185613adc565b81810360608301526142b28184613ae5565b602080825281016105c78184613e94565b602080825281016105c78184613f79565b604080825281016145b48185613fe5565b905061426a6020830184613adc565b602081016105ca8284613adc565b608081016145df8287613adc565b6145ec6020830186613adc565b81810360408301526145fe8185613757565b905081810360608301526142b281846139f2565b6040518181016001600160401b038111828210171561463057600080fd5b604052919050565b60006001600160401b0382111561464e57600080fd5b5060209081020190565b60006001600160401b0382111561466e57600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600590565b90815260200190565b60006105ca826146ce565b806117ce81614754565b806117ce81614761565b806117ce8161476b565b806117ce81614775565b6001600160a01b031690565b6001600160401b031690565b60006105ca826146a6565b60006105ca826146b0565b60006105ca826146ba565b60006105ca826146c4565b82818337506000910152565b60005b83811015614739578181015183820152602001614721565b83811115613f735750506000910152565b601f01601f191690565b6002811061475e57fe5b50565b6006811061475e57fe5b6004811061475e57fe5b6003811061475e57fe5b6147888161469b565b811461475e57600080fd5b61478881614685565b6004811061475e57600080fd5b614788816146da56fea265627a7a7230582043e51993fe2420863b95d6ebc5f5594e4efa083f0d6dffac13a20bd26af0637e6c6578706572696d656e74616cf50037","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80639836ca311161010f578063c011b1c3116100a2578063d855a57911610071578063d855a57914610454578063df4da46114610469578063ee6dcef914610471578063f9a9b7ae14610484576101e5565b8063c011b1c3146103fb578063c652b9191461041b578063ca2af5f21461042e578063cbbc061d14610441576101e5565b8063b34e97e8116100de578063b34e97e8146103ba578063b5c14992146103c2578063b695ca7a146103d5578063ba252688146103e8576101e5565b80639836ca3114610342578063a0c3998214610365578063a153ec6014610386578063a3bdae3e14610399576101e5565b806350946a9f116101875780637624281e116101565780637624281e146102dc578063786cd4d7146102fc5780638e055b8b1461030f5780638ed0573714610322576101e5565b806350946a9f1461028a578063550baa2f1461029d57806370266a47146102b257806375bbf75b146102c7576101e5565b80632e1a7d4d116101c35780632e1a7d4d1461023e578063365a2cb31461025157806347e7ef241461026457806348cc376114610277576101e5565b806316f9a2a4146101ea5780631d40ff0b146102145780631f3c99c314610234575b600080fd5b6101fd6101f83660046132ef565b610497565b60405161020b929190614114565b60405180910390f35b610227610222366004613628565b610531565b60405161020b9190614103565b61023c6105d0565b005b61023c61024c3660046132ef565b610829565b61023c61025f36600461330d565b610b70565b61023c610272366004613155565b610e1c565b61023c61028536600461330d565b61103d565b61023c6102983660046136ca565b6112ab565b6102a5611505565b60405161020b9190614139565b6102ba611560565b60405161020b919061414a565b6102cf61167a565b60405161020b91906145c3565b6102ef6102ea3660046132ef565b61170c565b60405161020b9190614230565b61023c61030a3660046130da565b6117d3565b6102a561031d366004613628565b611897565b6103356103303660046132ef565b61192d565b60405161020b9190614581565b6103556103503660046132ef565b611a6d565b60405161020b94939291906145d1565b610378610373366004613063565b611b10565b60405161020b9291906140e3565b61023c610394366004613477565b611d53565b6103ac6103a7366004613063565b611ff2565b60405161020b9291906140c3565b61023c612274565b6102cf6103d036600461358f565b6124e0565b61023c6103e336600461324a565b61256f565b61023c6103f63660046134e3565b6125b2565b61040e610409366004613063565b6125f5565b60405161020b9190614592565b61023c610429366004613527565b6127a6565b61023c61043c3660046133eb565b6127eb565b6102cf61044f3660046132ef565b612a8d565b61045c612b1c565b60405161020b91906140b5565b6102cf612b38565b61023c61047f3660046132ef565b612b3e565b6102cf610492366004613063565b612bbf565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b81526004016104d492919061433b565b60006040518083038186803b1580156104ec57600080fd5b505af4158015610500573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052891908101906131b9565b91509150915091565b604051600160e11b635deadfbd02815260609073__WorkersImpl___________________________9063bbd5bf7a90610573906000908790879060040161452c565b60006040518083038186803b15801561058b57600080fd5b505af415801561059f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105c79190810190613185565b90505b92915050565b336105d9612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561062157fe5b600281111561062c57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106c95780601f1061069e576101008083540402835291602001916106c9565b820191906000526020600020905b8154815290600101906020018083116106ac57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561077457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561074257fe5b600381111561074d57fe5b81526020016001820154815260200160028201548152505081526020019060010190610701565b505050915250909150600190508160200151600281111561079157fe5b146107ba57604051600160e51b62461bcd0281526004016107b1906141f0565b60405180910390fd5b604051600160e01b6349e44f4902815273__WorkersImpl___________________________906349e44f49906107f590600090600401614241565b60006040518083038186803b15801561080d57600080fd5b505af4158015610821573d6000803e3d6000fd5b505050505050565b33610832612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561087a57fe5b600281111561088557fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109225780601f106108f757610100808354040283529160200191610922565b820191906000526020600020905b81548152906001019060200180831161090557829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156109cd57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561099b57fe5b60038111156109a657fe5b8152602001600182015481526020016002820154815250508152602001906001019061095a565b50505091525090915060029050816020015160028111156109ea57fe5b14610a0a57604051600160e51b62461bcd0281526004016107b190614220565b610a12612c0a565b604051600160e21b6328de336102815273__WorkersImpl___________________________9063a378cd8490610a4e90859043906004016145a3565b60606040518083038186803b158015610a6657600080fd5b505af4158015610a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a9e91908101906135ec565b9050600281516003811115610aaf57fe5b14610acf57604051600160e51b62461bcd0281526004016107b1906141a0565b8060200151610add43612a8d565b11610afd57604051600160e51b62461bcd0281526004016107b1906141e0565b604051600160e21b632fdb7d1902815273__WorkersImpl___________________________9063bf6df46490610b3a90600090889060040161433b565b60006040518083038186803b158015610b5257600080fd5b505af4158015610b66573d6000803e3d6000fd5b5050505050505050565b33610b79612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610bc157fe5b6002811115610bcc57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c695780601f10610c3e57610100808354040283529160200191610c69565b820191906000526020600020905b815481529060010190602001808311610c4c57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610d1457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610ce257fe5b6003811115610ced57fe5b81526020016001820154815260200160028201548152505081526020019060010190610ca1565b5050509152509091506001905081602001516002811115610d3157fe5b14610d5157604051600160e51b62461bcd0281526004016107b1906141f0565b8960016000828152601c602052604090206004015460ff166001811115610d7457fe5b14610d9457604051600160e51b62461bcd0281526004016107b1906141b0565b604051600160e01b632def3b6902815273__TaskImpl______________________________90632def3b6990610ddf906000908f908f908f908f908f908f908f908f90600401614356565b60006040518083038186803b158015610df757600080fd5b505af4158015610e0b573d6000803e3d6000fd5b505050505050505050505050505050565b81610e25612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610e6d57fe5b6002811115610e7857fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f155780601f10610eea57610100808354040283529160200191610f15565b820191906000526020600020905b815481529060010190602001808311610ef857829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610fc057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610f8e57fe5b6003811115610f9957fe5b81526020016001820154815260200160028201548152505081526020019060010190610f4d565b5050509152509091506000905081602001516002811115610fdd57fe5b1415610ffe57604051600160e51b62461bcd0281526004016107b190614200565b604051600160e21b630e80483102815273__WorkersImpl___________________________90633a0120c490610b3a90600090889088906004016142bc565b33611046612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561108e57fe5b600281111561109957fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111365780601f1061110b57610100808354040283529160200191611136565b820191906000526020600020905b81548152906001019060200180831161111957829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156111e157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156111af57fe5b60038111156111ba57fe5b8152602001600182015481526020016002820154815250508152602001906001019061116e565b50505091525090915060019050816020015160028111156111fe57fe5b1461121e57604051600160e51b62461bcd0281526004016107b1906141f0565b89600080828152601c602052604090206004015460ff16600181111561124057fe5b1461126057604051600160e51b62461bcd0281526004016107b190614210565b604051600160e01b63b36d042b02815273__TaskImpl______________________________9063b36d042b90610ddf906000908f908f908f908f908f908f908f908f90600401614356565b336112b4612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156112fc57fe5b600281111561130757fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113a45780601f10611379576101008083540402835291602001916113a4565b820191906000526020600020905b81548152906001019060200180831161138757829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561144f57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561141d57fe5b600381111561142857fe5b815260200160018201548152602001600282015481525050815260200190600101906113dc565b505050915250909150600090508160200151600281111561146c57fe5b141561148d57604051600160e51b62461bcd0281526004016107b190614200565b604051600160e31b63184e876302815273__PrincipalImpl_________________________9063c2743b18906114ce90600090899089908990600401614547565b60006040518083038186803b1580156114e657600080fd5b505af41580156114fa573d6000803e3d6000fd5b505050505050505050565b6060600060190180548060200260200160405190810160405280929190818152602001828054801561155657602002820191906000526020600020905b815481526020019060010190808311611542575b5050505050905090565b611568612c2c565b6040805160a08101909152600460056000835b828210156116715783826004020160405180608001604052908160008201548152602001600182018054806020026020016040519081016040528092919081815260200182805480156115f757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116115d9575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561164f57602002820191906000526020600020905b81548152602001906001019080831161163b575b505050505081526020016003820154815250508152602001906001019061157b565b50505050905090565b604051600160e11b6302b519c302815260009073__SecretContractImpl____________________9063056a3386906116b7908490600401614241565b60206040518083038186803b1580156116cf57600080fd5b505af41580156116e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611707919081019061360a565b905090565b611714612c5a565b6000828152601c6020908152604091829020825160a08101845281546001600160a01b03168152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561179c57602002820191906000526020600020905b815481526020019060010190808311611788575b5050509183525050600482015460209091019060ff1660018111156117bd57fe5b60018111156117c857fe5b90525090505b919050565b8260005b60185481101561185557816001600160a01b03166000601a01600080601801848154811061180157fe5b60009182526020808320909101546001600160a01b03908116845290830193909352604090910190205416141561184d57604051600160e51b62461bcd0281526004016107b190614190565b6001016117d7565b50604051600160e51b63063e88f102815273__WorkersImpl___________________________9063c7d11e2090610b3a90600090889088908890600401614271565b604051600160e01b63e5a2600902815260609073__SecretContractImpl____________________9063e5a26009906118d9906000908790879060040161452c565b60006040518083038186803b1580156118f157600080fd5b505af4158015611905573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105c79190810190613216565b611935612c85565b6000828152601b602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101549282019290925260038201546001600160401b03808216606084015268010000000000000000909104166080820152600482015460a082015260058083015491929160c084019160ff909116908111156119c457fe5b60058111156119cf57fe5b815260068201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611a5d5780601f10611a3257610100808354040283529160200191611a5d565b820191906000526020600020905b815481529060010190602001808311611a4057829003601f168201915b5050505050815250509050919050565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611aad92919061433b565b60006040518083038186803b158015611ac557600080fd5b505af4158015611ad9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b019190810190613647565b93509350935093509193509193565b6000611b1a612bda565b6000611b24612bda565b60005b601854811015611d485760188054601a9160009184908110611b4557fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b909104166002811115611b9b57fe5b6002811115611ba657fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c435780601f10611c1857610100808354040283529160200191611c43565b820191906000526020600020905b815481529060010190602001808311611c2657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611cee57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611cbc57fe5b6003811115611cc757fe5b81526020016001820154815260200160028201548152505081526020019060010190611c7b565b50505050815250509150856001600160a01b031682600001516001600160a01b03161415611d40576018805482908110611d2457fe5b6000918252602090912001546001600160a01b03169250611d48565b600101611b27565b509092509050915091565b33611d5c612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115611da457fe5b6002811115611daf57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e4c5780601f10611e2157610100808354040283529160200191611e4c565b820191906000526020600020905b815481529060010190602001808311611e2f57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611ef757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611ec557fe5b6003811115611ed057fe5b81526020016001820154815260200160028201548152505081526020019060010190611e84565b5050509152509091506001905081602001516002811115611f1457fe5b14611f3457604051600160e51b62461bcd0281526004016107b1906141f0565b85600080828152601c602052604090206004015460ff166001811115611f5657fe5b14611f7657604051600160e51b62461bcd0281526004016107b190614210565b604051600160e21b6301c7aeeb02815273__TaskImpl______________________________9063071ebbac90611fb9906000908b908b908b908b90600401614449565b60006040518083038186803b158015611fd157600080fd5b505af4158015611fe5573d6000803e3d6000fd5b5050505050505050505050565b6000606082611fff612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561204757fe5b600281111561205257fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120ef5780601f106120c4576101008083540402835291602001916120ef565b820191906000526020600020905b8154815290600101906020018083116120d257829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561219a57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561216857fe5b600381111561217357fe5b81526020016001820154815260200160028201548152505081526020019060010190612127565b50505091525090915060009050816020015160028111156121b757fe5b14156121d857604051600160e51b62461bcd0281526004016107b190614200565b604051600160e01b632f68f03102815273__WorkersImpl___________________________90632f68f0319061221590600090899060040161424f565b60006040518083038186803b15801561222d57600080fd5b505af4158015612241573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526122699190810190613089565b935093505050915091565b3361227d612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156122c557fe5b60028111156122d057fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561236d5780601f106123425761010080835404028352916020019161236d565b820191906000526020600020905b81548152906001019060200180831161235057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561241857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156123e657fe5b60038111156123f157fe5b815260200160018201548152602001600282015481525050815260200190600101906123a5565b5050505081525050905061242b43612a8d565b61244a57604051600160e51b62461bcd0281526004016107b1906141d0565b60028160200151600281111561245c57fe5b1461247c57604051600160e51b62461bcd0281526004016107b190614220565b601e54606082015110156124a557604051600160e51b62461bcd0281526004016107b190614180565b604051600160e11b6318a8dc7102815273__WorkersImpl___________________________90633151b8e2906107f590600090600401614241565b604051600160e31b6312c8c46d02815260009073__WorkersImpl___________________________9063964623689061251f908690869060040161415b565b60206040518083038186803b15801561253757600080fd5b505af415801561254b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105c7919081019061360a565b604051600160e01b63512e7a1702815273__TaskImpl______________________________9063512e7a1790610b3a9060009088908890889088906004016142e4565b604051600160e01b638c91056d02815273__TaskImpl______________________________90638c91056d90610b3a90600090889088908890889060040161449b565b6125fd612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561264557fe5b600281111561265057fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126ed5780601f106126c2576101008083540402835291602001916126ed565b820191906000526020600020905b8154815290600101906020018083116126d057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561279857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561276657fe5b600381111561277157fe5b81526020016001820154815260200160028201548152505081526020019060010190612725565b505050915250909392505050565b604051600160e01b6366e13f4302815273__TaskImpl______________________________906366e13f43906114ce90600090899089908990899089906004016144dd565b336127f4612bda565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561283c57fe5b600281111561284757fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128e45780601f106128b9576101008083540402835291602001916128e4565b820191906000526020600020905b8154815290600101906020018083116128c757829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561298f57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561295d57fe5b600381111561296857fe5b8152602001600182015481526020016002820154815250508152602001906001019061291c565b50505091525090915060019050816020015160028111156129ac57fe5b146129cc57604051600160e51b62461bcd0281526004016107b1906141f0565b8660016000828152601c602052604090206004015460ff1660018111156129ef57fe5b14612a0f57604051600160e51b62461bcd0281526004016107b1906141b0565b604051600160e61b6289b28102815273__TaskImpl______________________________9063226ca04090612a53906000908c908c908c908c908c906004016143e9565b60006040518083038186803b158015612a6b57600080fd5b505af4158015612a7f573d6000803e3d6000fd5b505050505050505050505050565b604051600160e31b6304d5c11302815260009073__WorkersImpl___________________________906326ae089890612acc908490869060040161433b565b60206040518083038186803b158015612ae457600080fd5b505af4158015612af8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105ca919081019061360a565b336000908152601a60205260409020546001600160a01b031690565b60015490565b8060016000828152601b6020526040902060059081015460ff1690811115612b6257fe5b14612b8257604051600160e51b62461bcd0281526004016107b1906141c0565b604051600160e01b631c9a715b02815273__TaskImpl______________________________90631c9a715b906107f590600090869060040161433b565b6001600160a01b03166000908152601d602052604090205490565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b6040518061028001604052806005905b612c44612cca565b815260200190600190039081612c3c5790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b80356105ca8161477f565b80516105ca8161477f565b600082601f830112612d1957600080fd5b8151612d2c612d2782614638565b614612565b91508181835260208401935060208101905083856020840282011115612d5157600080fd5b60005b83811015612d7d5781612d678882612cfd565b8452506020928301929190910190600101612d54565b5050505092915050565b600082601f830112612d9857600080fd5b8135612da6612d2782614638565b91508181835260208401935060208101905083856020840282011115612dcb57600080fd5b60005b83811015612d7d5781612de18882612f47565b8452506020928301929190910190600101612dce565b600082601f830112612e0857600080fd5b8151612e16612d2782614638565b91508181835260208401935060208101905083856020840282011115612e3b57600080fd5b60005b83811015612d7d5781612e518882612f52565b8452506020928301929190910190600101612e3e565b600082601f830112612e7857600080fd5b8151612e86612d2782614638565b91508181835260208401935060208101905083856020840282011115612eab57600080fd5b60005b83811015612d7d5781612ec18882612f52565b8452506020928301929190910190600101612eae565b600082601f830112612ee857600080fd5b8135612ef6612d2782614638565b91508181835260208401935060208101905083856020840282011115612f1b57600080fd5b60005b83811015612d7d5781612f318882613058565b8452506020928301929190910190600101612f1e565b80356105ca81614793565b80516105ca81614793565b600082601f830112612f6e57600080fd5b8135612f7c612d2782614658565b91508082526020830160208301858383011115612f9857600080fd5b612fa3838284614712565b50505092915050565b600082601f830112612fbd57600080fd5b8151612fcb612d2782614658565b91508082526020830160208301858383011115612fe757600080fd5b612fa383828461471e565b80516105ca8161479c565b60006060828403121561300f57600080fd5b6130196060614612565b905060006130278484612ff2565b825250602061303884848301612f52565b602083015250604061304c84828501612f52565b60408301525092915050565b80356105ca816147a9565b60006020828403121561307557600080fd5b60006130818484612cf2565b949350505050565b6000806040838503121561309c57600080fd5b60006130a88585612cfd565b92505060208301516001600160401b038111156130c457600080fd5b6130d085828601612fac565b9150509250929050565b6000806000606084860312156130ef57600080fd5b60006130fb8686612cf2565b93505060208401356001600160401b0381111561311757600080fd5b61312386828701612f5d565b92505060408401356001600160401b0381111561313f57600080fd5b61314b86828701612f5d565b9150509250925092565b6000806040838503121561316857600080fd5b60006131748585612cf2565b92505060206130d085828601612f47565b60006020828403121561319757600080fd5b81516001600160401b038111156131ad57600080fd5b61308184828501612d08565b600080604083850312156131cc57600080fd5b82516001600160401b038111156131e257600080fd5b6131ee85828601612d08565b92505060208301516001600160401b0381111561320a57600080fd5b6130d085828601612e67565b60006020828403121561322857600080fd5b81516001600160401b0381111561323e57600080fd5b61308184828501612df7565b6000806000806080858703121561326057600080fd5b84356001600160401b0381111561327657600080fd5b61328287828801612d87565b94505060208501356001600160401b0381111561329e57600080fd5b6132aa87828801612ed7565b93505060408501356001600160401b038111156132c657600080fd5b6132d287828801612ed7565b92505060606132e387828801612f47565b91505092959194509250565b60006020828403121561330157600080fd5b60006130818484612f47565b600080600080600080600080610100898b03121561332a57600080fd5b60006133368b8b612f47565b98505060206133478b828c01612f47565b97505060406133588b828c01612f47565b96505060606133698b828c01612f47565b95505060808901356001600160401b0381111561338557600080fd5b6133918b828c01612f5d565b94505060a06133a28b828c01612cf2565b93505060c06133b38b828c01613058565b92505060e08901356001600160401b038111156133cf57600080fd5b6133db8b828c01612f5d565b9150509295985092959890939650565b600080600080600060a0868803121561340357600080fd5b600061340f8888612f47565b955050602061342088828901612f47565b945050604061343188828901612f47565b935050606061344288828901613058565b92505060808601356001600160401b0381111561345e57600080fd5b61346a88828901612f5d565b9150509295509295909350565b6000806000806080858703121561348d57600080fd5b60006134998787612f47565b94505060206134aa87828801612f47565b93505060406134bb87828801613058565b92505060608501356001600160401b038111156134d757600080fd5b6132e387828801612f5d565b600080600080608085870312156134f957600080fd5b60006135058787612f47565b945050602061351687828801613058565b93505060406132d287828801613058565b600080600080600060a0868803121561353f57600080fd5b600061354b8888612f47565b955050602061355c88828901613058565b945050604061356d88828901613058565b935050606061357e88828901612f47565b925050608061346a88828901612f47565b600080604083850312156135a257600080fd5b82356001600160401b038111156135b857600080fd5b6135c485828601612f5d565b92505060208301356001600160401b038111156135e057600080fd5b6130d085828601612f5d565b6000606082840312156135fe57600080fd5b60006130818484612ffd565b60006020828403121561361c57600080fd5b60006130818484612f52565b6000806040838503121561363b57600080fd5b60006131748585612f47565b6000806000806080858703121561365d57600080fd5b60006136698787612f52565b945050602061367a87828801612f52565b93505060408501516001600160401b0381111561369657600080fd5b6136a287828801612d08565b92505060608501516001600160401b038111156136be57600080fd5b6132e387828801612e67565b6000806000606084860312156136df57600080fd5b60006136eb8686612f47565b935050602061312386828701612f47565b60006137088383613748565b505060200190565b60006137088383613adc565b60006137288383613f3c565b505060600190565b60006105c78383614051565b600061370883836140ac565b6137518161469b565b82525050565b600061376282614688565b61376c8185614692565b93506137778361467f565b8060005b838110156137a557815161378f88826136fc565b975061379a8361467f565b92505060010161377b565b509495945050505050565b60006137bb82614688565b6137c58185614692565b93506137d08361467f565b8060005b838110156137a55781516137e888826136fc565b97506137f38361467f565b9250506001016137d4565b600061380982614688565b6138138185614692565b935061381e8361467f565b8060005b838110156137a55781516138368882613710565b97506138418361467f565b925050600101613822565b600061385782614688565b6138618185614692565b935061386c8361467f565b8060005b838110156137a55781516138848882613710565b975061388f8361467f565b925050600101613870565b60006138a582614688565b6138af8185614692565b93506138ba8361467f565b8060005b838110156137a55781516138d28882613710565b97506138dd8361467f565b9250506001016138be565b60006138f382614688565b6138fd8185614692565b93506139088361467f565b8060005b838110156137a5578151613920888261371c565b975061392b8361467f565b92505060010161390c565b600061394182614688565b61394b8185614692565b93506139568361467f565b8060005b838110156137a557815161396e888261371c565b97506139798361467f565b92505060010161395a565b600061398f8261468c565b61399981856117ce565b9350836020820285016139ab85614685565b8060005b858110156139e557848403895281516139c88582613730565b94506139d38361467f565b60209a909a01999250506001016139af565b5091979650505050505050565b60006139fd82614688565b613a078185614692565b9350613a128361467f565b8060005b838110156137a5578151613a2a8882613710565b9750613a358361467f565b925050600101613a16565b6000613a4b82614688565b613a558185614692565b9350613a608361467f565b8060005b838110156137a5578151613a788882613710565b9750613a838361467f565b925050600101613a64565b6000613a9982614688565b613aa38185614692565b9350613aae8361467f565b8060005b838110156137a5578151613ac6888261373c565b9750613ad18361467f565b925050600101613ab2565b61375181614685565b6000613af082614688565b613afa8185614692565b9350613b0a81856020860161471e565b613b138161474a565b9093019392505050565b613751816146e6565b613751816146f1565b613751816146fc565b61375181614707565b6000613b4e602283614692565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152600160f21b611b9d02602082015260400192915050565b6000613b95601883614692565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b6000613bce602783614692565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152600160c81b667574207479706502602082015260400192915050565b6000613c1a601c83614692565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b6000613c53601383614692565b7f5461736b206973206e6f742077616974696e6700000000000000000000000000815260200192915050565b6000613c8c602783614692565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152600160ca1b661a585b1a5e995902602082015260400192915050565b6000613cd8602e83614692565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381527f206c6f67206f7574206576656e74000000000000000000000000000000000000602082015260400192915050565b6000613d37601483614692565b7f576f726b6572206e6f74206c6f6767656420696e000000000000000000000000815260200192915050565b6000613d70601383614692565b7f556e7265676973746572656420776f726b657200000000000000000000000000815260200192915050565b6000613da9602083614692565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000613de2602783614692565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f678152600160ca1b6619d959081bdd5d02602082015260400192915050565b805160009060a0840190613e358582613748565b506020830151613e486020860182613adc565b506040830151613e5b6040860182613adc565b5060608301518482036060860152613e73828261389a565b9150506080830151613e886080860182613b1d565b509392505050565b9052565b8051600090610100840190613ea98582613748565b506020830151613ebc6020860182613adc565b506040830151613ecf6040860182613adc565b506060830151613ee260608601826140ac565b506080830151613ef560808601826140ac565b5060a0830151613f0860a0860182613adc565b5060c0830151613f1b60c0860182613b26565b5060e083015184820360e0860152613f338282613ae5565b95945050505050565b80516060830190613f4d8482613b2f565b506020820151613f606020850182613adc565b506040820151613f736040850182613adc565b50505050565b805160009060a0840190613f8d8582613748565b506020830151613fa06020860182613b38565b5060408301518482036040860152613fb88282613ae5565b9150506060830151613fcd6060860182613adc565b5060808301518482036080860152613f3382826138e8565b805160009060a0840190613ff98582613748565b50602083015161400c6020860182613b38565b50604083015184820360408601526140248282613ae5565b91505060608301516140396060860182613adc565b5060808301518482036080860152613f338282613936565b805160009060808401906140658582613adc565b506020830151848203602086015261407d82826137b0565b915050604083015184820360408601526140978282613a40565b9150506060830151613e886060860182613adc565b613751816146da565b602081016105ca8284613748565b604081016140d18285613748565b81810360208301526130818184613ae5565b604081016140f18285613748565b81810360208301526130818184613f79565b602080825281016105c78184613757565b604080825281016141258185613757565b9050818103602083015261308181846139f2565b602080825281016105c781846137fe565b602080825281016105c78184613984565b6040808252810161416c8185613ae5565b905081810360208301526130818184613ae5565b602080825281016105ca81613b41565b602080825281016105ca81613b88565b602080825281016105ca81613bc1565b602080825281016105ca81613c0d565b602080825281016105ca81613c46565b602080825281016105ca81613c7f565b602080825281016105ca81613ccb565b602080825281016105ca81613d2a565b602080825281016105ca81613d63565b602080825281016105ca81613d9c565b602080825281016105ca81613dd5565b602080825281016105c78184613e21565b602081016105ca8284613e90565b6040810161425d8285613e90565b61426a6020830184613748565b9392505050565b6080810161427f8287613e90565b61428c6020830186613748565b818103604083015261429e8185613ae5565b905081810360608301526142b28184613ae5565b9695505050505050565b606081016142ca8286613e90565b6142d76020830185613748565b6130816040830184613adc565b60a081016142f28288613e90565b8181036020830152614304818761384c565b905081810360408301526143188186613a8e565b9050818103606083015261432c8185613a8e565b90506142b26080830184613adc565b604081016143498285613e90565b61426a6020830184613adc565b6101208101614365828c613e90565b614372602083018b613adc565b61437f604083018a613adc565b61438c6060830189613adc565b6143996080830188613adc565b81810360a08301526143ab8187613ae5565b90506143ba60c0830186613748565b6143c760e08301856140ac565b8181036101008301526143da8184613ae5565b9b9a5050505050505050505050565b60c081016143f78289613e90565b6144046020830188613adc565b6144116040830187613adc565b61441e6060830186613adc565b61442b60808301856140ac565b81810360a083015261443d8184613ae5565b98975050505050505050565b60a081016144578288613e90565b6144646020830187613adc565b6144716040830186613adc565b61447e60608301856140ac565b81810360808301526144908184613ae5565b979650505050505050565b60a081016144a98288613e90565b6144b66020830187613adc565b6144c360408301866140ac565b6144d060608301856140ac565b6142b26080830184613adc565b60c081016144eb8289613e90565b6144f86020830188613adc565b61450560408301876140ac565b61451260608301866140ac565b61451f6080830185613adc565b61449060a0830184613adc565b6060810161453a8286613e90565b6142d76020830185613adc565b608081016145558287613e90565b6145626020830186613adc565b61456f6040830185613adc565b81810360608301526142b28184613ae5565b602080825281016105c78184613e94565b602080825281016105c78184613f79565b604080825281016145b48185613fe5565b905061426a6020830184613adc565b602081016105ca8284613adc565b608081016145df8287613adc565b6145ec6020830186613adc565b81810360408301526145fe8185613757565b905081810360608301526142b281846139f2565b6040518181016001600160401b038111828210171561463057600080fd5b604052919050565b60006001600160401b0382111561464e57600080fd5b5060209081020190565b60006001600160401b0382111561466e57600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600590565b90815260200190565b60006105ca826146ce565b806117ce81614754565b806117ce81614761565b806117ce8161476b565b806117ce81614775565b6001600160a01b031690565b6001600160401b031690565b60006105ca826146a6565b60006105ca826146b0565b60006105ca826146ba565b60006105ca826146c4565b82818337506000910152565b60005b83811015614739578181015183820152602001614721565b83811115613f735750506000910152565b601f01601f191690565b6002811061475e57fe5b50565b6006811061475e57fe5b6004811061475e57fe5b6003811061475e57fe5b6147888161469b565b811461475e57600080fd5b61478881614685565b6004811061475e57600080fd5b614788816146da56fea265627a7a7230582043e51993fe2420863b95d6ebc5f5594e4efa083f0d6dffac13a20bd26af0637e6c6578706572696d656e74616cf50037","sourceMap":"767:16810:0:-;;;997:317;8:9:-1;5:2;;;30:1;27;20:12;5:2;997:317:0;;;;;;;;;;;;;;;;;;;;;;1086:5;:37;;-1:-1:-1;;;;;1086:37:0;;;-1:-1:-1;;;;;;1086:37:0;;;;;;;;1133:28;;;1195:3;1171:21;:27;1208:15;:28;;;;;;;;;;;;;;;1246:22;:26;;;1282:21;:25;767:16810;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;146:134;224:13;;242:33;224:13;242:33;;287:535;;;;436:2;424:9;415:7;411:23;407:32;404:2;;;452:1;449;442:12;404:2;487:1;504:64;560:7;540:9;504:64;;;494:74;;466:108;605:2;623:64;679:7;670:6;659:9;655:22;623:64;;;613:74;;584:109;724:2;742:64;798:7;789:6;778:9;774:22;742:64;;;732:74;;703:109;398:424;;;;;;829:91;;-1:-1;;;;;989:54;;891:24;972:76;1055:72;1117:5;1100:27;1134:117;1203:24;1221:5;1203:24;;;1196:5;1193:35;1183:2;;1242:1;1239;1232:12;1183:2;1177:74;;1258:117;1327:24;1345:5;1327:24;;1301:74;767:16810:0;;;;;;","deployedSourceMap":"767:16810:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;767:16810:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15297:194;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16652:199;;;;;;;;;:::i;:::-;;;;;;;;6847:98;;;:::i;:::-;;6385:132;;;;;;;;;:::i;13039:546::-;;;;;;;;;:::i;6020:167::-;;;;;;;;;:::i;8252:575::-;;;;;;;;;:::i;14967:209::-;;;;;;;;;:::i;3069:121:10:-;;;:::i;:::-;;;;;;;;2823:130;;;:::i;:::-;;;;;;;;8954:149:0;;;:::i;:::-;;;;;;;;2543::10;;;;;;;;;:::i;:::-;;;;;;;;5568:207:0;;;;;;;;;:::i;9316:211::-;;;;;;;;;:::i;2221:137:10:-;;;;;;;;;:::i;:::-;;;;;;;;16117:198:0;;;;;;;;;:::i;:::-;;;;;;;;;;;1004:492:10;;;;;;;;;:::i;:::-;;;;;;;;;7253:324:0;;;;;;;;;:::i;16989:200::-;;;;;;;;;:::i;:::-;;;;;;;;;6680:90;;;:::i;17394:181::-;;;;;;;;;:::i;12137:298::-;;;;;;;;;:::i;11265:261::-;;;;;;;;;:::i;679:131:10:-;;;;;;;;;:::i;:::-;;;;;;;;10380:310:0;;;;;;;;;:::i;13976:341::-;;;;;;;;;:::i;15666:167::-;;;;;;;;;:::i;399:115:10:-;;;:::i;:::-;;;;;;;;1957:90;;;:::i;14484:147:0:-;;;;;;;;;:::i;1740:134:10:-;;;;;;;;;:::i;15297:194:0:-;15375:16;15393:13;15429;:34;15464:5;15471:12;15429:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15429:55:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15429:55:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;15429:55:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;15429:55:0;;;;;;;;;15422:62;;;;15297:194;;;:::o;16652:199::-;16784:60;;-1:-1:-1;;;;;16784:60:0;;16745:16;;16784:11;;:30;;:60;;16815:5;;16822:12;;16836:7;;16784:60;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16784:60:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16784:60:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16784:60:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16784:60:0;;;;;;;;;16777:67;;16652:199;;;;;:::o;6847:98::-;6887:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;;;;;;;;;6909:29;;-1:-1:-1;;;;;6909:29:0;;:11;;:22;;:29;;6932:5;;6909:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6909:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6909:29:0;;;;6847:98;;:::o;6385:132::-;6444:10;3223:33;;:::i;:::-;-1:-1:-1;;;;;3259:20:0;;;:5;:20;;;:13;:20;;;;;;;;;3223:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3223:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3223:56:0;;-1:-1:-1;3223:56:0;;-1:-1:-1;3314:35:0;;-1:-1:-1;3297:6:0;:13;;;:52;;;;;;;;;3289:104;;;;-1:-1:-1;;;;;3289:104:0;;;;;;;;;3403:39;;:::i;:::-;3445:56;;-1:-1:-1;;;;;3445:56:0;;:11;;:34;;:56;;3480:6;;3488:12;;3445:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3445:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3445:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3445:56:0;;;;;;;;;3403:98;-1:-1:-1;3548:33:0;3519:25;;:62;;;;;;;;;3511:126;;;;-1:-1:-1;;;;;3511:126:0;;;;;;;;;3691:9;:21;;;3655:33;3675:12;3655:19;:33::i;:::-;:57;3647:128;;;;-1:-1:-1;;;;;3647:128:0;;;;;;;;;6470:40;;-1:-1:-1;;;;;6470:40:0;;:11;;:24;;:40;;6495:5;;6502:7;;6470:40;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6470:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6470:40:0;;;;6385:132;;;;:::o;13039:546::-;13356:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;13389:7;4326:42;4291:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4283:118;;;;-1:-1:-1;;;;;4283:118:0;;;;;;;;;13412:166;;-1:-1:-1;;;;;13412:166:0;;:8;;:26;;:166;;13439:5;;13446:7;;13455;;13464:15;;13481:11;;13494:21;;13529:32;;13563:8;;13573:4;;13412:166;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13412:166:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13412:166:0;;;;2138:1;13039:546;;;;;;;;;;:::o;6020:167::-;6103:10;1614:33;;:::i;:::-;-1:-1:-1;;;;;1650:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1614:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;-1:-1:-1;1614:56:0;;-1:-1:-1;1705:38:0;;-1:-1:-1;1688:6:0;:13;;;:55;;;;;;;;;;1680:87;;;;-1:-1:-1;;;;;1680:87:0;;;;;;;;;6129:51;;-1:-1:-1;;;;;6129:51:0;;:11;;:23;;:51;;6153:5;;6160:10;;6172:7;;6129:51;;;;8252:575;8583:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;8617:7;4013:43;3978:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;3970:123;;;;-1:-1:-1;;;;;3970:123:0;;;;;;;;;8640:180;;-1:-1:-1;;;;;8640:180:0;;:8;;:33;;:180;;8674:5;;8681:7;;8690:12;;8704:9;;8715:19;;8748:21;;8771:32;;8805:8;;8815:4;;8640:180;;;;14967:209;15075:10;1614:33;;:::i;:::-;-1:-1:-1;;;;;1650:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1614:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;-1:-1:-1;1614:56:0;;-1:-1:-1;1705:38:0;;-1:-1:-1;1688:6:0;:13;;;:55;;;;;;;;;;1680:87;;;;-1:-1:-1;;;;;1680:87:0;;;;;;;;;15101:68;;-1:-1:-1;;;;;15101:68:0;;:13;;:34;;:68;;15136:5;;15143:12;;15157:5;;15164:4;;15101:68;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15101:68:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15101:68:0;;;;14967:209;;;;;:::o;3069:121:10:-;3131:16;3166:5;:17;;3159:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:121;:::o;2823:130::-;2872:36;;:::i;:::-;2920:26;;;;;;;;;2927:19;2920:26;2927:5;2920:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2920:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2823:130;:::o;8954:149:0:-;9046:50;;-1:-1:-1;;;;;9046:50:0;;9019:4;;9046:18;;:43;;:50;;9019:4;;9046:50;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9046:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9046:50:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9046:50:0;;;;;;;;;9039:57;;8954:149;:::o;2543::10:-;2608:34;;:::i;:::-;2661:5;:24;;;:15;:24;;;;;;;;;2654:31;;;;;;;;;-1:-1:-1;;;;;2654:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2661:24;;2654:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2654:31:10;;;-1:-1:-1;;2654:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2654:31:10;-1:-1:-1;2543:149:10;;;;:::o;5568:207:0:-;5684:7;4889:6;4884:175;4905:21;:28;4901:32;;4884:175;;;5012:7;-1:-1:-1;;;;;4962:57:0;:5;:13;;:39;4976:5;:21;;4998:1;4976:24;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4976:24:0;;;4962:39;;;;;;;;;;;;;;;:46;;:57;;4954:94;;;;-1:-1:-1;;;;;4954:94:0;;;;;;;;;4935:3;;4884:175;;;-1:-1:-1;5707:61:0;;-1:-1:-1;;;;;5707:61:0;;:11;;:24;;:61;;5732:5;;5739:7;;5748;;5757:10;;5707:61;;;;9316:211;9449:71;;-1:-1:-1;;;;;9449:71:0;;9410:16;;9449:18;;:49;;:71;;9499:5;;9506:6;;9514:5;;9449:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9449:71:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9449:71:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;9449:71:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;9449:71:0;;;;;;;;2221:137:10;2282:30;;:::i;:::-;2331:5;:20;;;:11;:20;;;;;;;;;2324:27;;;;;;;;;-1:-1:-1;;;;;2324:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2324:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2331:20;2324:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2324:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2221:137;;;:::o;16117:198:0:-;16194:4;16200;16206:16;16224:13;16256:11;:31;16288:5;16295:12;16256:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16256:52:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16256:52:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16256:52:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16256:52:0;;;;;;;;;16249:59;;;;;;;;16117:198;;;;;:::o;1004:492:10:-;1079:7;1088:26;;:::i;:::-;1126:15;1151:33;;:::i;:::-;1199:6;1194:262;1215:21;:28;1211:32;;1194:262;;;1287:21;:24;;1273:13;;:5;;1309:1;;1287:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1287:24:10;;;1273:39;;;;;;;;;;;;;;;;1264:48;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1264:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:7;-1:-1:-1;;;;;1330:24:10;:6;:13;;;-1:-1:-1;;;;;1330:24:10;;1326:120;;;1384:21;:24;;1406:1;;1384:24;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1384:24:10;;-1:-1:-1;1426:5:10;;1326:120;1245:3;;1194:262;;;-1:-1:-1;1473:7:10;;-1:-1:-1;1482:6:10;-1:-1:-1;1004:492:10;;;:::o;7253:324:0:-;7430:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;7464:7;4013:43;3978:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;3970:123;;;;-1:-1:-1;;;;;3970:123:0;;;;;;;;;7487:83;;-1:-1:-1;;;;;7487:83:0;;:8;;:40;;:83;;7528:5;;7535:7;;7544:9;;7555:8;;7565:4;;7487:83;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7487:83:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7487:83:0;;;;2138:1;7253:324;;;;;;:::o;16989:200::-;17094:7;17103:12;17069:10;1614:33;;:::i;:::-;-1:-1:-1;;;;;1650:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1614:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;-1:-1:-1;1614:56:0;;-1:-1:-1;1705:38:0;;-1:-1:-1;1688:6:0;:13;;;:55;;;;;;;;;;1680:87;;;;-1:-1:-1;;;;;1680:87:0;;;;;;;;;17138:44;;-1:-1:-1;;;;;17138:44:0;;:11;;:25;;:44;;17164:5;;17171:10;;17138:44;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17138:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17138:44:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;17138:44:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;17138:44:0;;;;;;;;;17131:51;;;;16989:200;;;;;:::o;6680:90::-;6713:10;2670:33;;:::i;:::-;-1:-1:-1;;;;;2706:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2670:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2670:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2744:33;2764:12;2744:19;:33::i;:::-;2736:90;;;;-1:-1:-1;;;;;2736:90:0;;;;;;;;;2861:35;2844:6;:13;;;:52;;;;;;;;;2836:104;;;;-1:-1:-1;;;;;2836:104:0;;;;;;;;;2976:22;;2958:14;;;;:40;;2950:87;;;;-1:-1:-1;;;;;2950:87:0;;;;;;;;;6735:28;;-1:-1:-1;;;;;6735:28:0;;:11;;:21;;:28;;6757:5;;6735:28;;;;17394:181;17521:47;;-1:-1:-1;;;;;17521:47:0;;17494:4;;17521:11;;:28;;:47;;17550:5;;17557:10;;17521:47;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17521:47:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17521:47:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;17521:47:0;;;;;;;;12137:298;12336:92;;-1:-1:-1;;;;;12336:92:0;;:8;;:30;;:92;;12367:5;;12374:13;;12389:10;;12401:7;;12410:17;;12336:92;;;;11265:261;11432:87;;-1:-1:-1;;;;;11432:87:0;;:8;;:29;;:87;;11462:5;;11469:11;;11482:9;;11493:6;;11501:17;;11432:87;;;;679:131:10;736:26;;:::i;:::-;-1:-1:-1;;;;;781:22:10;;;:5;:22;;;:13;:22;;;;;;;;;774:29;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;-1:-1:-1;774:29:10;;679:131;-1:-1:-1;;;679:131:10:o;10380:310:0:-;10578:105;;-1:-1:-1;;;;;10578:105:0;;:8;;:39;;:105;;10618:5;;10625:11;;10638:9;;10649:6;;10657:17;;10676:6;;10578:105;;;;13976:341;14170:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;14203:7;4326:42;4291:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4283:118;;;;-1:-1:-1;;;;;4283:118:0;;;;;;;;;14226:84;;-1:-1:-1;;;;;14226:84:0;;:8;;:30;;:84;;14257:5;;14264:7;;14273;;14282:11;;14295:8;;14305:4;;14226:84;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14226:84:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14226:84:0;;;;2138:1;13976:341;;;;;;;:::o;15666:167::-;15770:56;;-1:-1:-1;;;;;15770:56:0;;15747:4;;15770:11;;:35;;:56;;15747:4;;15813:12;;15770:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15770:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15770:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;15770:56:0;;;;;;;;399:115:10;489:10;449:7;475:25;;;:13;:25;;;;;:32;-1:-1:-1;;;;;475:32:10;399:115;:::o;1957:90::-;2025:15;;1957:90;:::o;14484:147:0:-;14555:7;4633:37;4602:5;:20;;;:11;:20;;;;;:27;;;;;;;;:68;;;;;;;;4594:100;;;;-1:-1:-1;;;;;4594:100:0;;;;;;;;;14578:46;;-1:-1:-1;;;;;14578:46:0;;:8;;:30;;:46;;14609:5;;14616:7;;14578:46;;;;1740:134:10;-1:-1:-1;;;;;1833:34:10;1810:4;1833:34;;;:25;:34;;;;;;;1740:134::o;767:16810:0:-;;;;;;;;;;-1:-1:-1;767:16810:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;767:16810:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;767:16810:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;767:16810:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:722;;429:3;422:4;414:6;410:17;406:27;396:2;;447:1;444;437:12;396:2;477:6;471:13;499:80;514:64;571:6;514:64;;;499:80;;;490:89;;596:5;621:6;614:5;607:21;651:4;643:6;639:17;629:27;;673:4;668:3;664:14;657:21;;726:6;773:3;765:4;757:6;753:17;748:3;744:27;741:36;738:2;;;790:1;787;780:12;738:2;815:1;800:217;825:6;822:1;819:13;800:217;;;883:3;905:48;949:3;937:10;905:48;;;893:61;;-1:-1;977:4;968:14;;;;996;;;;;847:1;840:9;800:217;;;804:14;389:634;;;;;;;;1049:707;;1166:3;1159:4;1151:6;1147:17;1143:27;1133:2;;1184:1;1181;1174:12;1133:2;1221:6;1208:20;1243:80;1258:64;1315:6;1258:64;;1243:80;1234:89;;1340:5;1365:6;1358:5;1351:21;1395:4;1387:6;1383:17;1373:27;;1417:4;1412:3;1408:14;1401:21;;1470:6;1517:3;1509:4;1501:6;1497:17;1492:3;1488:27;1485:36;1482:2;;;1534:1;1531;1524:12;1482:2;1559:1;1544:206;1569:6;1566:1;1563:13;1544:206;;;1627:3;1649:37;1682:3;1670:10;1649:37;;;1637:50;;-1:-1;1710:4;1701:14;;;;1729;;;;;1591:1;1584:9;1544:206;;1782:722;;1910:3;1903:4;1895:6;1891:17;1887:27;1877:2;;1928:1;1925;1918:12;1877:2;1958:6;1952:13;1980:80;1995:64;2052:6;1995:64;;1980:80;1971:89;;2077:5;2102:6;2095:5;2088:21;2132:4;2124:6;2120:17;2110:27;;2154:4;2149:3;2145:14;2138:21;;2207:6;2254:3;2246:4;2238:6;2234:17;2229:3;2225:27;2222:36;2219:2;;;2271:1;2268;2261:12;2219:2;2296:1;2281:217;2306:6;2303:1;2300:13;2281:217;;;2364:3;2386:48;2430:3;2418:10;2386:48;;;2374:61;;-1:-1;2458:4;2449:14;;;;2477;;;;;2328:1;2321:9;2281:217;;2530:722;;2658:3;2651:4;2643:6;2639:17;2635:27;2625:2;;2676:1;2673;2666:12;2625:2;2706:6;2700:13;2728:80;2743:64;2800:6;2743:64;;2728:80;2719:89;;2825:5;2850:6;2843:5;2836:21;2880:4;2872:6;2868:17;2858:27;;2902:4;2897:3;2893:14;2886:21;;2955:6;3002:3;2994:4;2986:6;2982:17;2977:3;2973:27;2970:36;2967:2;;;3019:1;3016;3009:12;2967:2;3044:1;3029:217;3054:6;3051:1;3048:13;3029:217;;;3112:3;3134:48;3178:3;3166:10;3134:48;;;3122:61;;-1:-1;3206:4;3197:14;;;;3225;;;;;3076:1;3069:9;3029:217;;3277:704;;3393:3;3386:4;3378:6;3374:17;3370:27;3360:2;;3411:1;3408;3401:12;3360:2;3448:6;3435:20;3470:79;3485:63;3541:6;3485:63;;3470:79;3461:88;;3566:5;3591:6;3584:5;3577:21;3621:4;3613:6;3609:17;3599:27;;3643:4;3638:3;3634:14;3627:21;;3696:6;3743:3;3735:4;3727:6;3723:17;3718:3;3714:27;3711:36;3708:2;;;3760:1;3757;3750:12;3708:2;3785:1;3770:205;3795:6;3792:1;3789:13;3770:205;;;3853:3;3875:36;3907:3;3895:10;3875:36;;;3863:49;;-1:-1;3935:4;3926:14;;;;3954;;;;;3817:1;3810:9;3770:205;;3989:130;4056:20;;4081:33;4056:20;4081:33;;4126:134;4204:13;;4222:33;4204:13;4222:33;;4268:440;;4369:3;4362:4;4354:6;4350:17;4346:27;4336:2;;4387:1;4384;4377:12;4336:2;4424:6;4411:20;4446:64;4461:48;4502:6;4461:48;;4446:64;4437:73;;4530:6;4523:5;4516:21;4566:4;4558:6;4554:17;4599:4;4592:5;4588:16;4634:3;4625:6;4620:3;4616:16;4613:25;4610:2;;;4651:1;4648;4641:12;4610:2;4661:41;4695:6;4690:3;4685;4661:41;;;4329:379;;;;;;;;4717:442;;4829:3;4822:4;4814:6;4810:17;4806:27;4796:2;;4847:1;4844;4837:12;4796:2;4877:6;4871:13;4899:64;4914:48;4955:6;4914:48;;4899:64;4890:73;;4983:6;4976:5;4969:21;5019:4;5011:6;5007:17;5052:4;5045:5;5041:16;5087:3;5078:6;5073:3;5069:16;5066:25;5063:2;;;5104:1;5101;5094:12;5063:2;5114:39;5146:6;5141:3;5136;5114:39;;5167:170;5263:13;;5281:51;5263:13;5281:51;;5380:695;;5507:4;5495:9;5490:3;5486:19;5482:30;5479:2;;;5525:1;5522;5515:12;5479:2;5543:20;5558:4;5543:20;;;5534:29;-1:-1;5624:1;5655:78;5729:3;5709:9;5655:78;;;5631:103;;-1:-1;5802:2;5835:60;5891:3;5867:22;;;5835:60;;;5828:4;5821:5;5817:16;5810:86;5755:152;5960:2;5993:60;6049:3;6040:6;6029:9;6025:22;5993:60;;;5986:4;5979:5;5975:16;5968:86;5917:148;5473:602;;;;;6360:128;6426:20;;6451:32;6426:20;6451:32;;6495:241;;6599:2;6587:9;6578:7;6574:23;6570:32;6567:2;;;6615:1;6612;6605:12;6567:2;6650:1;6667:53;6712:7;6692:9;6667:53;;;6657:63;6561:175;-1:-1;;;;6561:175;6743:496;;;6884:2;6872:9;6863:7;6859:23;6855:32;6852:2;;;6900:1;6897;6890:12;6852:2;6935:1;6952:64;7008:7;6988:9;6952:64;;;6942:74;;6914:108;7074:2;7063:9;7059:18;7053:25;-1:-1;;;;;7090:6;7087:30;7084:2;;;7130:1;7127;7120:12;7084:2;7150:73;7215:7;7206:6;7195:9;7191:22;7150:73;;;7140:83;;7032:197;6846:393;;;;;;7246:699;;;;7402:2;7390:9;7381:7;7377:23;7373:32;7370:2;;;7418:1;7415;7408:12;7370:2;7453:1;7470:53;7515:7;7495:9;7470:53;;;7460:63;;7432:97;7588:2;7577:9;7573:18;7560:32;-1:-1;;;;;7604:6;7601:30;7598:2;;;7644:1;7641;7634:12;7598:2;7664:62;7718:7;7709:6;7698:9;7694:22;7664:62;;;7654:72;;7539:193;7791:2;7780:9;7776:18;7763:32;-1:-1;;;;;7807:6;7804:30;7801:2;;;7847:1;7844;7837:12;7801:2;7867:62;7921:7;7912:6;7901:9;7897:22;7867:62;;;7857:72;;7742:193;7364:581;;;;;;7952:366;;;8073:2;8061:9;8052:7;8048:23;8044:32;8041:2;;;8089:1;8086;8079:12;8041:2;8124:1;8141:53;8186:7;8166:9;8141:53;;;8131:63;;8103:97;8231:2;8249:53;8294:7;8285:6;8274:9;8270:22;8249:53;;8325:392;;8465:2;8453:9;8444:7;8440:23;8436:32;8433:2;;;8481:1;8478;8471:12;8433:2;8516:24;;-1:-1;;;;;8549:30;;8546:2;;;8592:1;8589;8582:12;8546:2;8612:89;8693:7;8684:6;8673:9;8669:22;8612:89;;8724:657;;;8906:2;8894:9;8885:7;8881:23;8877:32;8874:2;;;8922:1;8919;8912:12;8874:2;8957:24;;-1:-1;;;;;8990:30;;8987:2;;;9033:1;9030;9023:12;8987:2;9053:89;9134:7;9125:6;9114:9;9110:22;9053:89;;;9043:99;;8936:212;9200:2;9189:9;9185:18;9179:25;-1:-1;;;;;9216:6;9213:30;9210:2;;;9256:1;9253;9246:12;9210:2;9276:89;9357:7;9348:6;9337:9;9333:22;9276:89;;9388:392;;9528:2;9516:9;9507:7;9503:23;9499:32;9496:2;;;9544:1;9541;9534:12;9496:2;9579:24;;-1:-1;;;;;9612:30;;9609:2;;;9655:1;9652;9645:12;9609:2;9675:89;9756:7;9747:6;9736:9;9732:22;9675:89;;9787:1021;;;;;10015:3;10003:9;9994:7;9990:23;9986:33;9983:2;;;10032:1;10029;10022:12;9983:2;10067:31;;-1:-1;;;;;10107:30;;10104:2;;;10150:1;10147;10140:12;10104:2;10170:78;10240:7;10231:6;10220:9;10216:22;10170:78;;;10160:88;;10046:208;10313:2;10302:9;10298:18;10285:32;-1:-1;;;;;10329:6;10326:30;10323:2;;;10369:1;10366;10359:12;10323:2;10389:77;10458:7;10449:6;10438:9;10434:22;10389:77;;;10379:87;;10264:208;10531:2;10520:9;10516:18;10503:32;-1:-1;;;;;10547:6;10544:30;10541:2;;;10587:1;10584;10577:12;10541:2;10607:77;10676:7;10667:6;10656:9;10652:22;10607:77;;;10597:87;;10482:208;10721:2;10739:53;10784:7;10775:6;10764:9;10760:22;10739:53;;;10729:63;;10700:98;9977:831;;;;;;;;10815:241;;10919:2;10907:9;10898:7;10894:23;10890:32;10887:2;;;10935:1;10932;10925:12;10887:2;10970:1;10987:53;11032:7;11012:9;10987:53;;11063:1327;;;;;;;;;11303:3;11291:9;11282:7;11278:23;11274:33;11271:2;;;11320:1;11317;11310:12;11271:2;11355:1;11372:53;11417:7;11397:9;11372:53;;;11362:63;;11334:97;11462:2;11480:53;11525:7;11516:6;11505:9;11501:22;11480:53;;;11470:63;;11441:98;11570:2;11588:53;11633:7;11624:6;11613:9;11609:22;11588:53;;;11578:63;;11549:98;11678:2;11696:53;11741:7;11732:6;11721:9;11717:22;11696:53;;;11686:63;;11657:98;11814:3;11803:9;11799:19;11786:33;-1:-1;;;;;11831:6;11828:30;11825:2;;;11871:1;11868;11861:12;11825:2;11891:62;11945:7;11936:6;11925:9;11921:22;11891:62;;;11881:72;;11765:194;11990:3;12009:53;12054:7;12045:6;12034:9;12030:22;12009:53;;;11999:63;;11969:99;12099:3;12118:52;12162:7;12153:6;12142:9;12138:22;12118:52;;;12108:62;;12078:98;12235:3;12224:9;12220:19;12207:33;-1:-1;;;;;12252:6;12249:30;12246:2;;;12292:1;12289;12282:12;12246:2;12312:62;12366:7;12357:6;12346:9;12342:22;12312:62;;;12302:72;;12186:194;11265:1125;;;;;;;;;;;;12397:845;;;;;;12577:3;12565:9;12556:7;12552:23;12548:33;12545:2;;;12594:1;12591;12584:12;12545:2;12629:1;12646:53;12691:7;12671:9;12646:53;;;12636:63;;12608:97;12736:2;12754:53;12799:7;12790:6;12779:9;12775:22;12754:53;;;12744:63;;12715:98;12844:2;12862:53;12907:7;12898:6;12887:9;12883:22;12862:53;;;12852:63;;12823:98;12952:2;12970:52;13014:7;13005:6;12994:9;12990:22;12970:52;;;12960:62;;12931:97;13087:3;13076:9;13072:19;13059:33;-1:-1;;;;;13104:6;13101:30;13098:2;;;13144:1;13141;13134:12;13098:2;13164:62;13218:7;13209:6;13198:9;13194:22;13164:62;;;13154:72;;13038:194;12539:703;;;;;;;;;13249:719;;;;;13412:3;13400:9;13391:7;13387:23;13383:33;13380:2;;;13429:1;13426;13419:12;13380:2;13464:1;13481:53;13526:7;13506:9;13481:53;;;13471:63;;13443:97;13571:2;13589:53;13634:7;13625:6;13614:9;13610:22;13589:53;;;13579:63;;13550:98;13679:2;13697:52;13741:7;13732:6;13721:9;13717:22;13697:52;;;13687:62;;13658:97;13814:2;13803:9;13799:18;13786:32;-1:-1;;;;;13830:6;13827:30;13824:2;;;13870:1;13867;13860:12;13824:2;13890:62;13944:7;13935:6;13924:9;13920:22;13890:62;;13975:613;;;;;14128:3;14116:9;14107:7;14103:23;14099:33;14096:2;;;14145:1;14142;14135:12;14096:2;14180:1;14197:53;14242:7;14222:9;14197:53;;;14187:63;;14159:97;14287:2;14305:52;14349:7;14340:6;14329:9;14325:22;14305:52;;;14295:62;;14266:97;14394:2;14412:52;14456:7;14447:6;14436:9;14432:22;14412:52;;14595:739;;;;;;14765:3;14753:9;14744:7;14740:23;14736:33;14733:2;;;14782:1;14779;14772:12;14733:2;14817:1;14834:53;14879:7;14859:9;14834:53;;;14824:63;;14796:97;14924:2;14942:52;14986:7;14977:6;14966:9;14962:22;14942:52;;;14932:62;;14903:97;15031:2;15049:52;15093:7;15084:6;15073:9;15069:22;15049:52;;;15039:62;;15010:97;15138:2;15156:53;15201:7;15192:6;15181:9;15177:22;15156:53;;;15146:63;;15117:98;15246:3;15265:53;15310:7;15301:6;15290:9;15286:22;15265:53;;15341:574;;;15480:2;15468:9;15459:7;15455:23;15451:32;15448:2;;;15496:1;15493;15486:12;15448:2;15531:31;;-1:-1;;;;;15571:30;;15568:2;;;15614:1;15611;15604:12;15568:2;15634:62;15688:7;15679:6;15668:9;15664:22;15634:62;;;15624:72;;15510:192;15761:2;15750:9;15746:18;15733:32;-1:-1;;;;;15777:6;15774:30;15771:2;;;15817:1;15814;15807:12;15771:2;15837:62;15891:7;15882:6;15871:9;15867:22;15837:62;;15922:317;;16064:2;16052:9;16043:7;16039:23;16035:32;16032:2;;;16080:1;16077;16070:12;16032:2;16115:1;16132:91;16215:7;16195:9;16132:91;;16494:263;;16609:2;16597:9;16588:7;16584:23;16580:32;16577:2;;;16625:1;16622;16615:12;16577:2;16660:1;16677:64;16733:7;16713:9;16677:64;;16764:366;;;16885:2;16873:9;16864:7;16860:23;16856:32;16853:2;;;16901:1;16898;16891:12;16853:2;16936:1;16953:53;16998:7;16978:9;16953:53;;17510:930;;;;;17726:3;17714:9;17705:7;17701:23;17697:33;17694:2;;;17743:1;17740;17733:12;17694:2;17778:1;17795:64;17851:7;17831:9;17795:64;;;17785:74;;17757:108;17896:2;17914:64;17970:7;17961:6;17950:9;17946:22;17914:64;;;17904:74;;17875:109;18036:2;18025:9;18021:18;18015:25;-1:-1;;;;;18052:6;18049:30;18046:2;;;18092:1;18089;18082:12;18046:2;18112:89;18193:7;18184:6;18173:9;18169:22;18112:89;;;18102:99;;17994:213;18259:2;18248:9;18244:18;18238:25;-1:-1;;;;;18275:6;18272:30;18269:2;;;18315:1;18312;18305:12;18269:2;18335:89;18416:7;18407:6;18396:9;18392:22;18335:89;;18447:595;;;;18594:2;18582:9;18573:7;18569:23;18565:32;18562:2;;;18610:1;18607;18600:12;18562:2;18645:1;18662:53;18707:7;18687:9;18662:53;;;18652:63;;18624:97;18752:2;18770:53;18815:7;18806:6;18795:9;18791:22;18770:53;;19050:173;;19137:46;19179:3;19171:6;19137:46;;;-1:-1;;19212:4;19203:14;;19130:93;19232:173;;19319:46;19361:3;19353:6;19319:46;;19612:269;;19745:96;19837:3;19829:6;19745:96;;;-1:-1;;19870:4;19861:14;;19738:143;20184:265;;20339:104;20439:3;20431:6;20339:104;;20640:185;;20733:52;20781:3;20773:6;20733:52;;20833:103;20906:24;20924:5;20906:24;;;20901:3;20894:37;20888:48;;;21340:690;;21485:54;21533:5;21485:54;;;21552:86;21631:6;21626:3;21552:86;;;21545:93;;21659:56;21709:5;21659:56;;;21735:7;21763:1;21748:260;21773:6;21770:1;21767:13;21748:260;;;21840:6;21834:13;21861:63;21920:3;21905:13;21861:63;;;21854:70;;21941:60;21994:6;21941:60;;;21931:70;-1:-1;;21795:1;21788:9;21748:260;;;-1:-1;22021:3;;21464:566;-1:-1;;;;;21464:566;22069:654;;22200:50;22244:5;22200:50;;;22263:76;22332:6;22327:3;22263:76;;;22256:83;;22360:52;22406:5;22360:52;;;22432:7;22460:1;22445:256;22470:6;22467:1;22464:13;22445:256;;;22537:6;22531:13;22558:63;22617:3;22602:13;22558:63;;;22551:70;;22638:56;22687:6;22638:56;;;22628:66;-1:-1;;22492:1;22485:9;22445:256;;22762:690;;22907:54;22955:5;22907:54;;;22974:86;23053:6;23048:3;22974:86;;;22967:93;;23081:56;23131:5;23081:56;;;23157:7;23185:1;23170:260;23195:6;23192:1;23189:13;23170:260;;;23262:6;23256:13;23283:63;23342:3;23327:13;23283:63;;;23276:70;;23363:60;23416:6;23363:60;;;23353:70;-1:-1;;23217:1;23210:9;23170:260;;23491:714;;23644:54;23692:5;23644:54;;;23711:94;23798:6;23793:3;23711:94;;;23704:101;;23826:56;23876:5;23826:56;;;23902:7;23930:1;23915:268;23940:6;23937:1;23934:13;23915:268;;;24007:6;24001:13;24028:71;24095:3;24080:13;24028:71;;;24021:78;;24116:60;24169:6;24116:60;;;24106:70;-1:-1;;23962:1;23955:9;23915:268;;24244:654;;24375:50;24419:5;24375:50;;;24438:76;24507:6;24502:3;24438:76;;;24431:83;;24535:52;24581:5;24535:52;;;24607:7;24635:1;24620:256;24645:6;24642:1;24639:13;24620:256;;;24712:6;24706:13;24733:63;24792:3;24777:13;24733:63;;;24726:70;;24813:56;24862:6;24813:56;;;24803:66;-1:-1;;24667:1;24660:9;24620:256;;24981:838;;25158:73;25225:5;25158:73;;;25244:99;25336:6;25331:3;25244:99;;;25237:106;;25364:75;25433:5;25364:75;;;25459:7;25487:1;25472:325;25497:6;25494:1;25491:13;25472:325;;;25564:6;25558:13;25585:109;25690:3;25675:13;25585:109;;;25578:116;;25711:79;25783:6;25711:79;;;25701:89;-1:-1;;25519:1;25512:9;25472:325;;25902:862;;26087:73;26154:5;26087:73;;;26173:107;26273:6;26268:3;26173:107;;;26166:114;;26301:75;26370:5;26301:75;;;26396:7;26424:1;26409:333;26434:6;26431:1;26428:13;26409:333;;;26501:6;26495:13;26522:117;26635:3;26620:13;26522:117;;;26515:124;;26656:79;26728:6;26656:79;;;26646:89;-1:-1;;26456:1;26449:9;26409:333;;26857:1052;;27052:79;27125:5;27052:79;;;27144:111;27248:6;27243:3;27144:111;;;27137:118;;27278:3;27320:4;27312:6;27308:17;27303:3;27299:27;27347:81;27422:5;27347:81;;;27448:7;27476:1;27461:409;27486:6;27483:1;27480:13;27461:409;;;27548:9;27542:4;27538:20;27533:3;27526:33;27593:6;27587:13;27615:118;27728:4;27713:13;27615:118;;;27607:126;;27750:85;27828:6;27750:85;;;27858:4;27849:14;;;;;27740:95;-1:-1;;27508:1;27501:9;27461:409;;;-1:-1;27883:4;;27031:878;-1:-1;;;;;;;27031:878;27948:690;;28093:54;28141:5;28093:54;;;28160:86;28239:6;28234:3;28160:86;;;28153:93;;28267:56;28317:5;28267:56;;;28343:7;28371:1;28356:260;28381:6;28378:1;28375:13;28356:260;;;28448:6;28442:13;28469:63;28528:3;28513:13;28469:63;;;28462:70;;28549:60;28602:6;28549:60;;;28539:70;-1:-1;;28403:1;28396:9;28356:260;;28677:654;;28808:50;28852:5;28808:50;;;28871:76;28940:6;28935:3;28871:76;;;28864:83;;28968:52;29014:5;28968:52;;;29040:7;29068:1;29053:256;29078:6;29075:1;29072:13;29053:256;;;29145:6;29139:13;29166:63;29225:3;29210:13;29166:63;;;29159:70;;29246:56;29295:6;29246:56;;;29236:66;-1:-1;;29100:1;29093:9;29053:256;;29368:706;;29519:53;29566:5;29519:53;;;29585:93;29671:6;29666:3;29585:93;;;29578:100;;29699:55;29748:5;29699:55;;;29774:7;29802:1;29787:265;29812:6;29809:1;29806:13;29787:265;;;29879:6;29873:13;29900:69;29965:3;29950:13;29900:69;;;29893:76;;29986:59;30038:6;29986:59;;;29976:69;-1:-1;;29834:1;29827:9;29787:265;;30082:103;30155:24;30173:5;30155:24;;30438:343;;30548:38;30580:5;30548:38;;;30598:70;30661:6;30656:3;30598:70;;;30591:77;;30673:52;30718:6;30713:3;30706:4;30699:5;30695:16;30673:52;;;30746:29;30768:6;30746:29;;;30737:39;;;;30528:253;-1:-1;;;30528:253;31814:162;31910:60;31964:5;31910:60;;31983:142;32069:50;32113:5;32069:50;;32132:148;32221:53;32268:5;32221:53;;32450:146;32538:52;32584:5;32538:52;;32765:465;;32925:67;32989:2;32984:3;32925:67;;;33025:66;33005:87;;-1:-1;;;;;33121:2;33112:12;;33105:88;33221:2;33212:12;;32911:319;-1:-1;;32911:319;33239:364;;33399:67;33463:2;33458:3;33399:67;;;33499:66;33479:87;;33594:2;33585:12;;33385:218;-1:-1;;33385:218;33612:465;;33772:67;33836:2;33831:3;33772:67;;;33872:66;33852:87;;-1:-1;;;;;33968:2;33959:12;;33952:88;34068:2;34059:12;;33758:319;-1:-1;;33758:319;34086:364;;34246:67;34310:2;34305:3;34246:67;;;34346:66;34326:87;;34441:2;34432:12;;34232:218;-1:-1;;34232:218;34459:364;;34619:67;34683:2;34678:3;34619:67;;;34719:66;34699:87;;34814:2;34805:12;;34605:218;-1:-1;;34605:218;34832:465;;34992:67;35056:2;35051:3;34992:67;;;35092:66;35072:87;;-1:-1;;;;;35188:2;35179:12;;35172:88;35288:2;35279:12;;34978:319;-1:-1;;34978:319;35306:465;;35466:67;35530:2;35525:3;35466:67;;;35566:66;35546:87;;35667:66;35662:2;35653:12;;35646:88;35762:2;35753:12;;35452:319;-1:-1;;35452:319;35780:364;;35940:67;36004:2;35999:3;35940:67;;;36040:66;36020:87;;36135:2;36126:12;;35926:218;-1:-1;;35926:218;36153:364;;36313:67;36377:2;36372:3;36313:67;;;36413:66;36393:87;;36508:2;36499:12;;36299:218;-1:-1;;36299:218;36526:364;;36686:67;36750:2;36745:3;36686:67;;;36786:66;36766:87;;36881:2;36872:12;;36672:218;-1:-1;;36672:218;36899:465;;37059:67;37123:2;37118:3;37059:67;;;37159:66;37139:87;;-1:-1;;;;;37255:2;37246:12;;37239:88;37355:2;37346:12;;37045:319;-1:-1;;37045:319;37451:1120;37683:22;;37451:1120;;37616:4;37607:14;;;37711:62;37611:3;37683:22;37711:62;;;37636:143;37859:4;37852:5;37848:16;37842:23;37871:63;37928:4;37923:3;37919:14;37905:12;37871:63;;;37789:151;38017:4;38010:5;38006:16;38000:23;38029:63;38086:4;38081:3;38077:14;38063:12;38029:63;;;37950:148;38183:4;38176:5;38172:16;38166:23;38235:3;38229:4;38225:14;38218:4;38213:3;38209:14;38202:38;38255:99;38349:4;38335:12;38255:99;;;38247:107;;38108:258;38441:4;38434:5;38430:16;38424:23;38453:86;38533:4;38528:3;38524:14;38510:12;38453:86;;;-1:-1;38562:4;37589:982;-1:-1;;;37589:982;38578:122;38677:18;;38671:29;38778:1532;39004:22;;38778:1532;;38935:5;38926:15;;;39032:62;38930:3;39004:22;39032:62;;;38956:144;39179:4;39172:5;39168:16;39162:23;39191:63;39248:4;39243:3;39239:14;39225:12;39191:63;;;39110:150;39339:4;39332:5;39328:16;39322:23;39351:63;39408:4;39403:3;39399:14;39385:12;39351:63;;;39270:150;39497:4;39490:5;39486:16;39480:23;39509:61;39564:4;39559:3;39555:14;39541:12;39509:61;;;39430:146;39650:4;39643:5;39639:16;39633:23;39662:61;39717:4;39712:3;39708:14;39694:12;39662:61;;;39586:143;39809:4;39802:5;39798:16;39792:23;39821:63;39878:4;39873:3;39869:14;39855:12;39821:63;;;39739:151;39965:4;39958:5;39954:16;39948:23;39977:76;40047:4;40042:3;40038:14;40024:12;39977:76;;;39900:159;40133:4;40126:5;40122:16;40116:23;40185:3;40179:4;40175:14;40168:4;40163:3;40159:14;40152:38;40205:67;40267:4;40253:12;40205:67;;;40197:75;38908:1402;-1:-1;;;;;38908:1402;40386:655;40596:22;;40519:4;40510:14;;;40624:78;40514:3;40596:22;40624:78;;;40539:169;40788:4;40781:5;40777:16;40771:23;40800:63;40857:4;40852:3;40848:14;40834:12;40800:63;;;40718:151;40945:4;40938:5;40934:16;40928:23;40957:63;41014:4;41009:3;41005:14;40991:12;40957:63;;;40879:147;40492:549;;;;41874:1201;42091:22;;41874:1201;;42023:4;42014:14;;;42119:62;42018:3;42091:22;42119:62;;;42043:144;42262:4;42255:5;42251:16;42245:23;42274:78;42346:4;42341:3;42337:14;42323:12;42274:78;;;42197:161;42433:4;42426:5;42422:16;42416:23;42485:3;42479:4;42475:14;42468:4;42463:3;42459:14;42452:38;42505:67;42567:4;42553:12;42505:67;;;42497:75;;42368:216;42660:4;42653:5;42649:16;42643:23;42672:63;42729:4;42724:3;42720:14;42706:12;42672:63;;;42594:147;42820:4;42813:5;42809:16;42803:23;42872:3;42866:4;42862:14;42855:4;42850:3;42846:14;42839:38;42892:145;43032:4;43018:12;42892:145;;43145:1249;43370:22;;43145:1249;;43302:4;43293:14;;;43398:70;43297:3;43370:22;43398:70;;;43322:152;43549:4;43542:5;43538:16;43532:23;43561:86;43641:4;43636:3;43632:14;43618:12;43561:86;;;43484:169;43728:4;43721:5;43717:16;43711:23;43780:3;43774:4;43770:14;43763:4;43758:3;43754:14;43747:38;43800:75;43870:4;43856:12;43800:75;;;43792:83;;43663:224;43963:4;43956:5;43952:16;43946:23;43975:71;44040:4;44035:3;44031:14;44017:12;43975:71;;;43897:155;44131:4;44124:5;44120:16;44114:23;44183:3;44177:4;44173:14;44166:4;44161:3;44157:14;44150:38;44203:153;44351:4;44337:12;44203:153;;44478:1020;44705:22;;44478:1020;;44627:4;44618:14;;;44733:62;44622:3;44705:22;44733:62;;;44647:154;44877:4;44870:5;44866:16;44860:23;44929:3;44923:4;44919:14;44912:4;44907:3;44903:14;44896:38;44949:99;45043:4;45029:12;44949:99;;;44941:107;;44811:249;45135:4;45128:5;45124:16;45118:23;45187:3;45181:4;45177:14;45170:4;45165:3;45161:14;45154:38;45207:99;45301:4;45287:12;45207:99;;;45199:107;;45070:248;45391:4;45384:5;45380:16;45374:23;45403:63;45460:4;45455:3;45451:14;45437:12;45403:63;;45981:100;46052:23;46069:5;46052:23;;46328:213;46446:2;46431:18;;46460:71;46435:9;46504:6;46460:71;;46548:408;46712:2;46697:18;;46726:71;46701:9;46770:6;46726:71;;;46845:9;46839:4;46835:20;46830:2;46819:9;46815:18;46808:48;46870:76;46941:4;46932:6;46870:76;;46963:468;47157:2;47142:18;;47171:71;47146:9;47215:6;47171:71;;;47290:9;47284:4;47280:20;47275:2;47264:9;47260:18;47253:48;47315:106;47416:4;47407:6;47315:106;;47438:361;47606:2;47620:47;;;47591:18;;47681:108;47591:18;47775:6;47681:108;;47806:620;48052:2;48066:47;;;48037:18;;48127:108;48037:18;48221:6;48127:108;;;48119:116;;48283:9;48277:4;48273:20;48268:2;48257:9;48253:18;48246:48;48308:108;48411:4;48402:6;48308:108;;48433:361;48601:2;48615:47;;;48586:18;;48676:108;48586:18;48770:6;48676:108;;48801:461;49019:2;49033:47;;;49004:18;;49094:158;49004:18;49238:6;49094:158;;49269:516;49459:2;49473:47;;;49444:18;;49534:84;49444:18;49604:6;49534:84;;;49526:92;;49666:9;49660:4;49656:20;49651:2;49640:9;49636:18;49629:48;49691:84;49770:4;49761:6;49691:84;;49792:407;49983:2;49997:47;;;49968:18;;50058:131;49968:18;50058:131;;50206:407;50397:2;50411:47;;;50382:18;;50472:131;50382:18;50472:131;;50620:407;50811:2;50825:47;;;50796:18;;50886:131;50796:18;50886:131;;51034:407;51225:2;51239:47;;;51210:18;;51300:131;51210:18;51300:131;;51448:407;51639:2;51653:47;;;51624:18;;51714:131;51624:18;51714:131;;51862:407;52053:2;52067:47;;;52038:18;;52128:131;52038:18;52128:131;;52276:407;52467:2;52481:47;;;52452:18;;52542:131;52452:18;52542:131;;52690:407;52881:2;52895:47;;;52866:18;;52956:131;52866:18;52956:131;;53104:407;53295:2;53309:47;;;53280:18;;53370:131;53280:18;53370:131;;53518:407;53709:2;53723:47;;;53694:18;;53784:131;53694:18;53784:131;;53932:407;54123:2;54137:47;;;54108:18;;54198:131;54108:18;54198:131;;54346:389;54528:2;54542:47;;;54513:18;;54603:122;54513:18;54711:6;54603:122;;54742:269;54888:2;54873:18;;54902:99;54877:9;54974:6;54902:99;;55018:388;55192:2;55177:18;;55206:99;55181:9;55278:6;55206:99;;;55316:80;55392:2;55381:9;55377:18;55368:6;55316:80;;;55163:243;;;;;;55413:795;55679:3;55664:19;;55694:99;55668:9;55766:6;55694:99;;;55804:80;55880:2;55869:9;55865:18;55856:6;55804:80;;;55932:9;55926:4;55922:20;55917:2;55906:9;55902:18;55895:48;55957:84;56036:4;56027:6;55957:84;;;55949:92;;56089:9;56083:4;56079:20;56074:2;56063:9;56059:18;56052:48;56114:84;56193:4;56184:6;56114:84;;;56106:92;55650:558;-1:-1;;;;;;55650:558;56215:507;56417:2;56402:18;;56431:99;56406:9;56503:6;56431:99;;;56541:80;56617:2;56606:9;56602:18;56593:6;56541:80;;;56632;56708:2;56697:9;56693:18;56684:6;56632:80;;56729:1183;57133:3;57118:19;;57148:99;57122:9;57220:6;57148:99;;;57295:9;57289:4;57285:20;57280:2;57269:9;57265:18;57258:48;57320:116;57431:4;57422:6;57320:116;;;57312:124;;57484:9;57478:4;57474:20;57469:2;57458:9;57454:18;57447:48;57509:114;57618:4;57609:6;57509:114;;;57501:122;;57671:9;57665:4;57661:20;57656:2;57645:9;57641:18;57634:48;57696:114;57805:4;57796:6;57696:114;;;57688:122;;57821:81;57897:3;57886:9;57882:19;57873:6;57821:81;;57919:388;58093:2;58078:18;;58107:99;58082:9;58179:6;58107:99;;;58217:80;58293:2;58282:9;58278:18;58269:6;58217:80;;58314:1391;58718:3;58703:19;;58733:99;58707:9;58805:6;58733:99;;;58843:80;58919:2;58908:9;58904:18;58895:6;58843:80;;;58934;59010:2;58999:9;58995:18;58986:6;58934:80;;;59025;59101:2;59090:9;59086:18;59077:6;59025:80;;;59116:81;59192:3;59181:9;59177:19;59168:6;59116:81;;;59246:9;59240:4;59236:20;59230:3;59219:9;59215:19;59208:49;59271:84;59350:4;59341:6;59271:84;;;59263:92;;59366:81;59442:3;59431:9;59427:19;59418:6;59366:81;;;59458:79;59532:3;59521:9;59517:19;59508:6;59458:79;;;59586:9;59580:4;59576:20;59570:3;59559:9;59555:19;59548:49;59611:84;59690:4;59681:6;59611:84;;;59603:92;58689:1016;-1:-1;;;;;;;;;;;58689:1016;59712:947;60014:3;59999:19;;60029:99;60003:9;60101:6;60029:99;;;60139:80;60215:2;60204:9;60200:18;60191:6;60139:80;;;60230;60306:2;60295:9;60291:18;60282:6;60230:80;;;60321;60397:2;60386:9;60382:18;60373:6;60321:80;;;60412:79;60486:3;60475:9;60471:19;60462:6;60412:79;;;60540:9;60534:4;60530:20;60524:3;60513:9;60509:19;60502:49;60565:84;60644:4;60635:6;60565:84;;;60557:92;59985:674;-1:-1;;;;;;;;59985:674;60666:827;60940:3;60925:19;;60955:99;60929:9;61027:6;60955:99;;;61065:80;61141:2;61130:9;61126:18;61117:6;61065:80;;;61156;61232:2;61221:9;61217:18;61208:6;61156:80;;;61247:78;61321:2;61310:9;61306:18;61297:6;61247:78;;;61374:9;61368:4;61364:20;61358:3;61347:9;61343:19;61336:49;61399:84;61478:4;61469:6;61399:84;;;61391:92;60911:582;-1:-1;;;;;;;60911:582;61500:739;61754:3;61739:19;;61769:99;61743:9;61841:6;61769:99;;;61879:80;61955:2;61944:9;61940:18;61931:6;61879:80;;;61970:78;62044:2;62033:9;62029:18;62020:6;61970:78;;;62059;62133:2;62122:9;62118:18;62109:6;62059:78;;;62148:81;62224:3;62213:9;62209:19;62200:6;62148:81;;62246:859;62528:3;62513:19;;62543:99;62517:9;62615:6;62543:99;;;62653:80;62729:2;62718:9;62714:18;62705:6;62653:80;;;62744:78;62818:2;62807:9;62803:18;62794:6;62744:78;;;62833;62907:2;62896:9;62892:18;62883:6;62833:78;;;62922:81;62998:3;62987:9;62983:19;62974:6;62922:81;;;63014;63090:3;63079:9;63075:19;63066:6;63014:81;;63507:507;63709:2;63694:18;;63723:99;63698:9;63795:6;63723:99;;;63833:80;63909:2;63898:9;63894:18;63885:6;63833:80;;64535:711;64783:3;64768:19;;64798:99;64772:9;64870:6;64798:99;;;64908:80;64984:2;64973:9;64969:18;64960:6;64908:80;;;64999;65075:2;65064:9;65060:18;65051:6;64999:80;;;65127:9;65121:4;65117:20;65112:2;65101:9;65097:18;65090:48;65152:84;65231:4;65222:6;65152:84;;65253:373;65427:2;65441:47;;;65412:18;;65502:114;65412:18;65602:6;65502:114;;65633:357;65799:2;65813:47;;;65784:18;;65874:106;65784:18;65966:6;65874:106;;65997:492;66199:2;66213:47;;;66184:18;;66274:114;66184:18;66374:6;66274:114;;;66266:122;;66399:80;66475:2;66464:9;66460:18;66451:6;66399:80;;66496:213;66614:2;66599:18;;66628:71;66603:9;66672:6;66628:71;;66716:843;67018:3;67003:19;;67033:71;67007:9;67077:6;67033:71;;;67115:72;67183:2;67172:9;67168:18;67159:6;67115:72;;;67235:9;67229:4;67225:20;67220:2;67209:9;67205:18;67198:48;67260:108;67363:4;67354:6;67260:108;;;67252:116;;67416:9;67410:4;67406:20;67401:2;67390:9;67386:18;67379:48;67441:108;67544:4;67535:6;67441:108;;67566:256;67628:2;67622:9;67654:17;;;-1:-1;;;;;67714:34;;67750:22;;;67711:62;67708:2;;;67786:1;67783;67776:12;67708:2;67802;67795:22;67606:216;;-1:-1;67606:216;67829:258;;-1:-1;;;;;67980:6;67977:30;67974:2;;;68020:1;68017;68010:12;67974:2;-1:-1;68049:4;68037:17;;;68067:15;;67911:176;68888:258;;-1:-1;;;;;69023:6;69020:30;69017:2;;;69063:1;69060;69053:12;69017:2;-1:-1;69136:4;69107;69084:17;;;;-1:-1;;69080:33;69126:15;;68954:192;69156:119;69262:4;69250:17;;69230:45;69847:137;69970:6;69950:34;70397:103;70483:12;;70467:33;70978:123;-1:-1;71093:3;;71077:24;72884:168;72992:19;;;73041:4;73032:14;;72985:67;75800:91;;75862:24;75880:5;75862:24;;75977:156;76064:5;76070:58;76064:5;76070:58;;76140:136;76217:5;76223:48;76217:5;76223:48;;76283:142;76363:5;76369:51;76363:5;76369:51;;76432:140;76511:5;76517:50;76511:5;76517:50;;76579:121;-1:-1;;;;;76641:54;;76624:76;76786:96;-1:-1;;;;;76847:30;;76830:52;76889:156;;76991:49;77034:5;76991:49;;77052:136;;77144:39;77177:5;77144:39;;77195:142;;77290:42;77326:5;77290:42;;77344:140;;77438:41;77473:5;77438:41;;77492:145;77573:6;77568:3;77563;77550:30;-1:-1;77629:1;77611:16;;77604:27;77543:94;77646:268;77711:1;77718:101;77732:6;77729:1;77726:13;77718:101;;;77799:11;;;77793:18;77780:11;;;77773:39;77754:2;77747:10;77718:101;;;77834:6;77831:1;77828:13;77825:2;;;-1:-1;;77899:1;77881:16;;77874:27;77695:219;77922:97;78010:2;77990:14;-1:-1;;77986:28;;77970:49;78027:116;78121:1;78114:5;78111:12;78101:2;;78127:9;78101:2;78095:48;;78150:106;78234:1;78227:5;78224:12;78214:2;;78240:9;78263:109;78350:1;78343:5;78340:12;78330:2;;78356:9;78379:108;78465:1;78458:5;78455:12;78445:2;;78471:9;78494:117;78563:24;78581:5;78563:24;;;78556:5;78553:35;78543:2;;78602:1;78599;78592:12;78618:117;78687:24;78705:5;78687:24;;78742:112;78829:1;78822:5;78819:12;78809:2;;78845:1;78842;78835:12;78985:115;79053:23;79070:5;79053:23;","source":"pragma solidity ^0.5.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\"openzeppelin-solidity/contracts/math/SafeMath.sol\\";\\nimport \\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\";\\nimport \\"./utils/SolRsaVerify.sol\\";\\n\\nimport { WorkersImpl } from \\"./impl/WorkersImpl.sol\\";\\nimport { PrincipalImpl } from \\"./impl/PrincipalImpl.sol\\";\\nimport { TaskImpl } from \\"./impl/TaskImpl.sol\\";\\nimport { SecretContractImpl } from \\"./impl/SecretContractImpl.sol\\";\\nimport { EnigmaCommon } from \\"./impl/EnigmaCommon.sol\\";\\nimport { EnigmaState } from \\"./impl/EnigmaState.sol\\";\\nimport { EnigmaEvents } from \\"./impl/EnigmaEvents.sol\\";\\nimport { EnigmaStorage } from \\"./impl/EnigmaStorage.sol\\";\\nimport { Getters } from \\"./impl/Getters.sol\\";\\nimport { ERC20 } from \\"./interfaces/ERC20.sol\\";\\n\\ncontract Enigma is EnigmaStorage, EnigmaEvents, Getters {\\n    using SafeMath for uint256;\\n    using ECDSA for bytes32;\\n\\n    // ========================================== Constructor ==========================================\\n\\n    constructor(address _tokenAddress, address _principal, uint _epochSize) public {\\n        state.engToken = ERC20(_tokenAddress);\\n        state.epochSize = _epochSize;\\n        state.taskTimeoutSize = 200;\\n        state.principal = _principal;\\n        state.stakingThreshold = 1;\\n        state.workerGroupSize = 1;\\n    }\\n\\n    // ========================================== Modifiers ==========================================\\n\\n    /**\\n    * Checks if the custodian wallet is registered as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerRegistered(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status != EnigmaCommon.WorkerStatus.Unregistered, \\"Unregistered worker\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged in as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedIn, \\"Worker not logged in\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged out as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedOut(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not logged out\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if worker can log in\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canLogIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(getFirstBlockNumber(block.number) != 0, \\"Principal node has not been initialized\\");\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        require(worker.balance >= state.stakingThreshold, \\"Worker\'s balance is not sufficient\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the worker can withdraw\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canWithdraw(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        EnigmaCommon.WorkerLog memory workerLog = WorkersImpl.getLatestWorkerLogImpl(worker, block.number);\\n        require(workerLog.workerEventType == EnigmaCommon.WorkerLogType.LogOut,\\n            \\"Worker\'s last log is not of LogOut type\\");\\n        require(getFirstBlockNumber(block.number) > workerLog.blockNumber,\\n            \\"Cannot withdraw in same epoch as log out event\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has not been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractUndefined(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Undefined, \\"Secret contract already deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractDeployed(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Deployed, \\"Secret contract not deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks task record has been created and is still pending receipt\\n    *\\n    * @param _taskId Task ID\\n    */\\n    modifier taskWaiting(bytes32 _taskId) {\\n        require(state.tasks[_taskId].status == EnigmaCommon.TaskStatus.RecordCreated, \\"Task is not waiting\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure signing key used for registration is unique\\n    *\\n    * @param _signer Signing key\\n    */\\n    modifier isUniqueSigningKey(address _signer) {\\n        for (uint i = 0; i < state.workerAddresses.length; i++) {\\n            require(state.workers[state.workerAddresses[i]].signer != _signer, \\"Not a unique signing key\\");\\n        }\\n        _;\\n    }\\n\\n    // ========================================== Functions ==========================================\\n\\n    /**\\n    * Registers a new worker or change the signer parameters of an existing\\n    * worker. This should be called by every worker (and the principal)\\n    * node in order to receive tasks.\\n    *\\n    * @param _signer The signer address, derived from the enclave public key\\n    * @param _report The RLP encoded report returned by the IAS\\n    * @param _signature Signature\\n    */\\n    function register(address _signer, bytes memory _report, bytes memory _signature)\\n    public\\n    isUniqueSigningKey(_signer)\\n    {\\n        WorkersImpl.registerImpl(state, _signer, _report, _signature);\\n    }\\n//\\n    /**\\n    * Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    *\\n    * @param _custodian The worker\'s ETH address\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function deposit(address _custodian, uint _amount)\\n    public\\n    workerRegistered(_custodian)\\n    {\\n        WorkersImpl.depositImpl(state, _custodian, _amount);\\n    }\\n\\n    /**\\n    * Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    *\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function withdraw(uint _amount)\\n    public\\n    canWithdraw(msg.sender)\\n    {\\n        WorkersImpl.withdrawImpl(state, _amount);\\n    }\\n\\n    /**\\n    * Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\n    * selection process.\\n    */\\n    function login() public canLogIn(msg.sender) {\\n        WorkersImpl.loginImpl(state);\\n    }\\n\\n    /**\\n    * Logout worker. Worker must be logged in to do so.\\n    */\\n    function logout() public workerLoggedIn(msg.sender) {\\n        WorkersImpl.logoutImpl(state);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContractFailure(\\n        bytes32 _taskId,\\n        bytes32 _codeHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractFailureImpl(state, _taskId, _codeHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _preCodeHash Predeployed bytecode hash\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContract(\\n        bytes32 _taskId,\\n        bytes32 _preCodeHash,\\n        bytes32 _codeHash,\\n        bytes32 _initStateDeltaHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractImpl(state, _taskId, _preCodeHash, _codeHash, _initStateDeltaHash,\\n            _optionalEthereumData, _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Check if secret contract has been deployed\\n    *\\n    * @return  Number of deployed secret contracts\\n    */\\n    function countSecretContracts()\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return SecretContractImpl.countSecretContractsImpl(state);\\n    }\\n\\n    /**\\n    * Get deployed secret contract addresses within a range\\n    *\\n    * @param _start Start of range\\n    * @param _stop End of range\\n    * @return Subset of deployed secret contract addresses\\n    */\\n    function getSecretContractAddresses(uint _start, uint _stop)\\n    public\\n    view\\n    returns (bytes32[] memory)\\n    {\\n        return SecretContractImpl.getSecretContractAddressesImpl(state, _start, _stop);\\n    }\\n\\n    /**\\n    * Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\n    * generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\n    * task deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\n    * the on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\n    * invalid.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    * @param _nonce Locally-computed nonce value for this deployment\\n    */\\n    function createDeploymentTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber,\\n        uint _nonce\\n    )\\n    public\\n    {\\n        TaskImpl.createDeploymentTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber, _nonce);\\n    }\\n\\n    /**\\n    * Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\n    * contract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\n    * the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    {\\n        TaskImpl.createTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\n    * transferring task fee from sender to contract, generating the unique taskId, saving the block number\\n    * when the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimits ENG gas limit\\n    * @param _gasPxs ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecords(\\n        bytes32[] memory _inputsHashes,\\n        uint64[] memory _gasLimits,\\n        uint64[] memory _gasPxs,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    {\\n        TaskImpl.createTaskRecordsImpl(state, _inputsHashes, _gasLimits, _gasPxs, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\n    * The task record is finalized and the worker is credited with the task fee.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _stateDeltaHash Input state delta hash\\n    * @param _outputHash Output state hash\\n    * @param _optionalEthereumData Output state hash\\n    * @param _optionalEthereumContractAddress Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitReceipt(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _stateDeltaHash,\\n        bytes32 _outputHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitReceiptImpl(state, _scAddr, _taskId, _stateDeltaHash, _outputHash, _optionalEthereumData,\\n            _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\n    * updated to indicate task failure.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _outputHash Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitTaskFailure(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _outputHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitTaskFailureImpl(state, _scAddr, _taskId, _outputHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    *\\n    * @param _taskId Unique taskId\\n    */\\n    function returnFeesForTask(bytes32 _taskId)\\n    public\\n    taskWaiting(_taskId)\\n    {\\n        TaskImpl.returnFeesForTaskImpl(state, _taskId);\\n    }\\n\\n    /**\\n    * Reparameterizing workers with a new seed\\n    * This should be called for each epoch by the Principal node\\n    *\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n    * @param _seed The random integer generated by the enclave\\n    * @param _sig Principal node\'s signature\\n    */\\n    function setWorkersParams(uint _blockNumber, uint _seed, bytes memory _sig)\\n    public\\n    workerRegistered(msg.sender)\\n    {\\n        PrincipalImpl.setWorkersParamsImpl(state, _blockNumber, _seed, _sig);\\n    }\\n\\n    /**\\n    * Get active workers before a certain block number\\n    *\\n    * @param _blockNumber Block number\\n    */\\n    function getActiveWorkers(uint _blockNumber)\\n    public\\n    view\\n    returns (address[] memory, uint[] memory)\\n    {\\n        return PrincipalImpl.getActiveWorkersImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get the first block number of an epoch that a given block number belongs to\\n    *\\n    * @param _blockNumber Block number\\n    * @return Block number\\n    */\\n    function getFirstBlockNumber(uint _blockNumber)\\n    public\\n    view\\n    returns (uint) {\\n        return WorkersImpl.getFirstBlockNumberImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get worker params for an epoch given a particular block number\\n    *\\n    * @param _blockNumber Block number\\n    * @return Epoch\'s first block number\\n    * @return Seed\\n    * @return Array of worker\'s signing addresses\\n    * @return Array of worker\'s stakes\\n    */\\n    function getWorkerParams(uint _blockNumber)\\n    public\\n    view\\n    returns (uint, uint, address[] memory, uint[] memory) {\\n        return WorkersImpl.getWorkerParamsImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\n    * and the secret contract address.\\n    *\\n    * @param _blockNumber Block number the task record was mined\\n    * @param _scAddr Secret contract address\\n    * @return Selected workers\' addresses\\n    */\\n    function getWorkerGroup(uint _blockNumber, bytes32 _scAddr)\\n    public\\n    view\\n    returns (address[] memory)\\n    {\\n        return WorkersImpl.getWorkerGroupImpl(state, _blockNumber, _scAddr);\\n    }\\n\\n    /**\\n    * The RLP encoded report returned by the IAS server\\n    *\\n    * @param _custodian The worker\'s custodian address\\n    */\\n    function getReport(address _custodian)\\n    public\\n    view\\n    workerRegistered(_custodian)\\n    returns (address, bytes memory)\\n    {\\n        return WorkersImpl.getReportImpl(state, _custodian);\\n    }\\n\\n    /**\\n    * This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n    * @param _data The report itself\\n    * @param _signature The signature of the report\\n    */\\n    function verifyReport(bytes memory _data, bytes memory _signature)\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return WorkersImpl.verifyReportImpl(_data, _signature);\\n    }\\n}\\n","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[829]},"id":830,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":830,"sourceUnit":12517,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":830,"sourceUnit":12389,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":5,"nodeType":"ImportDirective","scope":830,"sourceUnit":12308,"src":"184:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":7,"nodeType":"ImportDirective","scope":830,"sourceUnit":9481,"src":"220:53:0","symbolAliases":[{"foreign":6,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":9,"nodeType":"ImportDirective","scope":830,"sourceUnit":3177,"src":"274:57:0","symbolAliases":[{"foreign":8,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":11,"nodeType":"ImportDirective","scope":830,"sourceUnit":6139,"src":"332:47:0","symbolAliases":[{"foreign":10,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":13,"nodeType":"ImportDirective","scope":830,"sourceUnit":3817,"src":"380:67:0","symbolAliases":[{"foreign":12,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":15,"nodeType":"ImportDirective","scope":830,"sourceUnit":2289,"src":"448:55:0","symbolAliases":[{"foreign":14,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":17,"nodeType":"ImportDirective","scope":830,"sourceUnit":2477,"src":"504:53:0","symbolAliases":[{"foreign":16,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":19,"nodeType":"ImportDirective","scope":830,"sourceUnit":2430,"src":"558:55:0","symbolAliases":[{"foreign":18,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":21,"nodeType":"ImportDirective","scope":830,"sourceUnit":2485,"src":"614:57:0","symbolAliases":[{"foreign":20,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":23,"nodeType":"ImportDirective","scope":830,"sourceUnit":2650,"src":"672:45:0","symbolAliases":[{"foreign":22,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":25,"nodeType":"ImportDirective","scope":830,"sourceUnit":10466,"src":"718:47:0","symbolAliases":[{"foreign":24,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":26,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2484,"src":"786:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2484","typeString":"contract EnigmaStorage"}},"id":27,"nodeType":"InheritanceSpecifier","src":"786:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":28,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2429,"src":"801:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2429","typeString":"contract EnigmaEvents"}},"id":29,"nodeType":"InheritanceSpecifier","src":"801:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":30,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2649,"src":"815:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2649","typeString":"contract Getters"}},"id":31,"nodeType":"InheritanceSpecifier","src":"815:7:0"}],"contractDependencies":[2429,2484,2649],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":829,"linearizedBaseContracts":[829,2649,2429,2484],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":34,"libraryName":{"contractScope":null,"id":32,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":12516,"src":"835:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$12516","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"829:27:0","typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":37,"libraryName":{"contractScope":null,"id":35,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":12388,"src":"867:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$12388","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"861:24:0","typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":84,"nodeType":"Block","src":"1076:238:0","statements":[{"expression":{"argumentTypes":null,"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":46,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1086:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":48,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2438,"src":"1086:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10465","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":50,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1109:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10465,"src":"1103:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$10465_$","typeString":"type(contract ERC20)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1103:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10465","typeString":"contract ERC20"}},"src":"1086:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10465","typeString":"contract ERC20"}},"id":53,"nodeType":"ExpressionStatement","src":"1086:37:0"},{"expression":{"argumentTypes":null,"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":54,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1133:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":56,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2440,"src":"1133:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":57,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"1151:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1133:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":59,"nodeType":"ExpressionStatement","src":"1133:28:0"},{"expression":{"argumentTypes":null,"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":60,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1171:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":62,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2442,"src":"1171:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"323030","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1195:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"src":"1171:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":65,"nodeType":"ExpressionStatement","src":"1171:27:0"},{"expression":{"argumentTypes":null,"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":66,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1208:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":68,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2444,"src":"1208:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":69,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"1226:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1208:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":71,"nodeType":"ExpressionStatement","src":"1208:28:0"},{"expression":{"argumentTypes":null,"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":72,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1246:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2472,"src":"1246:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1271:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1246:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":77,"nodeType":"ExpressionStatement","src":"1246:26:0"},{"expression":{"argumentTypes":null,"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":78,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1282:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":80,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2474,"src":"1282:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1306:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1282:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":83,"nodeType":"ExpressionStatement","src":"1282:25:0"}]},"documentation":null,"id":85,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":85,"src":"1009:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":41,"name":"_principal","nodeType":"VariableDeclaration","scope":85,"src":"1032:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40,"name":"address","nodeType":"ElementaryTypeName","src":"1032:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":43,"name":"_epochSize","nodeType":"VariableDeclaration","scope":85,"src":"1052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint","nodeType":"ElementaryTypeName","src":"1052:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1008:60:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"1076:0:0"},"scope":829,"src":"997:317:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":109,"nodeType":"Block","src":"1604:181:0","statements":[{"assignments":[92],"declarations":[{"constant":false,"id":92,"name":"worker","nodeType":"VariableDeclaration","scope":109,"src":"1614:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":91,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2136,"src":"1614:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":97,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":93,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1650:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":94,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"1650:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2136_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":96,"indexExpression":{"argumentTypes":null,"id":95,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"1664:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1650:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1614:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":99,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"1688:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"1688:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":101,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"1705:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"1705:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2177_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1705:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1688:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1745:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":98,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"1680:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1680:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":107,"nodeType":"ExpressionStatement","src":"1680:87:0"},{"id":108,"nodeType":"PlaceholderStatement","src":"1777:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":110,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"name":"_user","nodeType":"VariableDeclaration","scope":110,"src":"1589:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"1589:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1588:15:0"},"src":"1563:222:0","visibility":"internal"},{"body":{"id":134,"nodeType":"Block","src":"1968:178:0","statements":[{"assignments":[117],"declarations":[{"constant":false,"id":117,"name":"worker","nodeType":"VariableDeclaration","scope":134,"src":"1978:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":116,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2136,"src":"1978:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":122,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":118,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2014:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"2014:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2136_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":121,"indexExpression":{"argumentTypes":null,"id":120,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2028:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2014:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1978:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":124,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2052:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"2052:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":126,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"2069:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"2069:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2177_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2069:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2052:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2105:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"2044:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2044:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":132,"nodeType":"ExpressionStatement","src":"2044:84:0"},{"id":133,"nodeType":"PlaceholderStatement","src":"2138:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":135,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"name":"_user","nodeType":"VariableDeclaration","scope":135,"src":"1953:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"1953:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1952:15:0"},"src":"1929:217:0","visibility":"internal"},{"body":{"id":159,"nodeType":"Block","src":"2331:180:0","statements":[{"assignments":[142],"declarations":[{"constant":false,"id":142,"name":"worker","nodeType":"VariableDeclaration","scope":159,"src":"2341:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":141,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2136,"src":"2341:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":147,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":143,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2377:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"2377:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2136_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":146,"indexExpression":{"argumentTypes":null,"id":145,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2391:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2377:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2341:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":149,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2415:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"2415:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":151,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"2432:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"2432:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2177_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2432:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2415:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2469:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"2407:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2407:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":157,"nodeType":"ExpressionStatement","src":"2407:86:0"},{"id":158,"nodeType":"PlaceholderStatement","src":"2503:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":160,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"name":"_user","nodeType":"VariableDeclaration","scope":160,"src":"2316:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2315:15:0"},"src":"2291:220:0","visibility":"internal"},{"body":{"id":203,"nodeType":"Block","src":"2660:395:0","statements":[{"assignments":[167],"declarations":[{"constant":false,"id":167,"name":"worker","nodeType":"VariableDeclaration","scope":203,"src":"2670:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":166,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2136,"src":"2670:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":172,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":168,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2706:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"2706:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2136_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":171,"indexExpression":{"argumentTypes":null,"id":170,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2720:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2706:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2670:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":175,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13080,"src":"2764:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2764:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":174,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"2744:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2744:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2781:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2744:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2784:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":173,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"2736:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":182,"nodeType":"ExpressionStatement","src":"2736:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":184,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2844:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"2844:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":186,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"2861:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"2861:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2177_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2861:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2844:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2898:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"2836:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2836:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":192,"nodeType":"ExpressionStatement","src":"2836:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":194,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2958:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2132,"src":"2958:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":196,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2976:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2472,"src":"2976:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2958:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3000:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"2950:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2950:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"ExpressionStatement","src":"2950:87:0"},{"id":202,"nodeType":"PlaceholderStatement","src":"3047:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":204,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"name":"_user","nodeType":"VariableDeclaration","scope":204,"src":"2645:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"2645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2644:15:0"},"src":"2627:428:0","visibility":"internal"},{"body":{"id":260,"nodeType":"Block","src":"3213:580:0","statements":[{"assignments":[211],"declarations":[{"constant":false,"id":211,"name":"worker","nodeType":"VariableDeclaration","scope":260,"src":"3223:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":210,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2136,"src":"3223:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":216,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":212,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"3259:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"3259:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2136_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":215,"indexExpression":{"argumentTypes":null,"id":214,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"3273:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3259:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3223:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":218,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3297:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"3297:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":220,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"3314:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"3314:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2177_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3314:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3297:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3351:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"3289:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3289:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":226,"nodeType":"ExpressionStatement","src":"3289:104:0"},{"assignments":[230],"declarations":[{"constant":false,"id":230,"name":"workerLog","nodeType":"VariableDeclaration","scope":260,"src":"3403:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2154_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":229,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2154,"src":"3403:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2154_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":237,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":233,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3480:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":234,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13080,"src":"3488:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3488:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":231,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"3445:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":9479,"src":"3445:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2136_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2154_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3445:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2154_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3403:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2185","typeString":"enum EnigmaCommon.WorkerLogType"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":239,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3519:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2154_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2149,"src":"3519:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2185","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":241,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"3548:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2185,"src":"3548:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2185_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3548:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2185","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3519:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3595:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"3511:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3511:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"ExpressionStatement","src":"3511:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":250,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13080,"src":"3675:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3675:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":249,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"3655:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3655:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":253,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3691:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2154_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2151,"src":"3691:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3655:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3726:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"3647:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3647:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":258,"nodeType":"ExpressionStatement","src":"3647:128:0"},{"id":259,"nodeType":"PlaceholderStatement","src":"3785:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":261,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"name":"_user","nodeType":"VariableDeclaration","scope":261,"src":"3198:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"3198:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3197:15:0"},"src":"3177:616:0","visibility":"internal"},{"body":{"id":279,"nodeType":"Block","src":"3960:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2180","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":266,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"3978:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2466,"src":"3978:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2166_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":269,"indexExpression":{"argumentTypes":null,"id":268,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3994:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3978:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2166_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"3978:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2180","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":271,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"4013:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2180,"src":"4013:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2180_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4013:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2180","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"3978:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4058:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"3970:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3970:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":277,"nodeType":"ExpressionStatement","src":"3970:123:0"},{"id":278,"nodeType":"PlaceholderStatement","src":"4103:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":280,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"name":"_scAddr","nodeType":"VariableDeclaration","scope":280,"src":"3943:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3943:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3942:17:0"},"src":"3916:195:0","visibility":"internal"},{"body":{"id":298,"nodeType":"Block","src":"4273:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2180","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":285,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"4291:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2466,"src":"4291:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2166_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":288,"indexExpression":{"argumentTypes":null,"id":287,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"4307:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4291:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2166_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"4291:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2180","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":290,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"4326:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2180,"src":"4326:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2180_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4326:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2180","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4291:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4370:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"4283:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4283:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":296,"nodeType":"ExpressionStatement","src":"4283:118:0"},{"id":297,"nodeType":"PlaceholderStatement","src":"4411:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":299,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"name":"_scAddr","nodeType":"VariableDeclaration","scope":299,"src":"4256:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4256:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4255:17:0"},"src":"4230:189:0","visibility":"internal"},{"body":{"id":317,"nodeType":"Block","src":"4584:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2173","typeString":"enum EnigmaCommon.TaskStatus"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":304,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"4602:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2462,"src":"4602:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2124_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":307,"indexExpression":{"argumentTypes":null,"id":306,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"4614:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4602:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2124_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"4602:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2173","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":309,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"4633:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2173,"src":"4633:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2173_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4633:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2173","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4602:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"4594:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4594:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":315,"nodeType":"ExpressionStatement","src":"4594:100:0"},{"id":316,"nodeType":"PlaceholderStatement","src":"4704:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":318,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"name":"_taskId","nodeType":"VariableDeclaration","scope":318,"src":"4567:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4567:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4566:17:0"},"src":"4546:166:0","visibility":"internal"},{"body":{"id":351,"nodeType":"Block","src":"4874:202:0","statements":[{"body":{"id":348,"nodeType":"Block","src":"4940:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":335,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"4962:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"4962:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2136_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":341,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":337,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"4976:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2451,"src":"4976:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":340,"indexExpression":{"argumentTypes":null,"id":339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4998:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4976:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4962:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2126,"src":"4962:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":343,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"5012:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4962:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5021:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":334,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"4954:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4954:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"ExpressionStatement","src":"4954:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":326,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4901:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":327,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"4905:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2451,"src":"4905:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4905:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4901:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":349,"initializationExpression":{"assignments":[323],"declarations":[{"constant":false,"id":323,"name":"i","nodeType":"VariableDeclaration","scope":349,"src":"4889:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint","nodeType":"ElementaryTypeName","src":"4889:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":325,"initialValue":{"argumentTypes":null,"hexValue":"30","id":324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4898:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4889:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4935:3:0","subExpression":{"argumentTypes":null,"id":331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4935:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":333,"nodeType":"ExpressionStatement","src":"4935:3:0"},"nodeType":"ForStatement","src":"4884:175:0"},{"id":350,"nodeType":"PlaceholderStatement","src":"5068:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":352,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"name":"_signer","nodeType":"VariableDeclaration","scope":352,"src":"4857:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"4857:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4856:17:0"},"src":"4829:247:0","visibility":"internal"},{"body":{"id":373,"nodeType":"Block","src":"5697:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":367,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"5732:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":368,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5739:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":369,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"5748:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":370,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5757:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":364,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"5707:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":8747,"src":"5707:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5707:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"5707:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":374,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":361,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":362,"modifierName":{"argumentTypes":null,"id":360,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"5665:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"5665:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"name":"_signer","nodeType":"VariableDeclaration","scope":374,"src":"5586:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"5586:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":356,"name":"_report","nodeType":"VariableDeclaration","scope":374,"src":"5603:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":355,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":358,"name":"_signature","nodeType":"VariableDeclaration","scope":374,"src":"5625:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":357,"name":"bytes","nodeType":"ElementaryTypeName","src":"5625:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"5585:64:0"},"returnParameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"5697:0:0"},"scope":829,"src":"5568:207:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":392,"nodeType":"Block","src":"6119:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":387,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"6153:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":388,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6160:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":389,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"6172:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":384,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"6129:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":8953,"src":"6129:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6129:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"6129:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":393,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":381,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6103:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":382,"modifierName":{"argumentTypes":null,"id":380,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"6086:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6086:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"name":"_custodian","nodeType":"VariableDeclaration","scope":393,"src":"6037:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"6037:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":378,"name":"_amount","nodeType":"VariableDeclaration","scope":393,"src":"6057:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint","nodeType":"ElementaryTypeName","src":"6057:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6036:34:0"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"6119:0:0"},"scope":829,"src":"6020:167:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":409,"nodeType":"Block","src":"6460:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":405,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"6495:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":406,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":402,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"6470:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":9006,"src":"6470:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6470:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":408,"nodeType":"ExpressionStatement","src":"6470:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":410,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":398,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13090,"src":"6444:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6444:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":400,"modifierName":{"argumentTypes":null,"id":397,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6432:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6432:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"name":"_amount","nodeType":"VariableDeclaration","scope":410,"src":"6403:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint","nodeType":"ElementaryTypeName","src":"6403:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6402:14:0"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"6460:0:0"},"scope":829,"src":"6385:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":423,"nodeType":"Block","src":"6725:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":420,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"6757:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":417,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"6735:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":8851,"src":"6735:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6735:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"ExpressionStatement","src":"6735:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":424,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13090,"src":"6713:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6713:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":415,"modifierName":{"argumentTypes":null,"id":412,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6704:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6704:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"6694:2:0"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"6725:0:0"},"scope":829,"src":"6680:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":437,"nodeType":"Block","src":"6899:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":434,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"6932:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":431,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"6909:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":8892,"src":"6909:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6909:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"ExpressionStatement","src":"6909:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":438,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":427,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13090,"src":"6887:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6887:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":429,"modifierName":{"argumentTypes":null,"id":426,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"6872:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6872:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"6862:2:0"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"6899:0:0"},"scope":829,"src":"6847:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":466,"nodeType":"Block","src":"7477:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":459,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"7528:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":460,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7535:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":461,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"7544:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":462,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"7555:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":463,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"7565:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":456,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"7487:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6138_$","typeString":"type(library TaskImpl)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4286,"src":"7487:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7487:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":465,"nodeType":"ExpressionStatement","src":"7487:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":467,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":449,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13090,"src":"7430:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7430:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":451,"modifierName":{"argumentTypes":null,"id":448,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"7415:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7415:26:0"},{"arguments":[{"argumentTypes":null,"id":453,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7464:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":454,"modifierName":{"argumentTypes":null,"id":452,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7446:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"7446:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"name":"_taskId","nodeType":"VariableDeclaration","scope":467,"src":"7299:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7299:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":442,"name":"_codeHash","nodeType":"VariableDeclaration","scope":467,"src":"7324:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7324:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":444,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":467,"src":"7351:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":443,"name":"uint64","nodeType":"ElementaryTypeName","src":"7351:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":446,"name":"_sig","nodeType":"VariableDeclaration","scope":467,"src":"7376:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":445,"name":"bytes","nodeType":"ElementaryTypeName","src":"7376:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"7289:110:0"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"7477:0:0"},"scope":829,"src":"7253:324:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":507,"nodeType":"Block","src":"8630:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":496,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"8674:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":497,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"8681:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":498,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"8690:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":499,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"8704:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":500,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"8715:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":501,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"8748:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":502,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"8771:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":503,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"8805:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":504,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"8815:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":493,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"8640:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6138_$","typeString":"type(library TaskImpl)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4673,"src":"8640:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8640:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":506,"nodeType":"ExpressionStatement","src":"8640:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":508,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":486,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13090,"src":"8583:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8583:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":488,"modifierName":{"argumentTypes":null,"id":485,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"8568:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8568:26:0"},{"arguments":[{"argumentTypes":null,"id":490,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"8617:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":491,"modifierName":{"argumentTypes":null,"id":489,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"8599:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8599:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"name":"_taskId","nodeType":"VariableDeclaration","scope":508,"src":"8291:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8291:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":471,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":508,"src":"8316:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":470,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8316:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":473,"name":"_codeHash","nodeType":"VariableDeclaration","scope":508,"src":"8346:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8346:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":475,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":508,"src":"8373:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8373:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":477,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":508,"src":"8410:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":476,"name":"bytes","nodeType":"ElementaryTypeName","src":"8410:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":479,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":508,"src":"8454:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"8454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":481,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":508,"src":"8504:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":480,"name":"uint64","nodeType":"ElementaryTypeName","src":"8504:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":483,"name":"_sig","nodeType":"VariableDeclaration","scope":508,"src":"8529:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":482,"name":"bytes","nodeType":"ElementaryTypeName","src":"8529:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8281:271:0"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[],"src":"8630:0:0"},"scope":829,"src":"8252:575:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":518,"nodeType":"Block","src":"9029:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":515,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"9090:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":513,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"9046:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3816_$","typeString":"type(library SecretContractImpl)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3748,"src":"9046:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2475_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9046:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":512,"id":517,"nodeType":"Return","src":"9039:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":519,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"8983:2:0"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"name":"","nodeType":"VariableDeclaration","scope":519,"src":"9019:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":510,"name":"uint","nodeType":"ElementaryTypeName","src":"9019:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9018:6:0"},"scope":829,"src":"8954:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":536,"nodeType":"Block","src":"9432:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":531,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"9499:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":532,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9506:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":533,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"9514:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":529,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"9449:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3816_$","typeString":"type(library SecretContractImpl)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3815,"src":"9449:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2475_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9449:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":528,"id":535,"nodeType":"Return","src":"9442:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":537,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"name":"_start","nodeType":"VariableDeclaration","scope":537,"src":"9352:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint","nodeType":"ElementaryTypeName","src":"9352:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":523,"name":"_stop","nodeType":"VariableDeclaration","scope":537,"src":"9365:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint","nodeType":"ElementaryTypeName","src":"9365:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9351:25:0"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"name":"","nodeType":"VariableDeclaration","scope":537,"src":"9410:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9410:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":526,"length":null,"nodeType":"ArrayTypeName","src":"9410:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"9409:18:0"},"scope":829,"src":"9316:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"10568:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":553,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"10618:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":554,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"10625:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":555,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"10638:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":556,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"10649:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":557,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10657:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":558,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10676:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":550,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"10578:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6138_$","typeString":"type(library TaskImpl)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4114,"src":"10578:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10578:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":560,"nodeType":"ExpressionStatement","src":"10578:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":562,"implemented":true,"kind":"function","modifiers":[],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":562,"src":"10425:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10425:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":541,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":562,"src":"10454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":540,"name":"uint64","nodeType":"ElementaryTypeName","src":"10454:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":543,"name":"_gasPx","nodeType":"VariableDeclaration","scope":562,"src":"10480:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":542,"name":"uint64","nodeType":"ElementaryTypeName","src":"10480:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":545,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":562,"src":"10503:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint","nodeType":"ElementaryTypeName","src":"10503:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":547,"name":"_nonce","nodeType":"VariableDeclaration","scope":562,"src":"10535:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint","nodeType":"ElementaryTypeName","src":"10535:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10415:137:0"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[],"src":"10568:0:0"},"scope":829,"src":"10380:310:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":583,"nodeType":"Block","src":"11422:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":576,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"11462:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":577,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"11469:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":578,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"11482:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":579,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"11493:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":580,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"11501:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":573,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"11432:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6138_$","typeString":"type(library TaskImpl)"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4908,"src":"11432:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11432:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":582,"nodeType":"ExpressionStatement","src":"11432:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":584,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":584,"src":"11300:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11300:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":566,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":584,"src":"11329:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":565,"name":"uint64","nodeType":"ElementaryTypeName","src":"11329:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":568,"name":"_gasPx","nodeType":"VariableDeclaration","scope":584,"src":"11355:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":567,"name":"uint64","nodeType":"ElementaryTypeName","src":"11355:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":570,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":584,"src":"11378:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint","nodeType":"ElementaryTypeName","src":"11378:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11290:116:0"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"11422:0:0"},"scope":829,"src":"11265:261:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":608,"nodeType":"Block","src":"12326:109:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":601,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"12367:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":602,"name":"_inputsHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"12374:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"argumentTypes":null,"id":603,"name":"_gasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"12389:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"}},{"argumentTypes":null,"id":604,"name":"_gasPxs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"12401:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"}},{"argumentTypes":null,"id":605,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"12410:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"},{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":598,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"12336:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6138_$","typeString":"type(library TaskImpl)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordsImpl","nodeType":"MemberAccess","referencedDeclaration":5778,"src":"12336:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint64_$dyn_memory_ptr_$_t_array$_t_uint64_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32[] memory,uint64[] memory,uint64[] memory,uint256)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12336:92:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"12336:92:0"}]},"documentation":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\ntransferring task fee from sender to contract, generating the unique taskId, saving the block number\\nwhen the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimits ENG gas limit\\n@param _gasPxs ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":609,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecords","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"name":"_inputsHashes","nodeType":"VariableDeclaration","scope":609,"src":"12173:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12173:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":586,"length":null,"nodeType":"ArrayTypeName","src":"12173:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":590,"name":"_gasLimits","nodeType":"VariableDeclaration","scope":609,"src":"12213:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":588,"name":"uint64","nodeType":"ElementaryTypeName","src":"12213:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":589,"length":null,"nodeType":"ArrayTypeName","src":"12213:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":593,"name":"_gasPxs","nodeType":"VariableDeclaration","scope":609,"src":"12249:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":591,"name":"uint64","nodeType":"ElementaryTypeName","src":"12249:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":592,"length":null,"nodeType":"ArrayTypeName","src":"12249:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":595,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":609,"src":"12282:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint","nodeType":"ElementaryTypeName","src":"12282:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12163:147:0"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"12326:0:0"},"scope":829,"src":"12137:298:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":649,"nodeType":"Block","src":"13402:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":638,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"13439:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":639,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"13446:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":640,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"13455:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":641,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"13464:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":642,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"13481:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":643,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"13494:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":644,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"13529:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":645,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"13563:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":646,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"13573:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":635,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"13412:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6138_$","typeString":"type(library TaskImpl)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5580,"src":"13412:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13412:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"ExpressionStatement","src":"13412:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":650,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":628,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13090,"src":"13356:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13356:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":630,"modifierName":{"argumentTypes":null,"id":627,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"13341:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13341:26:0"},{"arguments":[{"argumentTypes":null,"id":632,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"13389:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":633,"modifierName":{"argumentTypes":null,"id":631,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"13372:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13372:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"name":"_scAddr","nodeType":"VariableDeclaration","scope":650,"src":"13071:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13071:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":613,"name":"_taskId","nodeType":"VariableDeclaration","scope":650,"src":"13096:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13096:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":615,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":650,"src":"13121:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13121:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":617,"name":"_outputHash","nodeType":"VariableDeclaration","scope":650,"src":"13154:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13154:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":619,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":650,"src":"13183:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":618,"name":"bytes","nodeType":"ElementaryTypeName","src":"13183:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":621,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":650,"src":"13227:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"13227:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":623,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":650,"src":"13277:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":622,"name":"uint64","nodeType":"ElementaryTypeName","src":"13277:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":625,"name":"_sig","nodeType":"VariableDeclaration","scope":650,"src":"13302:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":624,"name":"bytes","nodeType":"ElementaryTypeName","src":"13302:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13061:264:0"},"returnParameters":{"id":634,"nodeType":"ParameterList","parameters":[],"src":"13402:0:0"},"scope":829,"src":"13039:546:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":681,"nodeType":"Block","src":"14216:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":673,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"14257:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":674,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"14264:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":675,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"14273:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":676,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"14282:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":677,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"14295:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":678,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"14305:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":670,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"14226:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6138_$","typeString":"type(library TaskImpl)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5102,"src":"14226:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14226:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":680,"nodeType":"ExpressionStatement","src":"14226:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":682,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13090,"src":"14170:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14170:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":665,"modifierName":{"argumentTypes":null,"id":662,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"14155:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14155:26:0"},{"arguments":[{"argumentTypes":null,"id":667,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"14203:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":668,"modifierName":{"argumentTypes":null,"id":666,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"14186:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14186:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"name":"_scAddr","nodeType":"VariableDeclaration","scope":682,"src":"14012:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14012:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":654,"name":"_taskId","nodeType":"VariableDeclaration","scope":682,"src":"14037:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14037:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":656,"name":"_outputHash","nodeType":"VariableDeclaration","scope":682,"src":"14062:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14062:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":658,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":682,"src":"14091:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":657,"name":"uint64","nodeType":"ElementaryTypeName","src":"14091:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":660,"name":"_sig","nodeType":"VariableDeclaration","scope":682,"src":"14116:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":659,"name":"bytes","nodeType":"ElementaryTypeName","src":"14116:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14002:137:0"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[],"src":"14216:0:0"},"scope":829,"src":"13976:341:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":697,"nodeType":"Block","src":"14568:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":693,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"14609:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":694,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"14616:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":690,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"14578:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6138_$","typeString":"type(library TaskImpl)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6137,"src":"14578:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14578:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"14578:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":698,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":687,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"14555:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":688,"modifierName":{"argumentTypes":null,"id":686,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"14543:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14543:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"name":"_taskId","nodeType":"VariableDeclaration","scope":698,"src":"14511:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14511:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14510:17:0"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"14568:0:0"},"scope":829,"src":"14484:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":720,"nodeType":"Block","src":"15091:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":714,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"15136:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":715,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"15143:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":716,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"15157:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":717,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"15164:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":711,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"15101:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3176_$","typeString":"type(library PrincipalImpl)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":3005,"src":"15101:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15101:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"15101:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":721,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":707,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13090,"src":"15075:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15075:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":709,"modifierName":{"argumentTypes":null,"id":706,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"15058:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"15058:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":721,"src":"14993:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":699,"name":"uint","nodeType":"ElementaryTypeName","src":"14993:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":702,"name":"_seed","nodeType":"VariableDeclaration","scope":721,"src":"15012:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":701,"name":"uint","nodeType":"ElementaryTypeName","src":"15012:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":704,"name":"_sig","nodeType":"VariableDeclaration","scope":721,"src":"15024:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":703,"name":"bytes","nodeType":"ElementaryTypeName","src":"15024:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14992:50:0"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"15091:0:0"},"scope":829,"src":"14967:209:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":738,"nodeType":"Block","src":"15412:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":734,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"15464:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":735,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"15471:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":732,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"15429:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3176_$","typeString":"type(library PrincipalImpl)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3175,"src":"15429:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2475_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15429:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":731,"id":737,"nodeType":"Return","src":"15422:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":739,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":739,"src":"15323:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint","nodeType":"ElementaryTypeName","src":"15323:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15322:19:0"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"name":"","nodeType":"VariableDeclaration","scope":739,"src":"15375:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"15375:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":726,"length":null,"nodeType":"ArrayTypeName","src":"15375:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":730,"name":"","nodeType":"VariableDeclaration","scope":739,"src":"15393:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":728,"name":"uint","nodeType":"ElementaryTypeName","src":"15393:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":729,"length":null,"nodeType":"ArrayTypeName","src":"15393:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15374:33:0"},"scope":829,"src":"15297:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":752,"nodeType":"Block","src":"15753:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":748,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"15806:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":749,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"15813:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":746,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"15770:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":9126,"src":"15770:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2475_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15770:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":745,"id":751,"nodeType":"Return","src":"15763:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":753,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":753,"src":"15695:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint","nodeType":"ElementaryTypeName","src":"15695:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15694:19:0"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"name":"","nodeType":"VariableDeclaration","scope":753,"src":"15747:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint","nodeType":"ElementaryTypeName","src":"15747:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15746:6:0"},"scope":829,"src":"15666:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":774,"nodeType":"Block","src":"16239:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":770,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"16288:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":771,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"16295:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":768,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"16256:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":9163,"src":"16256:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2475_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16256:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":767,"id":773,"nodeType":"Return","src":"16249:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":775,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":775,"src":"16142:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint","nodeType":"ElementaryTypeName","src":"16142:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16141:19:0"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"name":"","nodeType":"VariableDeclaration","scope":775,"src":"16194:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint","nodeType":"ElementaryTypeName","src":"16194:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":760,"name":"","nodeType":"VariableDeclaration","scope":775,"src":"16200:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint","nodeType":"ElementaryTypeName","src":"16200:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":763,"name":"","nodeType":"VariableDeclaration","scope":775,"src":"16206:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"16206:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":762,"length":null,"nodeType":"ArrayTypeName","src":"16206:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":766,"name":"","nodeType":"VariableDeclaration","scope":775,"src":"16224:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":764,"name":"uint","nodeType":"ElementaryTypeName","src":"16224:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":765,"length":null,"nodeType":"ArrayTypeName","src":"16224:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16193:45:0"},"scope":829,"src":"16117:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":792,"nodeType":"Block","src":"16767:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":787,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"16815:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":788,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"16822:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":789,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"16836:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":785,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"16784:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":9427,"src":"16784:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2475_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16784:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":784,"id":791,"nodeType":"Return","src":"16777:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":793,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":793,"src":"16676:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint","nodeType":"ElementaryTypeName","src":"16676:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":779,"name":"_scAddr","nodeType":"VariableDeclaration","scope":793,"src":"16695:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16695:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16675:36:0"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"name":"","nodeType":"VariableDeclaration","scope":793,"src":"16745:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"16745:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":782,"length":null,"nodeType":"ArrayTypeName","src":"16745:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"16744:18:0"},"scope":829,"src":"16652:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":811,"nodeType":"Block","src":"17121:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":807,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"17164:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":808,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"17171:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":805,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"17138:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":8784,"src":"17138:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2475_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17138:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":804,"id":810,"nodeType":"Return","src":"17131:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":812,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":798,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"17069:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":799,"modifierName":{"argumentTypes":null,"id":797,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"17052:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"17052:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"name":"_custodian","nodeType":"VariableDeclaration","scope":812,"src":"17008:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"17008:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17007:20:0"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"name":"","nodeType":"VariableDeclaration","scope":812,"src":"17094:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"17094:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":803,"name":"","nodeType":"VariableDeclaration","scope":812,"src":"17103:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":802,"name":"bytes","nodeType":"ElementaryTypeName","src":"17103:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17093:23:0"},"scope":829,"src":"16989:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":827,"nodeType":"Block","src":"17504:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":823,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"17550:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":824,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"17557:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":821,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"17521:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":8810,"src":"17521:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17521:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":820,"id":826,"nodeType":"Return","src":"17514:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":828,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"name":"_data","nodeType":"VariableDeclaration","scope":828,"src":"17416:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":813,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":816,"name":"_signature","nodeType":"VariableDeclaration","scope":828,"src":"17436:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":815,"name":"bytes","nodeType":"ElementaryTypeName","src":"17436:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17415:45:0"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"name":"","nodeType":"VariableDeclaration","scope":828,"src":"17494:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint","nodeType":"ElementaryTypeName","src":"17494:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17493:6:0"},"scope":829,"src":"17394:181:0","stateMutability":"view","superFunction":null,"visibility":"public"}],"scope":830,"src":"767:16810:0"}],"src":"0:17578:0"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[829]},"id":830,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":830,"sourceUnit":12517,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":830,"sourceUnit":12389,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":5,"nodeType":"ImportDirective","scope":830,"sourceUnit":12308,"src":"184:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":7,"nodeType":"ImportDirective","scope":830,"sourceUnit":9481,"src":"220:53:0","symbolAliases":[{"foreign":6,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":9,"nodeType":"ImportDirective","scope":830,"sourceUnit":3177,"src":"274:57:0","symbolAliases":[{"foreign":8,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":11,"nodeType":"ImportDirective","scope":830,"sourceUnit":6139,"src":"332:47:0","symbolAliases":[{"foreign":10,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":13,"nodeType":"ImportDirective","scope":830,"sourceUnit":3817,"src":"380:67:0","symbolAliases":[{"foreign":12,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":15,"nodeType":"ImportDirective","scope":830,"sourceUnit":2289,"src":"448:55:0","symbolAliases":[{"foreign":14,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":17,"nodeType":"ImportDirective","scope":830,"sourceUnit":2477,"src":"504:53:0","symbolAliases":[{"foreign":16,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":19,"nodeType":"ImportDirective","scope":830,"sourceUnit":2430,"src":"558:55:0","symbolAliases":[{"foreign":18,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":21,"nodeType":"ImportDirective","scope":830,"sourceUnit":2485,"src":"614:57:0","symbolAliases":[{"foreign":20,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":23,"nodeType":"ImportDirective","scope":830,"sourceUnit":2650,"src":"672:45:0","symbolAliases":[{"foreign":22,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":25,"nodeType":"ImportDirective","scope":830,"sourceUnit":10466,"src":"718:47:0","symbolAliases":[{"foreign":24,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":26,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2484,"src":"786:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2484","typeString":"contract EnigmaStorage"}},"id":27,"nodeType":"InheritanceSpecifier","src":"786:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":28,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2429,"src":"801:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2429","typeString":"contract EnigmaEvents"}},"id":29,"nodeType":"InheritanceSpecifier","src":"801:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":30,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2649,"src":"815:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2649","typeString":"contract Getters"}},"id":31,"nodeType":"InheritanceSpecifier","src":"815:7:0"}],"contractDependencies":[2429,2484,2649],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":829,"linearizedBaseContracts":[829,2649,2429,2484],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":34,"libraryName":{"contractScope":null,"id":32,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":12516,"src":"835:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$12516","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"829:27:0","typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":37,"libraryName":{"contractScope":null,"id":35,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":12388,"src":"867:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$12388","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"861:24:0","typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":84,"nodeType":"Block","src":"1076:238:0","statements":[{"expression":{"argumentTypes":null,"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":46,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1086:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":48,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2438,"src":"1086:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10465","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":50,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1109:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10465,"src":"1103:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$10465_$","typeString":"type(contract ERC20)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1103:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10465","typeString":"contract ERC20"}},"src":"1086:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10465","typeString":"contract ERC20"}},"id":53,"nodeType":"ExpressionStatement","src":"1086:37:0"},{"expression":{"argumentTypes":null,"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":54,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1133:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":56,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2440,"src":"1133:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":57,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"1151:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1133:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":59,"nodeType":"ExpressionStatement","src":"1133:28:0"},{"expression":{"argumentTypes":null,"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":60,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1171:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":62,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2442,"src":"1171:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"323030","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1195:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"src":"1171:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":65,"nodeType":"ExpressionStatement","src":"1171:27:0"},{"expression":{"argumentTypes":null,"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":66,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1208:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":68,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2444,"src":"1208:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":69,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"1226:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1208:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":71,"nodeType":"ExpressionStatement","src":"1208:28:0"},{"expression":{"argumentTypes":null,"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":72,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1246:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2472,"src":"1246:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1271:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1246:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":77,"nodeType":"ExpressionStatement","src":"1246:26:0"},{"expression":{"argumentTypes":null,"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":78,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1282:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":80,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2474,"src":"1282:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1306:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1282:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":83,"nodeType":"ExpressionStatement","src":"1282:25:0"}]},"documentation":null,"id":85,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":85,"src":"1009:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":41,"name":"_principal","nodeType":"VariableDeclaration","scope":85,"src":"1032:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40,"name":"address","nodeType":"ElementaryTypeName","src":"1032:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":43,"name":"_epochSize","nodeType":"VariableDeclaration","scope":85,"src":"1052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint","nodeType":"ElementaryTypeName","src":"1052:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1008:60:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"1076:0:0"},"scope":829,"src":"997:317:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":109,"nodeType":"Block","src":"1604:181:0","statements":[{"assignments":[92],"declarations":[{"constant":false,"id":92,"name":"worker","nodeType":"VariableDeclaration","scope":109,"src":"1614:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":91,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2136,"src":"1614:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":97,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":93,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1650:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":94,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"1650:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2136_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":96,"indexExpression":{"argumentTypes":null,"id":95,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"1664:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1650:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1614:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":99,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"1688:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"1688:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":101,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"1705:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"1705:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2177_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1705:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1688:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1745:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":98,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"1680:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1680:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":107,"nodeType":"ExpressionStatement","src":"1680:87:0"},{"id":108,"nodeType":"PlaceholderStatement","src":"1777:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":110,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"name":"_user","nodeType":"VariableDeclaration","scope":110,"src":"1589:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"1589:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1588:15:0"},"src":"1563:222:0","visibility":"internal"},{"body":{"id":134,"nodeType":"Block","src":"1968:178:0","statements":[{"assignments":[117],"declarations":[{"constant":false,"id":117,"name":"worker","nodeType":"VariableDeclaration","scope":134,"src":"1978:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":116,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2136,"src":"1978:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":122,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":118,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2014:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"2014:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2136_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":121,"indexExpression":{"argumentTypes":null,"id":120,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2028:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2014:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1978:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":124,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2052:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"2052:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":126,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"2069:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"2069:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2177_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2069:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2052:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2105:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"2044:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2044:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":132,"nodeType":"ExpressionStatement","src":"2044:84:0"},{"id":133,"nodeType":"PlaceholderStatement","src":"2138:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":135,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"name":"_user","nodeType":"VariableDeclaration","scope":135,"src":"1953:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"1953:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1952:15:0"},"src":"1929:217:0","visibility":"internal"},{"body":{"id":159,"nodeType":"Block","src":"2331:180:0","statements":[{"assignments":[142],"declarations":[{"constant":false,"id":142,"name":"worker","nodeType":"VariableDeclaration","scope":159,"src":"2341:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":141,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2136,"src":"2341:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":147,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":143,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2377:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"2377:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2136_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":146,"indexExpression":{"argumentTypes":null,"id":145,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2391:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2377:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2341:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":149,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2415:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"2415:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":151,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"2432:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"2432:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2177_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2432:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2415:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2469:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"2407:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2407:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":157,"nodeType":"ExpressionStatement","src":"2407:86:0"},{"id":158,"nodeType":"PlaceholderStatement","src":"2503:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":160,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"name":"_user","nodeType":"VariableDeclaration","scope":160,"src":"2316:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2315:15:0"},"src":"2291:220:0","visibility":"internal"},{"body":{"id":203,"nodeType":"Block","src":"2660:395:0","statements":[{"assignments":[167],"declarations":[{"constant":false,"id":167,"name":"worker","nodeType":"VariableDeclaration","scope":203,"src":"2670:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":166,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2136,"src":"2670:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":172,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":168,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2706:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"2706:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2136_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":171,"indexExpression":{"argumentTypes":null,"id":170,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2720:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2706:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2670:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":175,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13080,"src":"2764:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2764:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":174,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"2744:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2744:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2781:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2744:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2784:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":173,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"2736:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":182,"nodeType":"ExpressionStatement","src":"2736:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":184,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2844:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"2844:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":186,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"2861:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"2861:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2177_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2861:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2844:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2898:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"2836:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2836:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":192,"nodeType":"ExpressionStatement","src":"2836:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":194,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2958:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2132,"src":"2958:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":196,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2976:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2472,"src":"2976:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2958:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3000:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"2950:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2950:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"ExpressionStatement","src":"2950:87:0"},{"id":202,"nodeType":"PlaceholderStatement","src":"3047:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":204,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"name":"_user","nodeType":"VariableDeclaration","scope":204,"src":"2645:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"2645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2644:15:0"},"src":"2627:428:0","visibility":"internal"},{"body":{"id":260,"nodeType":"Block","src":"3213:580:0","statements":[{"assignments":[211],"declarations":[{"constant":false,"id":211,"name":"worker","nodeType":"VariableDeclaration","scope":260,"src":"3223:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":210,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2136,"src":"3223:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":216,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":212,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"3259:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"3259:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2136_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":215,"indexExpression":{"argumentTypes":null,"id":214,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"3273:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3259:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3223:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":218,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3297:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"3297:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":220,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"3314:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"3314:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2177_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3314:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2177","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3297:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3351:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"3289:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3289:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":226,"nodeType":"ExpressionStatement","src":"3289:104:0"},{"assignments":[230],"declarations":[{"constant":false,"id":230,"name":"workerLog","nodeType":"VariableDeclaration","scope":260,"src":"3403:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2154_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":229,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2154,"src":"3403:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2154_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":237,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":233,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3480:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":234,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13080,"src":"3488:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3488:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2136_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":231,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"3445:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":9479,"src":"3445:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2136_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2154_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3445:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2154_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3403:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2185","typeString":"enum EnigmaCommon.WorkerLogType"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":239,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3519:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2154_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2149,"src":"3519:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2185","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":241,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"3548:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2185,"src":"3548:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2185_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3548:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2185","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3519:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3595:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"3511:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3511:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"ExpressionStatement","src":"3511:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":250,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13080,"src":"3675:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3675:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":249,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"3655:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3655:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":253,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3691:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2154_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2151,"src":"3691:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3655:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3726:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"3647:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3647:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":258,"nodeType":"ExpressionStatement","src":"3647:128:0"},{"id":259,"nodeType":"PlaceholderStatement","src":"3785:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":261,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"name":"_user","nodeType":"VariableDeclaration","scope":261,"src":"3198:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"3198:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3197:15:0"},"src":"3177:616:0","visibility":"internal"},{"body":{"id":279,"nodeType":"Block","src":"3960:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2180","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":266,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"3978:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2466,"src":"3978:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2166_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":269,"indexExpression":{"argumentTypes":null,"id":268,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3994:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3978:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2166_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"3978:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2180","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":271,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"4013:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2180,"src":"4013:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2180_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4013:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2180","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"3978:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4058:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"3970:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3970:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":277,"nodeType":"ExpressionStatement","src":"3970:123:0"},{"id":278,"nodeType":"PlaceholderStatement","src":"4103:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":280,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"name":"_scAddr","nodeType":"VariableDeclaration","scope":280,"src":"3943:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3943:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3942:17:0"},"src":"3916:195:0","visibility":"internal"},{"body":{"id":298,"nodeType":"Block","src":"4273:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2180","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":285,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"4291:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2466,"src":"4291:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2166_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":288,"indexExpression":{"argumentTypes":null,"id":287,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"4307:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4291:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2166_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"4291:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2180","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":290,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"4326:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2180,"src":"4326:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2180_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4326:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2180","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4291:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4370:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"4283:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4283:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":296,"nodeType":"ExpressionStatement","src":"4283:118:0"},{"id":297,"nodeType":"PlaceholderStatement","src":"4411:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":299,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"name":"_scAddr","nodeType":"VariableDeclaration","scope":299,"src":"4256:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4256:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4255:17:0"},"src":"4230:189:0","visibility":"internal"},{"body":{"id":317,"nodeType":"Block","src":"4584:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2173","typeString":"enum EnigmaCommon.TaskStatus"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":304,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"4602:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2462,"src":"4602:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2124_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":307,"indexExpression":{"argumentTypes":null,"id":306,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"4614:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4602:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2124_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"4602:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2173","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":309,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"4633:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2288_$","typeString":"type(library EnigmaCommon)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2173,"src":"4633:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2173_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4633:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2173","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4602:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"4594:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4594:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":315,"nodeType":"ExpressionStatement","src":"4594:100:0"},{"id":316,"nodeType":"PlaceholderStatement","src":"4704:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":318,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"name":"_taskId","nodeType":"VariableDeclaration","scope":318,"src":"4567:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4567:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4566:17:0"},"src":"4546:166:0","visibility":"internal"},{"body":{"id":351,"nodeType":"Block","src":"4874:202:0","statements":[{"body":{"id":348,"nodeType":"Block","src":"4940:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":335,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"4962:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"4962:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2136_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":341,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":337,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"4976:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2451,"src":"4976:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":340,"indexExpression":{"argumentTypes":null,"id":339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4998:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4976:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4962:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2136_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2126,"src":"4962:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":343,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"5012:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4962:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5021:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":334,"name":"require","nodeType":"Identifier","overloadedDeclarations":[13093,13094],"referencedDeclaration":13094,"src":"4954:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4954:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"ExpressionStatement","src":"4954:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":326,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4901:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":327,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"4905:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},"id":328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2451,"src":"4905:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4905:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4901:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":349,"initializationExpression":{"assignments":[323],"declarations":[{"constant":false,"id":323,"name":"i","nodeType":"VariableDeclaration","scope":349,"src":"4889:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint","nodeType":"ElementaryTypeName","src":"4889:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":325,"initialValue":{"argumentTypes":null,"hexValue":"30","id":324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4898:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4889:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4935:3:0","subExpression":{"argumentTypes":null,"id":331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4935:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":333,"nodeType":"ExpressionStatement","src":"4935:3:0"},"nodeType":"ForStatement","src":"4884:175:0"},{"id":350,"nodeType":"PlaceholderStatement","src":"5068:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":352,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"name":"_signer","nodeType":"VariableDeclaration","scope":352,"src":"4857:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"4857:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4856:17:0"},"src":"4829:247:0","visibility":"internal"},{"body":{"id":373,"nodeType":"Block","src":"5697:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":367,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"5732:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":368,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5739:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":369,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"5748:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":370,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5757:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":364,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"5707:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":8747,"src":"5707:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5707:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"5707:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":374,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":361,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":362,"modifierName":{"argumentTypes":null,"id":360,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"5665:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"5665:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"name":"_signer","nodeType":"VariableDeclaration","scope":374,"src":"5586:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"5586:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":356,"name":"_report","nodeType":"VariableDeclaration","scope":374,"src":"5603:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":355,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":358,"name":"_signature","nodeType":"VariableDeclaration","scope":374,"src":"5625:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":357,"name":"bytes","nodeType":"ElementaryTypeName","src":"5625:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"5585:64:0"},"returnParameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"5697:0:0"},"scope":829,"src":"5568:207:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":392,"nodeType":"Block","src":"6119:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":387,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"6153:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":388,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6160:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":389,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"6172:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":384,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"6129:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":8953,"src":"6129:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6129:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"6129:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":393,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":381,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6103:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":382,"modifierName":{"argumentTypes":null,"id":380,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"6086:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6086:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"name":"_custodian","nodeType":"VariableDeclaration","scope":393,"src":"6037:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"6037:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":378,"name":"_amount","nodeType":"VariableDeclaration","scope":393,"src":"6057:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint","nodeType":"ElementaryTypeName","src":"6057:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6036:34:0"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"6119:0:0"},"scope":829,"src":"6020:167:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":409,"nodeType":"Block","src":"6460:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":405,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"6495:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":406,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":402,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"6470:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":9006,"src":"6470:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6470:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":408,"nodeType":"ExpressionStatement","src":"6470:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":410,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":398,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13090,"src":"6444:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6444:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":400,"modifierName":{"argumentTypes":null,"id":397,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6432:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6432:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"name":"_amount","nodeType":"VariableDeclaration","scope":410,"src":"6403:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint","nodeType":"ElementaryTypeName","src":"6403:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6402:14:0"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"6460:0:0"},"scope":829,"src":"6385:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":423,"nodeType":"Block","src":"6725:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":420,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"6757:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":417,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"6735:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":8851,"src":"6735:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6735:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"ExpressionStatement","src":"6735:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":424,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13090,"src":"6713:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6713:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":415,"modifierName":{"argumentTypes":null,"id":412,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6704:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6704:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"6694:2:0"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"6725:0:0"},"scope":829,"src":"6680:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":437,"nodeType":"Block","src":"6899:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":434,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"6932:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":431,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"6909:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":8892,"src":"6909:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6909:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"ExpressionStatement","src":"6909:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":438,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":427,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13090,"src":"6887:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6887:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":429,"modifierName":{"argumentTypes":null,"id":426,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"6872:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6872:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"6862:2:0"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"6899:0:0"},"scope":829,"src":"6847:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":466,"nodeType":"Block","src":"7477:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":459,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"7528:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":460,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7535:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":461,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"7544:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":462,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"7555:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":463,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"7565:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":456,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"7487:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6138_$","typeString":"type(library TaskImpl)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4286,"src":"7487:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7487:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":465,"nodeType":"ExpressionStatement","src":"7487:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":467,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":449,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13090,"src":"7430:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7430:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":451,"modifierName":{"argumentTypes":null,"id":448,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"7415:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7415:26:0"},{"arguments":[{"argumentTypes":null,"id":453,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7464:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":454,"modifierName":{"argumentTypes":null,"id":452,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7446:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"7446:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"name":"_taskId","nodeType":"VariableDeclaration","scope":467,"src":"7299:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7299:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":442,"name":"_codeHash","nodeType":"VariableDeclaration","scope":467,"src":"7324:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7324:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":444,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":467,"src":"7351:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":443,"name":"uint64","nodeType":"ElementaryTypeName","src":"7351:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":446,"name":"_sig","nodeType":"VariableDeclaration","scope":467,"src":"7376:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":445,"name":"bytes","nodeType":"ElementaryTypeName","src":"7376:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"7289:110:0"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"7477:0:0"},"scope":829,"src":"7253:324:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":507,"nodeType":"Block","src":"8630:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":496,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"8674:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":497,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"8681:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":498,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"8690:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":499,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"8704:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":500,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"8715:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":501,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"8748:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":502,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"8771:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":503,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"8805:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":504,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"8815:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":493,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"8640:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6138_$","typeString":"type(library TaskImpl)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4673,"src":"8640:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8640:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":506,"nodeType":"ExpressionStatement","src":"8640:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":508,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":486,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13090,"src":"8583:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8583:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":488,"modifierName":{"argumentTypes":null,"id":485,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"8568:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8568:26:0"},{"arguments":[{"argumentTypes":null,"id":490,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"8617:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":491,"modifierName":{"argumentTypes":null,"id":489,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"8599:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8599:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"name":"_taskId","nodeType":"VariableDeclaration","scope":508,"src":"8291:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8291:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":471,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":508,"src":"8316:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":470,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8316:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":473,"name":"_codeHash","nodeType":"VariableDeclaration","scope":508,"src":"8346:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8346:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":475,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":508,"src":"8373:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8373:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":477,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":508,"src":"8410:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":476,"name":"bytes","nodeType":"ElementaryTypeName","src":"8410:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":479,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":508,"src":"8454:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"8454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":481,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":508,"src":"8504:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":480,"name":"uint64","nodeType":"ElementaryTypeName","src":"8504:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":483,"name":"_sig","nodeType":"VariableDeclaration","scope":508,"src":"8529:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":482,"name":"bytes","nodeType":"ElementaryTypeName","src":"8529:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8281:271:0"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[],"src":"8630:0:0"},"scope":829,"src":"8252:575:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":518,"nodeType":"Block","src":"9029:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":515,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"9090:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":513,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"9046:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3816_$","typeString":"type(library SecretContractImpl)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3748,"src":"9046:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2475_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9046:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":512,"id":517,"nodeType":"Return","src":"9039:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":519,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"8983:2:0"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"name":"","nodeType":"VariableDeclaration","scope":519,"src":"9019:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":510,"name":"uint","nodeType":"ElementaryTypeName","src":"9019:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9018:6:0"},"scope":829,"src":"8954:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":536,"nodeType":"Block","src":"9432:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":531,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"9499:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":532,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9506:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":533,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"9514:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":529,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"9449:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3816_$","typeString":"type(library SecretContractImpl)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3815,"src":"9449:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2475_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9449:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":528,"id":535,"nodeType":"Return","src":"9442:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":537,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"name":"_start","nodeType":"VariableDeclaration","scope":537,"src":"9352:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint","nodeType":"ElementaryTypeName","src":"9352:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":523,"name":"_stop","nodeType":"VariableDeclaration","scope":537,"src":"9365:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint","nodeType":"ElementaryTypeName","src":"9365:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9351:25:0"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"name":"","nodeType":"VariableDeclaration","scope":537,"src":"9410:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9410:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":526,"length":null,"nodeType":"ArrayTypeName","src":"9410:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"9409:18:0"},"scope":829,"src":"9316:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"10568:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":553,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"10618:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":554,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"10625:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":555,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"10638:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":556,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"10649:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":557,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10657:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":558,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10676:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":550,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"10578:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6138_$","typeString":"type(library TaskImpl)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4114,"src":"10578:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10578:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":560,"nodeType":"ExpressionStatement","src":"10578:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":562,"implemented":true,"kind":"function","modifiers":[],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":562,"src":"10425:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10425:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":541,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":562,"src":"10454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":540,"name":"uint64","nodeType":"ElementaryTypeName","src":"10454:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":543,"name":"_gasPx","nodeType":"VariableDeclaration","scope":562,"src":"10480:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":542,"name":"uint64","nodeType":"ElementaryTypeName","src":"10480:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":545,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":562,"src":"10503:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint","nodeType":"ElementaryTypeName","src":"10503:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":547,"name":"_nonce","nodeType":"VariableDeclaration","scope":562,"src":"10535:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint","nodeType":"ElementaryTypeName","src":"10535:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10415:137:0"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[],"src":"10568:0:0"},"scope":829,"src":"10380:310:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":583,"nodeType":"Block","src":"11422:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":576,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"11462:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":577,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"11469:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":578,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"11482:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":579,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"11493:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":580,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"11501:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":573,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"11432:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6138_$","typeString":"type(library TaskImpl)"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4908,"src":"11432:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11432:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":582,"nodeType":"ExpressionStatement","src":"11432:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":584,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":584,"src":"11300:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11300:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":566,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":584,"src":"11329:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":565,"name":"uint64","nodeType":"ElementaryTypeName","src":"11329:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":568,"name":"_gasPx","nodeType":"VariableDeclaration","scope":584,"src":"11355:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":567,"name":"uint64","nodeType":"ElementaryTypeName","src":"11355:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":570,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":584,"src":"11378:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint","nodeType":"ElementaryTypeName","src":"11378:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11290:116:0"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"11422:0:0"},"scope":829,"src":"11265:261:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":608,"nodeType":"Block","src":"12326:109:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":601,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"12367:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":602,"name":"_inputsHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"12374:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"argumentTypes":null,"id":603,"name":"_gasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"12389:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"}},{"argumentTypes":null,"id":604,"name":"_gasPxs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"12401:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"}},{"argumentTypes":null,"id":605,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"12410:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"},{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":598,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"12336:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6138_$","typeString":"type(library TaskImpl)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordsImpl","nodeType":"MemberAccess","referencedDeclaration":5778,"src":"12336:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint64_$dyn_memory_ptr_$_t_array$_t_uint64_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32[] memory,uint64[] memory,uint64[] memory,uint256)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12336:92:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"12336:92:0"}]},"documentation":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\ntransferring task fee from sender to contract, generating the unique taskId, saving the block number\\nwhen the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimits ENG gas limit\\n@param _gasPxs ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":609,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecords","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"name":"_inputsHashes","nodeType":"VariableDeclaration","scope":609,"src":"12173:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12173:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":586,"length":null,"nodeType":"ArrayTypeName","src":"12173:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":590,"name":"_gasLimits","nodeType":"VariableDeclaration","scope":609,"src":"12213:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":588,"name":"uint64","nodeType":"ElementaryTypeName","src":"12213:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":589,"length":null,"nodeType":"ArrayTypeName","src":"12213:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":593,"name":"_gasPxs","nodeType":"VariableDeclaration","scope":609,"src":"12249:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":591,"name":"uint64","nodeType":"ElementaryTypeName","src":"12249:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":592,"length":null,"nodeType":"ArrayTypeName","src":"12249:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":595,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":609,"src":"12282:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint","nodeType":"ElementaryTypeName","src":"12282:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12163:147:0"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"12326:0:0"},"scope":829,"src":"12137:298:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":649,"nodeType":"Block","src":"13402:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":638,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"13439:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":639,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"13446:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":640,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"13455:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":641,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"13464:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":642,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"13481:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":643,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"13494:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":644,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"13529:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":645,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"13563:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":646,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"13573:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":635,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"13412:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6138_$","typeString":"type(library TaskImpl)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5580,"src":"13412:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13412:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"ExpressionStatement","src":"13412:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":650,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":628,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13090,"src":"13356:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13356:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":630,"modifierName":{"argumentTypes":null,"id":627,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"13341:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13341:26:0"},{"arguments":[{"argumentTypes":null,"id":632,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"13389:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":633,"modifierName":{"argumentTypes":null,"id":631,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"13372:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13372:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"name":"_scAddr","nodeType":"VariableDeclaration","scope":650,"src":"13071:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13071:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":613,"name":"_taskId","nodeType":"VariableDeclaration","scope":650,"src":"13096:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13096:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":615,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":650,"src":"13121:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13121:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":617,"name":"_outputHash","nodeType":"VariableDeclaration","scope":650,"src":"13154:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13154:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":619,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":650,"src":"13183:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":618,"name":"bytes","nodeType":"ElementaryTypeName","src":"13183:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":621,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":650,"src":"13227:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"13227:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":623,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":650,"src":"13277:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":622,"name":"uint64","nodeType":"ElementaryTypeName","src":"13277:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":625,"name":"_sig","nodeType":"VariableDeclaration","scope":650,"src":"13302:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":624,"name":"bytes","nodeType":"ElementaryTypeName","src":"13302:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13061:264:0"},"returnParameters":{"id":634,"nodeType":"ParameterList","parameters":[],"src":"13402:0:0"},"scope":829,"src":"13039:546:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":681,"nodeType":"Block","src":"14216:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":673,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"14257:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":674,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"14264:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":675,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"14273:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":676,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"14282:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":677,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"14295:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":678,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"14305:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":670,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"14226:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6138_$","typeString":"type(library TaskImpl)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5102,"src":"14226:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14226:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":680,"nodeType":"ExpressionStatement","src":"14226:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":682,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13090,"src":"14170:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14170:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":665,"modifierName":{"argumentTypes":null,"id":662,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"14155:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14155:26:0"},{"arguments":[{"argumentTypes":null,"id":667,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"14203:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":668,"modifierName":{"argumentTypes":null,"id":666,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"14186:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14186:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"name":"_scAddr","nodeType":"VariableDeclaration","scope":682,"src":"14012:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14012:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":654,"name":"_taskId","nodeType":"VariableDeclaration","scope":682,"src":"14037:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14037:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":656,"name":"_outputHash","nodeType":"VariableDeclaration","scope":682,"src":"14062:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14062:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":658,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":682,"src":"14091:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":657,"name":"uint64","nodeType":"ElementaryTypeName","src":"14091:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":660,"name":"_sig","nodeType":"VariableDeclaration","scope":682,"src":"14116:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":659,"name":"bytes","nodeType":"ElementaryTypeName","src":"14116:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14002:137:0"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[],"src":"14216:0:0"},"scope":829,"src":"13976:341:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":697,"nodeType":"Block","src":"14568:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":693,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"14609:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":694,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"14616:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":690,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"14578:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6138_$","typeString":"type(library TaskImpl)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6137,"src":"14578:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14578:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"14578:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":698,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":687,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"14555:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":688,"modifierName":{"argumentTypes":null,"id":686,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"14543:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14543:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"name":"_taskId","nodeType":"VariableDeclaration","scope":698,"src":"14511:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14511:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14510:17:0"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"14568:0:0"},"scope":829,"src":"14484:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":720,"nodeType":"Block","src":"15091:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":714,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"15136:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":715,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"15143:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":716,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"15157:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":717,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"15164:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":711,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"15101:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3176_$","typeString":"type(library PrincipalImpl)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":3005,"src":"15101:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2475_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15101:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"15101:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":721,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":707,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13090,"src":"15075:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15075:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":709,"modifierName":{"argumentTypes":null,"id":706,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"15058:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"15058:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":721,"src":"14993:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":699,"name":"uint","nodeType":"ElementaryTypeName","src":"14993:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":702,"name":"_seed","nodeType":"VariableDeclaration","scope":721,"src":"15012:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":701,"name":"uint","nodeType":"ElementaryTypeName","src":"15012:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":704,"name":"_sig","nodeType":"VariableDeclaration","scope":721,"src":"15024:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":703,"name":"bytes","nodeType":"ElementaryTypeName","src":"15024:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14992:50:0"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"15091:0:0"},"scope":829,"src":"14967:209:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":738,"nodeType":"Block","src":"15412:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":734,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"15464:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":735,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"15471:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":732,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"15429:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3176_$","typeString":"type(library PrincipalImpl)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3175,"src":"15429:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2475_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15429:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":731,"id":737,"nodeType":"Return","src":"15422:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":739,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":739,"src":"15323:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint","nodeType":"ElementaryTypeName","src":"15323:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15322:19:0"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"name":"","nodeType":"VariableDeclaration","scope":739,"src":"15375:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"15375:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":726,"length":null,"nodeType":"ArrayTypeName","src":"15375:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":730,"name":"","nodeType":"VariableDeclaration","scope":739,"src":"15393:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":728,"name":"uint","nodeType":"ElementaryTypeName","src":"15393:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":729,"length":null,"nodeType":"ArrayTypeName","src":"15393:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15374:33:0"},"scope":829,"src":"15297:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":752,"nodeType":"Block","src":"15753:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":748,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"15806:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":749,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"15813:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":746,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"15770:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":9126,"src":"15770:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2475_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15770:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":745,"id":751,"nodeType":"Return","src":"15763:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":753,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":753,"src":"15695:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint","nodeType":"ElementaryTypeName","src":"15695:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15694:19:0"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"name":"","nodeType":"VariableDeclaration","scope":753,"src":"15747:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint","nodeType":"ElementaryTypeName","src":"15747:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15746:6:0"},"scope":829,"src":"15666:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":774,"nodeType":"Block","src":"16239:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":770,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"16288:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":771,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"16295:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":768,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"16256:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":9163,"src":"16256:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2475_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16256:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":767,"id":773,"nodeType":"Return","src":"16249:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":775,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":775,"src":"16142:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint","nodeType":"ElementaryTypeName","src":"16142:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16141:19:0"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"name":"","nodeType":"VariableDeclaration","scope":775,"src":"16194:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint","nodeType":"ElementaryTypeName","src":"16194:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":760,"name":"","nodeType":"VariableDeclaration","scope":775,"src":"16200:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint","nodeType":"ElementaryTypeName","src":"16200:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":763,"name":"","nodeType":"VariableDeclaration","scope":775,"src":"16206:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"16206:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":762,"length":null,"nodeType":"ArrayTypeName","src":"16206:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":766,"name":"","nodeType":"VariableDeclaration","scope":775,"src":"16224:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":764,"name":"uint","nodeType":"ElementaryTypeName","src":"16224:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":765,"length":null,"nodeType":"ArrayTypeName","src":"16224:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16193:45:0"},"scope":829,"src":"16117:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":792,"nodeType":"Block","src":"16767:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":787,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"16815:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":788,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"16822:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":789,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"16836:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":785,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"16784:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":9427,"src":"16784:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2475_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16784:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":784,"id":791,"nodeType":"Return","src":"16777:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":793,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":793,"src":"16676:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint","nodeType":"ElementaryTypeName","src":"16676:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":779,"name":"_scAddr","nodeType":"VariableDeclaration","scope":793,"src":"16695:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16695:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16675:36:0"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"name":"","nodeType":"VariableDeclaration","scope":793,"src":"16745:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"16745:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":782,"length":null,"nodeType":"ArrayTypeName","src":"16745:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"16744:18:0"},"scope":829,"src":"16652:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":811,"nodeType":"Block","src":"17121:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":807,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"17164:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":808,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"17171:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2475_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":805,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"17138:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":8784,"src":"17138:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2475_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17138:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":804,"id":810,"nodeType":"Return","src":"17131:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":812,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":798,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"17069:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":799,"modifierName":{"argumentTypes":null,"id":797,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"17052:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"17052:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"name":"_custodian","nodeType":"VariableDeclaration","scope":812,"src":"17008:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"17008:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17007:20:0"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"name":"","nodeType":"VariableDeclaration","scope":812,"src":"17094:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"17094:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":803,"name":"","nodeType":"VariableDeclaration","scope":812,"src":"17103:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":802,"name":"bytes","nodeType":"ElementaryTypeName","src":"17103:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17093:23:0"},"scope":829,"src":"16989:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":827,"nodeType":"Block","src":"17504:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":823,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"17550:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":824,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"17557:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":821,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"17521:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9480_$","typeString":"type(library WorkersImpl)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":8810,"src":"17521:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17521:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":820,"id":826,"nodeType":"Return","src":"17514:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":828,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"name":"_data","nodeType":"VariableDeclaration","scope":828,"src":"17416:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":813,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":816,"name":"_signature","nodeType":"VariableDeclaration","scope":828,"src":"17436:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":815,"name":"bytes","nodeType":"ElementaryTypeName","src":"17436:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17415:45:0"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"name":"","nodeType":"VariableDeclaration","scope":828,"src":"17494:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint","nodeType":"ElementaryTypeName","src":"17494:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17493:6:0"},"scope":829,"src":"17394:181:0","stateMutability":"view","superFunction":null,"visibility":"public"}],"scope":830,"src":"767:16810:0"}],"src":"0:17578:0"},"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"4447":{"events":{"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event","signature":"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"},"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55":{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event","signature":"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55"},"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb":{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event","signature":"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb"},"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd":{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event","signature":"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd"},"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint256"},{"indexed":false,"name":"gasPx","type":"uint256"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7"},"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint256[]"},{"indexed":false,"name":"gasPxs","type":"uint256[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7"},"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142"},"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event","signature":"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f"},"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event","signature":"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454"},"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event","signature":"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f"},"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event","signature":"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f"},"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5":{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event","signature":"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5"},"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9":{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event","signature":"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9"},"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158":{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event","signature":"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158"},"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint64"},{"indexed":false,"name":"gasPx","type":"uint64"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d"},"0x5b00db39a072b9c10ede0c598bf9c262cd8e40a7057c19e3691a7d38dfa2c84e":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint64[]"},{"indexed":false,"name":"gasPxs","type":"uint64[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0x5b00db39a072b9c10ede0c598bf9c262cd8e40a7057c19e3691a7d38dfa2c84e"},"0x4bd41c1b1fe5d4fab28fe14a580082e19937fe7f97068b2bd8424abe636220a9":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"workerAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0x4bd41c1b1fe5d4fab28fe14a580082e19937fe7f97068b2bd8424abe636220a9"}},"links":{"WorkersImpl":"0x64eC82a5B423daACF0e54846a5Fd85E39C07de11","PrincipalImpl":"0xca1f01912Add958E796297F9E0bf54f5bA269605","TaskImpl":"0x72ce9D181fce3F52200D80e65f263bd6cD81c0cA","SecretContractImpl":"0x5103127C803C45F97741eED9b112F3F939b402E0","UpgradeImpl":"0x3B888868CDD69126999F613Ef083314708D8eB68"},"address":"0x14F2AA80c3CB711305C6A308D520906Abc2FcF91","transactionHash":"0xcbdc5734cf8d7db74749698c4fc1a8ff18c80befad8c579270a0ecc0ee85839e"}},"schemaVersion":"3.0.10","updatedAt":"2019-10-15T06:40:43.693Z","devdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_optionalEthereumContractAddress":"Output state hash","_optionalEthereumData":"Output state hash","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_stateDeltaHash":"Input state delta hash","_taskId":"Unique taskId"}},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_taskId":"Unique taskId"}},"countSecretContracts()":{"return":"Number of deployed secret contracts"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash","_nonce":"Locally-computed nonce value for this deployment"}},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"createTaskRecords(bytes32[],uint64[],uint64[],uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimits":"ENG gas limit","_gasPxs":"ENG gas price in grains format (10 ** 8)","_inputsHashes":"Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_initStateDeltaHash":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumContractAddress":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumData":"Initial state delta hash as a result of the contract\'s constructor","_preCodeHash":"Predeployed bytecode hash","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deposit(address,uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit","_custodian":"The worker\'s ETH address"}},"getActiveWorkers(uint256)":{"params":{"_blockNumber":"Block number"}},"getAllSecretContractAddresses()":{"return":"Array of secret contract addresses"},"getEpochSize()":{"return":"Epoch size"},"getFirstBlockNumber(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Block number"},"getReport(address)":{"params":{"_custodian":"The worker\'s custodian address"}},"getSecretContract(bytes32)":{"params":{"_scAddr":"Secret contract address"},"return":"SecretContract struct"},"getSecretContractAddresses(uint256,uint256)":{"params":{"_start":"Start of range","_stop":"End of range"},"return":"Subset of deployed secret contract addresses"},"getSigningAddress()":{"return":"Signing address"},"getTaskRecord(bytes32)":{"params":{"_taskId":"Unique identifier for a given task"},"return":"TaskRecord struct"},"getUserTaskDeployments(address)":{"params":{"_sender":"Task sender\'s ethereum address"},"return":"Current number for task deployments for user"},"getWorker(address)":{"params":{"_worker":"Worker\'s ethereum address"},"return":"Worker struct"},"getWorkerFromSigningAddress(address)":{"params":{"_signer":"Worker\'s signing address"},"return":"Ethereum addressWorker struct"},"getWorkerGroup(uint256,bytes32)":{"params":{"_blockNumber":"Block number the task record was mined","_scAddr":"Secret contract address"},"return":"Selected workers\' addresses"},"getWorkerParams(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes"},"getWorkersParams()":{"return":"Array of WorkersParams structs"},"register(address,bytes,bytes)":{"params":{"_report":"The RLP encoded report returned by the IAS","_signature":"Signature","_signer":"The signer address, derived from the enclave public key"}},"returnFeesForTask(bytes32)":{"params":{"_taskId":"Unique taskId"}},"setWorkersParams(uint256,uint256,bytes)":{"params":{"_blockNumber":"Block number principal node is attempting to set worker params","_seed":"The random integer generated by the enclave","_sig":"Principal node\'s signature"}},"verifyReport(bytes,bytes)":{"params":{"_data":"The report itself","_signature":"The signature of the report"}},"withdraw(uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit"}}}},"userdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee."},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"notice":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure."},"countSecretContracts()":{"notice":"Check if secret contract has been deployed"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"notice":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid."},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"notice":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"createTaskRecords(bytes32[],uint64[],uint64[],uint256)":{"notice":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deposit(address,uint256)":{"notice":"Deposits ENG stake into contract from worker. Worker must be registered to do so."},"getActiveWorkers(uint256)":{"notice":"Get active workers before a certain block number"},"getAllSecretContractAddresses()":{"notice":"Get all secret contract addresses"},"getEpochSize()":{"notice":"Get the epoch block size"},"getFirstBlockNumber(uint256)":{"notice":"Get the first block number of an epoch that a given block number belongs to"},"getReport(address)":{"notice":"The RLP encoded report returned by the IAS server"},"getSecretContract(bytes32)":{"notice":"Get a SecretContract struct given a particular secret contract address"},"getSecretContractAddresses(uint256,uint256)":{"notice":"Get deployed secret contract addresses within a range"},"getSigningAddress()":{"notice":"Get signing address of calling worker"},"getTaskRecord(bytes32)":{"notice":"Get a TaskRecord struct given a particular task\'s ID"},"getUserTaskDeployments(address)":{"notice":"Get the current number/index (used as unique nonce value) of task deployments for a given user user"},"getWorker(address)":{"notice":"Get Worker struct from a given worker\'s ethereum address"},"getWorkerFromSigningAddress(address)":{"notice":"Get Worker struct from a given worker\'s signing address"},"getWorkerGroup(uint256,bytes32)":{"notice":"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address."},"getWorkerParams(uint256)":{"notice":"Get worker params for an epoch given a particular block number"},"getWorkersParams()":{"notice":"Get epoch-based history of worker params information"},"login()":{"notice":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process."},"logout()":{"notice":"Logout worker. Worker must be logged in to do so."},"register(address,bytes,bytes)":{"notice":"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks."},"returnFeesForTask(bytes32)":{"notice":"Return the task fee to the task creator when too many blocks have elapsed without task resolution."},"setWorkersParams(uint256,uint256,bytes)":{"notice":"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node"},"verifyReport(bytes,bytes)":{"notice":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate."},"withdraw(uint256)":{"notice":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so."}}}}')},function(e){e.exports=JSON.parse('{"contractName":"EnigmaToken","abi":[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"INITIAL_SUPPLY","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.8+commit.23d335f2\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_from\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"INITIAL_SUPPLY\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"addedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"increaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"subtractedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"decreaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"details\\":\\"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. \\",\\"methods\\":{\\"approve(address,uint256)\\":{\\"details\\":\\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\",\\"params\\":{\\"_spender\\":\\"The address which will spend the funds.\\",\\"_value\\":\\"The amount of tokens to be spent.\\"}},\\"balanceOf(address)\\":{\\"details\\":\\"Gets the balance of the specified address.\\",\\"params\\":{\\"owner\\":\\"The address to query the balance of.\\"},\\"return\\":\\"An uint256 representing the amount owned by the passed address.\\"},\\"constructor\\":{\\"details\\":\\"EnigmaToken Constructor Runs only on initial contract creation.\\"},\\"decimals()\\":{\\"return\\":\\"the number of decimals of the token.\\"},\\"decreaseAllowance(address,uint256)\\":{\\"details\\":\\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"spender\\":\\"The address which will spend the funds.\\",\\"subtractedValue\\":\\"The amount of tokens to decrease the allowance by.\\"}},\\"increaseAllowance(address,uint256)\\":{\\"details\\":\\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"addedValue\\":\\"The amount of tokens to increase the allowance by.\\",\\"spender\\":\\"The address which will spend the funds.\\"}},\\"name()\\":{\\"return\\":\\"the name of the token.\\"},\\"symbol()\\":{\\"return\\":\\"the symbol of the token.\\"},\\"totalSupply()\\":{\\"details\\":\\"Total number of tokens in existence\\"},\\"transfer(address,uint256)\\":{\\"details\\":\\"Transfer token for a specified address when not paused\\",\\"params\\":{\\"_to\\":\\"The address to transfer to.\\",\\"_value\\":\\"The amount to be transferred.\\"}},\\"transferFrom(address,address,uint256)\\":{\\"details\\":\\"Transfer tokens from one address to another when not paused\\",\\"params\\":{\\"_from\\":\\"address The address which you want to send tokens from\\",\\"_to\\":\\"address The address which you want to transfer to\\",\\"_value\\":\\"uint256 the amount of tokens to be transferred\\"}}},\\"title\\":\\"Enigma Token\\"},\\"userdoc\\":{\\"methods\\":{}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":\\"EnigmaToken\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":{\\"keccak256\\":\\"0x1d072d408420008c3d39b1006b9adbbe472f55fc314a8eb80d9861edfeb54c73\\",\\"urls\\":[\\"bzzr://9ec40fae3d143258454c5d7c25811f7969f1ef64abbf88ab96d753d6322906a4\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\":{\\"keccak256\\":\\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\\",\\"urls\\":[\\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\":{\\"keccak256\\":\\"0xe195405e9993d575173cdb5dd408db7459a026b9a98085c1a3b676f020f46584\\",\\"urls\\":[\\"bzzr://4463a0d4f49767f59c02f2a987b90d48e0d31b3ed3424f3e743496f102f96044\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\":{\\"keccak256\\":\\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\\",\\"urls\\":[\\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b506040518060400160405280600681526020017f456e69676d6100000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f454e470000000000000000000000000000000000000000000000000000000000815250600882600390805190602001906100959291906101a9565b5081516100a99060049060208501906101a9565b506005805460ff191660ff92909216919091179055506100d990503366354a6ba7a180006100de602090811b901c565b610244565b6001600160a01b0382166100f157600080fd5b61010a8160025461019060201b6106741790919060201c565b6002556001600160a01b0382166000908152602081815260409091205461013a918390610674610190821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156101a257600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101ea57805160ff1916838001178555610217565b82800160010185558215610217579182015b828111156102175782518255916020019190600101906101fc565b50610223929150610227565b5090565b61024191905b80821115610223576000815560010161022d565b90565b6107d3806102536000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610452565b6100c161046d565b6101626004803603604081101561025c57600080fd5b506001600160a01b0381351690602001356104ce565b6101626004803603604081101561028857600080fd5b506001600160a01b038135169060200135610517565b61017e600480360360408110156102b457600080fd5b506001600160a01b0381358116916020013516610523565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e838361052f565b9392505050565b60025490565b60006103888484846105ab565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006001600160a01b0383166103b957600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61067416565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006001600160a01b0383166104e357600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61068616565b600061036e838361069b565b600061036e83836106b1565b60006001600160a01b03831661054457600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b6001600160a01b03831660009081526001602090815260408083203384529091528120546105df908363ffffffff61068616565b6001600160a01b038516600090815260016020908152604080832033845290915290205561060e8484846106dc565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561036e57600080fd5b60008282111561069557600080fd5b50900390565b60006106a83384846106dc565b50600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0382166106ef57600080fd5b6001600160a01b038316600090815260208190526040902054610718908263ffffffff61068616565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461074d908263ffffffff61067416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a72305820cd0470b2dddcc56c882132081664f5106c4c77a70e625dbc86f5a15d248f86ec0029","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610452565b6100c161046d565b6101626004803603604081101561025c57600080fd5b506001600160a01b0381351690602001356104ce565b6101626004803603604081101561028857600080fd5b506001600160a01b038135169060200135610517565b61017e600480360360408110156102b457600080fd5b506001600160a01b0381358116916020013516610523565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e838361052f565b9392505050565b60025490565b60006103888484846105ab565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006001600160a01b0383166103b957600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61067416565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006001600160a01b0383166104e357600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61068616565b600061036e838361069b565b600061036e83836106b1565b60006001600160a01b03831661054457600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b6001600160a01b03831660009081526001602090815260408083203384529091528120546105df908363ffffffff61068616565b6001600160a01b038516600090815260016020908152604080832033845290915290205561060e8484846106dc565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561036e57600080fd5b60008282111561069557600080fd5b50900390565b60006106a83384846106dc565b50600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0382166106ef57600080fd5b6001600160a01b038316600090815260208190526040902054610718908263ffffffff61068616565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461074d908263ffffffff61067416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a72305820cd0470b2dddcc56c882132081664f5106c4c77a70e625dbc86f5a15d248f86ec0029","sourceMap":"660:1642:2:-;;;913:105;8:9:-1;5:2;;;30:1;27;20:12;5:2;913:105:2;405:163:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:1:2;501:4:28;493:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;515:16:28;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:28;:20;;-1:-1:-1;;541:20:28;;;;;;;;;;;;-1:-1:-1;978:33:2;;-1:-1:-1;984:10:2;753:17;978:5;;;;;:33;;:::i;:::-;660:1642;;6198:263:27;-1:-1:-1;;;;;6272:21:27;;6264:30;;;;;;6320:23;6337:5;6320:12;;:16;;;;;;:23;;;;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:27;;:9;:18;;;;;;;;;;;;:29;;6397:5;;6374:22;;;;;:29;;:::i;:::-;-1:-1:-1;;;;;6353:18:27;;:9;:18;;;;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;:9;;6418:36;;;;;;;;;;6198:263;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:26:o;660:1642:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;660:1642:2;;;-1:-1:-1;660:1642:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","deployedSourceMap":"660:1642:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;660:1642:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:128:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2026:128:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;936:89:27;;;:::i;:::-;;;;;;;;;;;;;;;;1620:150:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1620:150:2;;;;;;;;;;;;;;;;;:::i;712:58::-;;;:::i;930:81:28:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4233:317:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:27;;;;;;;;:::i;1234:104::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:27;-1:-1:-1;;;;;1234:104:27;;:::i;771:85:28:-;;;:::i;5058:327:27:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:27;;;;;;;;:::i;1200:120:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1200:120:2;;;;;;;;:::i;2160:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2160:139:2;;;;;;;;;;:::i;628:81:28:-;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2026:128:2:-;2093:4;2116:31;2130:8;2140:6;2116:13;:31::i;:::-;2109:38;2026:128;-1:-1:-1;;;2026:128:2:o;936:89:27:-;1006:12;;936:89;:::o;1620:150:2:-;1702:4;1725:38;1744:5;1751:3;1756:6;1725:18;:38::i;:::-;1718:45;1620:150;-1:-1:-1;;;;1620:150:2:o;712:58::-;753:17;712:58;:::o;930:81:28:-;995:9;;;;930:81;:::o;4233:317:27:-;4313:4;-1:-1:-1;;;;;4337:21:27;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:27;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:27;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;4462:60;;;;;;;;;;;-1:-1:-1;4539:4:27;4233:317;;;;:::o;1234:104::-;-1:-1:-1;;;;;1315:16:27;1289:7;1315:16;;;;;;;;;;;;1234:104::o;771:85:28:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;5058:327:27;5143:4;-1:-1:-1;;;;;5167:21:27;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:27;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;1200:120:2:-;1263:4;1286:27;1301:3;1306:6;1286:14;:27::i;2160:139::-;2234:7;2260:32;2276:6;2283:8;2260:15;:32::i;2735:238:27:-;2800:4;-1:-1:-1;;;;;2824:21:27;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:27;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;2909:36;;;;;;;;;;;-1:-1:-1;2962:4:27;2735:238;;;;:::o;3436:294::-;-1:-1:-1;;;;;3560:14:27;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:27;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:27;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;;;;;;;;;;;;-1:-1:-1;3719:4:27;3436:294;;;;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;1205:145;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:26;;;1205:145::o;1962:137:27:-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;:::-;-1:-1:-1;2088:4:27;1962:137;;;;:::o;1669:129::-;-1:-1:-1;;;;;1767:15:27;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;5599:256::-;-1:-1:-1;;;;;5686:16:27;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:27;;:9;:15;;;;;;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:27;;;:9;:15;;;;;;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:27;;;:9;:13;;;;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o","source":"pragma solidity ^0.5.0;\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\";\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\";\\n\\n/**\\n * @title Enigma Token\\n * @dev ERC20 Enigma Token (ENG)\\n *\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\n * units referred to as \'Grains\'.\\n *\\n * ENG are displayed using 8 decimal places of precision.\\n *\\n * 1 ENG is equivalent to:\\n *   100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n *\\n * 150 million ENG (total supply) is equivalent to:\\n *   15000000000000000 == 150000000 * 10**8 == 1e17\\n *\\n * All initial ENG Grains are assigned to the creator of\\n * this contract.\\n *\\n */\\ncontract EnigmaToken is ERC20, ERC20Detailed {\\n\\n    uint256 public constant INITIAL_SUPPLY = 150000000 * 10**8;  // 150 million ENG specified in Grains\\n\\n    /**\\n    * @dev EnigmaToken Constructor\\n    * Runs only on initial contract creation.\\n    */\\n    constructor() public ERC20Detailed(\\"Enigma\\", \\"ENG\\", 8) {\\n        _mint(msg.sender, INITIAL_SUPPLY);\\n    }\\n\\n    /**\\n    * @dev Transfer token for a specified address when not paused\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint256 _value) public returns (bool) {\\n        return super.transfer(_to, _value);\\n    }\\n\\n    /**\\n    * @dev Transfer tokens from one address to another when not paused\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint256 the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\\n        return super.transferFrom(_from, _to, _value);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint256 _value) public returns (bool) {\\n        return super.approve(_spender, _value);\\n    }\\n\\n    function allowance(address _owner, address _spender) public view returns (uint256) {\\n        return super.allowance(_owner,_spender);\\n    }\\n\\n}","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1745]},"id":1746,"nodeType":"SourceUnit","nodes":[{"id":1649,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1650,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12706,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1651,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12764,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1652,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":12705,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$12705","typeString":"contract ERC20"}},"id":1653,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1654,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":12763,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$12763","typeString":"contract ERC20Detailed"}},"id":1655,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[12705,12763,12832],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1745,"linearizedBaseContracts":[1745,12763,12705,12832],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1662,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1745,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1676,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12847,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1673,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1670,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12620,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1677,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1668,"modifierName":{"argumentTypes":null,"id":1664,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12763,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$12763_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1745,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1692,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1688,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1689,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1686,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12349,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1685,"id":1691,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"name":"_to","nodeType":"VariableDeclaration","scope":1693,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1681,"name":"_value","nodeType":"VariableDeclaration","scope":1693,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"name":"","nodeType":"VariableDeclaration","scope":1693,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1683,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1745,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12349,"visibility":"public"},{"body":{"id":1711,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1706,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1707,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1708,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1704,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":12434,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1703,"id":1710,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"name":"_from","nodeType":"VariableDeclaration","scope":1712,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1697,"name":"_to","nodeType":"VariableDeclaration","scope":1712,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1699,"name":"_value","nodeType":"VariableDeclaration","scope":1712,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"name":"","nodeType":"VariableDeclaration","scope":1712,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1701,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1745,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":12434,"visibility":"public"},{"body":{"id":1727,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1723,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1724,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1721,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":12385,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1720,"id":1726,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"name":"_spender","nodeType":"VariableDeclaration","scope":1728,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1716,"name":"_value","nodeType":"VariableDeclaration","scope":1728,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"name":"","nodeType":"VariableDeclaration","scope":1728,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1718,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1745,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":12385,"visibility":"public"},{"body":{"id":1743,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1739,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1740,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1737,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12330,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1736,"id":1742,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"name":"_owner","nodeType":"VariableDeclaration","scope":1744,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1732,"name":"_spender","nodeType":"VariableDeclaration","scope":1744,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"name":"","nodeType":"VariableDeclaration","scope":1744,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1745,"src":"2160:139:2","stateMutability":"view","superFunction":12330,"visibility":"public"}],"scope":1746,"src":"660:1642:2"}],"src":"0:2302:2"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1745]},"id":1746,"nodeType":"SourceUnit","nodes":[{"id":1649,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1650,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12706,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1651,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12764,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1652,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":12705,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$12705","typeString":"contract ERC20"}},"id":1653,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1654,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":12763,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$12763","typeString":"contract ERC20Detailed"}},"id":1655,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[12705,12763,12832],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1745,"linearizedBaseContracts":[1745,12763,12705,12832],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1662,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1745,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1676,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12847,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1673,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1670,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12620,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1677,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1668,"modifierName":{"argumentTypes":null,"id":1664,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12763,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$12763_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1745,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1692,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1688,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1689,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1686,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12349,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1685,"id":1691,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"name":"_to","nodeType":"VariableDeclaration","scope":1693,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1681,"name":"_value","nodeType":"VariableDeclaration","scope":1693,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"name":"","nodeType":"VariableDeclaration","scope":1693,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1683,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1745,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12349,"visibility":"public"},{"body":{"id":1711,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1706,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1707,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1708,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1704,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":12434,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1703,"id":1710,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"name":"_from","nodeType":"VariableDeclaration","scope":1712,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1697,"name":"_to","nodeType":"VariableDeclaration","scope":1712,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1699,"name":"_value","nodeType":"VariableDeclaration","scope":1712,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"name":"","nodeType":"VariableDeclaration","scope":1712,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1701,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1745,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":12434,"visibility":"public"},{"body":{"id":1727,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1723,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1724,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1721,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":12385,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1720,"id":1726,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"name":"_spender","nodeType":"VariableDeclaration","scope":1728,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1716,"name":"_value","nodeType":"VariableDeclaration","scope":1728,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"name":"","nodeType":"VariableDeclaration","scope":1728,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1718,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1745,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":12385,"visibility":"public"},{"body":{"id":1743,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1739,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1740,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1737,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12330,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1736,"id":1742,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"name":"_owner","nodeType":"VariableDeclaration","scope":1744,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1732,"name":"_spender","nodeType":"VariableDeclaration","scope":1744,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"name":"","nodeType":"VariableDeclaration","scope":1744,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1745,"src":"2160:139:2","stateMutability":"view","superFunction":12330,"visibility":"public"}],"scope":1746,"src":"660:1642:2"}],"src":"0:2302:2"},"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"4447":{"events":{"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}},"links":{},"address":"0x9fE8db9260Dd36c71C25a7C06C41618af59d629e","transactionHash":"0xe83d6453646b94b3a836fc86031b4b19f4a992a65838bb6f6a3c3214ae2e5787"}},"schemaVersion":"3.0.10","updatedAt":"2019-10-15T06:40:43.601Z","devdoc":{"details":"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. ","methods":{"approve(address,uint256)":{"details":"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.","params":{"_spender":"The address which will spend the funds.","_value":"The amount of tokens to be spent."}},"balanceOf(address)":{"details":"Gets the balance of the specified address.","params":{"owner":"The address to query the balance of."},"return":"An uint256 representing the amount owned by the passed address."},"constructor":{"details":"EnigmaToken Constructor Runs only on initial contract creation."},"decimals()":{"return":"the number of decimals of the token."},"decreaseAllowance(address,uint256)":{"details":"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"spender":"The address which will spend the funds.","subtractedValue":"The amount of tokens to decrease the allowance by."}},"increaseAllowance(address,uint256)":{"details":"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"addedValue":"The amount of tokens to increase the allowance by.","spender":"The address which will spend the funds."}},"name()":{"return":"the name of the token."},"symbol()":{"return":"the symbol of the token."},"totalSupply()":{"details":"Total number of tokens in existence"},"transfer(address,uint256)":{"details":"Transfer token for a specified address when not paused","params":{"_to":"The address to transfer to.","_value":"The amount to be transferred."}},"transferFrom(address,address,uint256)":{"details":"Transfer tokens from one address to another when not paused","params":{"_from":"address The address which you want to send tokens from","_to":"address The address which you want to transfer to","_value":"uint256 the amount of tokens to be transferred"}}},"title":"Enigma Token"},"userdoc":{"methods":{}}}')},function(e,t){e.exports=require("jayson/lib/client/browser")},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("retry")},function(e,t){e.exports=require("ethereumjs-abi")},function(e,t,n){e.exports=n(17)},function(e,t){e.exports=require("core-js/stable")},function(e,t){e.exports=require("regenerator-runtime/runtime")},function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"ERROR",function(){return h}),n.d(r,"DEPOSIT_TRANSACTION_HASH",function(){return v}),n.d(r,"DEPOSIT_CONFIRMATION",function(){return C}),n.d(r,"DEPOSIT_RECEIPT",function(){return E}),n.d(r,"WITHDRAW_TRANSACTION_HASH",function(){return V}),n.d(r,"WITHDRAW_CONFIRMATION",function(){return x}),n.d(r,"WITHDRAW_RECEIPT",function(){return L}),n.d(r,"LOGIN_TRANSACTION_HASH",function(){return N}),n.d(r,"LOGIN_CONFIRMATION",function(){return P}),n.d(r,"LOGIN_RECEIPT",function(){return R}),n.d(r,"LOGOUT_TRANSACTION_HASH",function(){return w}),n.d(r,"LOGOUT_CONFIRMATION",function(){return A}),n.d(r,"LOGOUT_RECEIPT",function(){return W}),n.d(r,"DEPLOY_SC_ADDR_RESULT",function(){return q}),n.d(r,"DEPLOY_SC_ETH_TRANSACTION_HASH",function(){return M}),n.d(r,"DEPLOY_SC_ETH_CONFIRMATION",function(){return F}),n.d(r,"DEPLOY_SC_ETH_RECEIPT",function(){return H}),n.d(r,"DEPLOY_SC_ENG_RECEIPT",function(){return B}),n.d(r,"CREATE_TASK",function(){return U}),n.d(r,"CREATE_TASK_INPUT",function(){return G}),n.d(r,"CREATE_TASK_RECORD_TRANSACTION_HASH",function(){return O}),n.d(r,"CREATE_TASK_RECORD_CONFIRMATION",function(){return z}),n.d(r,"CREATE_TASK_RECORD_RECEIPT",function(){return K}),n.d(r,"CREATE_TASK_RECORD",function(){return j}),n.d(r,"CREATE_TASK_RECORDS_TRANSACTION_HASH",function(){return Y}),n.d(r,"CREATE_TASK_RECORDS_CONFIRMATION",function(){return J}),n.d(r,"CREATE_TASK_RECORDS_RECEIPT",function(){return Z}),n.d(r,"CREATE_TASK_RECORDS",function(){return X}),n.d(r,"SEND_TASK_INPUT_RESULT",function(){return Q}),n.d(r,"POLL_TASK_STATUS_RESULT",function(){return ee}),n.d(r,"GET_TASK_RESULT_RESULT",function(){return te}),n.d(r,"DEPLOY_SECRET_CONTRACT_RESULT",function(){return ne}),n.d(r,"POLL_TASK_ETH_RESULT",function(){return re}),n.d(r,"RPC_SEND_TASK_INPUT",function(){return ae}),n.d(r,"RPC_DEPLOY_SECRET_CONTRACT",function(){return ie}),n.d(r,"RPC_GET_TASK_RESULT",function(){return se}),n.d(r,"RPC_GET_TASK_STATUS",function(){return oe}),n.d(r,"GET_TASK_RESULT_SUCCESS",function(){return de}),n.d(r,"GET_TASK_RESULT_FAILED",function(){return pe}),n.d(r,"GET_TASK_RESULT_UNVERIFIED",function(){return le}),n.d(r,"GET_TASK_RESULT_INPROGRESS",function(){return ce}),n.d(r,"ETH_STATUS_UNDEFINED",function(){return ye}),n.d(r,"ETH_STATUS_CREATED",function(){return ue}),n.d(r,"ETH_STATUS_VERIFIED",function(){return me}),n.d(r,"ETH_STATUS_FAILED",function(){return fe}),n.d(r,"ETH_STATUS_FAILED_ETH",function(){return _e}),n.d(r,"ETH_STATUS_FAILED_RETURN",function(){return be});n(15),n(16);var a=n(2),i=n.n(a),s=n(3),o=n.n(s),d=n(0),p=n.n(d),l=n(7),c=n.n(l),y=n(4),u=n(5),m=n.n(u);p.a.options.usePureJavaScript=!0;var f=c.a.ec;function _(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2]?"00":"",r=!0,a=!1,s=void 0;try{for(var o,d=t[Symbol.iterator]();!(r=(o=d.next()).done);r=!0){var p=o.value;p=g(p),e+=n+i.a.BigInt(p.length/2).toString(16).padStart(16,"0")+p}}catch(e){a=!0,s=e}finally{try{r||null==d.return||d.return()}finally{if(a)throw s}}return e}function b(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=n?"01":"",a=!0,s=!1,o=void 0;try{for(var d,p=t[Symbol.iterator]();!(a=(d=p.next()).done);a=!0){var l=d.value;e=_(e+=r+i.a.BigInt(l[0].length*(l[1]+9)).toString(16).padStart(16,"0"),l[0],n)}}catch(e){s=!0,o=e}finally{try{a||null==p.return||p.return()}finally{if(s)throw o}}return e}function g(e){return"0x"==e.substring(0,2)?e.substring(2):e}var T={test:function(){return"hello2"},generateScAddr:function(e,t){return o.a.soliditySha3({t:"bytes",v:e},{t:"uint",v:t})},hash:function(e){var t=_("",e);return o.a.soliditySha3({t:"bytes",v:t})},principalHash:function(e,t,n,r){var a="";return a=b(a=_(a,[e,t],!0),[[n,20],[r,32]],!0),o.a.soliditySha3({t:"bytes",v:a})},commitReceiptsHash:function(e,t,n,r,a,i,s,d,p){var l="";return l=_(l,[e]),l=_(l=b(l,[t]),[n]),l=_(l=b(l,[r,a,i]),[s,d,p]),o.a.soliditySha3({t:"bytes",v:l})},getDerivedKey:function(e,t){var n=new f("secp256k1");128==e.length&&(e="04"+e);var r=n.keyFromPrivate(t,"hex"),a=n.keyFromPublic(e,"hex").getPublic().mul(r.getPrivate()),i=2|(a.getY().isOdd()?1:0),s=a.getX(),o=y.Buffer.from([i]),d=s.toArrayLike(y.Buffer,"be",32),l=p.a.md.sha256.create();return l.update(o.toString("binary")),l.update(d.toString("binary")),l.digest().toHex()},encryptMessage:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:p.a.random.getBytesSync(12),r=p.a.util.hexToBytes(e),a=p.a.cipher.createCipher("AES-GCM",r);return a.start({iv:n}),a.update(p.a.util.createBuffer(t)),a.finish(),a.output.putBuffer(a.mode.tag).putBytes(n).toHex()},decryptMessage:function(e,t){var n=p.a.util.hexToBytes(e),r=y.Buffer.from(t,"hex"),a=p.a.util.createBuffer(r.slice(-12)),i=p.a.util.createBuffer(r.slice(-28,-12)),s=p.a.cipher.createDecipher("AES-GCM",n);if(s.start({iv:a,tag:i}),s.update(p.a.util.createBuffer(r.slice(0,-28))),s.finish())return s.output.toHex();throw new Error("decipher did not finish")},toGrains:function(e){return e*Math.pow(10,8)}};T.remove0x=g,T.hexToAscii=function(e){if("number"!=typeof e&&"string"!=typeof e)return"";e=e.toString().replace(/\s+/gi,"");for(var t=[],n=0;n<e.length;n+=2){var r=parseInt(e.substr(n,2),16);isNaN(r)||0===r||t.push(String.fromCharCode(r))}return t.join("")},T.sleep=function(e){return new Promise(function(t){return setTimeout(t,e)})},T.gzip=function(e){return new Promise(function(t,n){m.a.gzip(e,function(e,r){e?n(e):t(r)})})},T.gunzip=function(e){return new Promise(function(t,n){m.a.gunzip(e,function(e,r){e?n(e):t(r)})})};var D=T,S=n(8),I=n(9),k=n(1),$=n.n(k),h="error",v="depositTransactionHash",C="depositConfirmation",E="depositReceipt",V="withdrawTransactionHash",x="withdrawConfirmation",L="withdrawReceipt",N="loginTransactionHash",P="loginConfirmation",R="loginReceipt",w="logoutTransactionHash",A="logoutConfirmation",W="logoutReceipt",q="deploySCAddrResult",M="deploySCEthTransactionHash",F="deploySCEthConfirmation",H="deploySCEthReceipt",B="deploySCEngReceipt",U="createTask",G="createTaskInput",O="createTaskRecordTransactionHash",z="createTaskRecordConfirmation",K="createTaskRecordReceipt",j="createTaskRecord",Y="createTaskRecordsTransactionHash",J="createTaskRecordsConfirmation",Z="createTaskRecordsReceipt",X="createTaskRecords",Q="sendTaskInputResult",ee="pollTaskStatusResult",te="getTaskResultResult",ne="deploySecretContractResult",re="pollTaskETHResult",ae="sendTaskInput",ie="deploySecretContract",se="getTaskResult",oe="getTaskStatus",de="SUCCESS",pe="FAILED",le="UNVERIFIED",ce="INPROGRESS",ye=0,ue=1,me=2,fe=3,_e=4,be=5;function ge(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function Te(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){ge(i,r,a,s,o,"next",e)}function o(e){ge(i,r,a,s,o,"throw",e)}s(void 0)})}}function De(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Se=function(){function e(t,n,r,a,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.enigmaContract=n,this.tokenContract=r,this.txDefaults=a,this.enigma=i}var t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,_;return t=e,(n=[{key:"findBySigningAddress",value:(_=Te(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorkerFromSigningAddress(t).call();case 2:return n=e.sent,e.abrupt("return",{account:n[0],status:parseInt(n[1][1]),report:n[1][2],balance:parseInt(n[1][3]),logs:n[1][4]});case 4:case"end":return e.stop()}},e,this)})),function(e){return _.apply(this,arguments)})},{key:"getWorkerStatus",value:(f=Te(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return n=e.sent,e.abrupt("return",parseInt(n.status));case 4:case"end":return e.stop()}},e,this)})),function(e){return f.apply(this,arguments)})},{key:"isDeployed",value:(m=Te(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getSecretContract(t).call();case 3:return e.t1=e.sent.status,e.t2=(0,e.t0)(e.t1),e.abrupt("return",1===e.t2);case 6:case"end":return e.stop()}},e,this)})),function(e){return m.apply(this,arguments)})},{key:"countSecretContracts",value:(u=Te(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.countSecretContracts().call();case 3:return e.t1=e.sent,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(){return u.apply(this,arguments)})},{key:"getSecretContractAddresses",value:(y=Te(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContractAddresses(t,n).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e,t){return y.apply(this,arguments)})},{key:"getAllSecretContractAddresses",value:(c=Te(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getAllSecretContractAddresses().call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(){return c.apply(this,arguments)})},{key:"getCodeHash",value:(l=Te(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.codeHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"countStateDeltas",value:(p=Te(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.stateDeltaHashes.length);case 3:case"end":return e.stop()}},e,this)})),function(e){return p.apply(this,arguments)})},{key:"getStateDeltaHash",value:(d=Te(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes[e.t0]);case 4:case"end":return e.stop()}},e,this)})),function(e,t){return d.apply(this,arguments)})},{key:"getStateDeltaHashes",value:(o=Te(regeneratorRuntime.mark(function e(t,n,r){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.t1=r,e.abrupt("return",e.sent.stateDeltaHashes.slice(e.t0,e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e,t,n){return o.apply(this,arguments)})},{key:"isValidDeltaHash",value:(s=Te(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes.includes(e.t0));case 4:case"end":return e.stop()}},e,this)})),function(e,t){return s.apply(this,arguments)})},{key:"login",value:function(e){var t=this,n=new $.a;return Te(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.login().send({from:e}).on("transactionHash",function(e){n.emit(N,e)}).on("confirmation",function(e,t){n.emit(P,e,t)}).on("receipt",function(e){n.emit(R,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(h,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"logout",value:function(e){var t=this,n=new $.a;return Te(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.logout().send({from:e}).on("transactionHash",function(e){n.emit(w,e)}).on("confirmation",function(e,t){n.emit(A,e,t)}).on("receipt",function(e){n.emit(W,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(h,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"deposit",value:function(e,t){var n=this,r=new $.a;return Te(regeneratorRuntime.mark(function a(){var i;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,n.tokenContract.methods.balanceOf(e).call();case 2:if(!(a.sent<t)){a.next=7;break}return"Not enough tokens in wallet",r.emit("error",{name:"NotEnoughTokens",message:"Not enough tokens in wallet"}),a.abrupt("return");case 7:return a.next=9,n.tokenContract.methods.approve(n.enigmaContract.options.address,t).send({from:e});case 9:return a.prev=9,a.next=12,n.enigmaContract.methods.deposit(e,t).send({from:e}).on("transactionHash",function(e){r.emit(v,e)}).on("confirmation",function(e,t){r.emit(C,e,t)});case 12:i=a.sent,r.emit(E,i),a.next=19;break;case 16:a.prev=16,a.t0=a.catch(9),r.emit(h,a.t0.message);case 19:case"end":return a.stop()}},a,null,[[9,16]])}))(),r}},{key:"withdraw",value:function(e,t){var n=this,r=new $.a;return Te(regeneratorRuntime.mark(function a(){return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,n.enigmaContract.methods.withdraw(t).send({from:e}).on("transactionHash",function(e){r.emit(V,e)}).on("confirmation",function(e,t){r.emit(x,e,t)}).on("receipt",function(e){r.emit(L,e)});case 3:a.next=8;break;case 5:a.prev=5,a.t0=a.catch(0),r.emit(h,a.t0.message);case 8:case"end":return a.stop()}},a,null,[[0,5]])}))(),r}},{key:"getBalance",value:(i=Te(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getWorker(t).call();case 3:return e.t1=e.sent.balance,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e){return i.apply(this,arguments)})},{key:"getWorkerSignerAddr",value:(a=Te(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return e.abrupt("return",e.sent.signer);case 3:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})}])&&De(t.prototype,n),r&&De(t,r),e}();var Ie=function e(t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,_){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.inputsHash=D.hash([n,r,_?f:t,o]),this.scAddr=t,this.encryptedFn=n,this.encryptedAbiEncodedArgs=r,this.gasLimit=a,this.gasPx=i,this.msgId=s,this.userPubKey=o,this.firstBlockNumber=d,this.workerAddress=p,this.workerEncryptionKey=l,this.sender=c,this.userTaskSig=y,this.nonce=u,this.preCode=m,this.preCodeHash=f,this.isContractDeploymentTask=_,this.transactionHash="",this.taskId="",this.receipt="",this.ethStatus=0,this.proof="",this.creationBlockNumber=-1,this.encryptedAbiEncodedOutputs="",this.delta="",this.usedGas="",this.ethereumPayload="",this.ethereumAddress="",this.workerTaskSig="",this.engStatus="null",this.decryptedOutput=""},ke=n(10),$e=n.n(ke),he=n(11),ve=n.n(he),Ce=n(12),Ee=n.n(Ce),Ve=n(13),xe=n(6),Le=n.n(xe);function Ne(e){return(Ne="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Pe(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function Re(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){Pe(i,r,a,s,o,"next",e)}function o(e){Pe(i,r,a,s,o,"throw",e)}s(void 0)})}}function we(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Ae=function(){function e(t,n,r,a){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.txDefaults=i,this.config={},this.config.retry={},this.config.retry.retries=s.retry&&null!=s.retry.retries?s.retry.retries:5,this.config.retry.factor=s.retry&&null!=s.retry.factor?s.retry.factor:2,this.config.retry.minTimeout=s.retry&&null!=s.retry.minTimeout?s.retry.minTimeout:2e3,this.config.retry.maxTimeout=s.retry&&null!=s.retry.maxTimeout?s.retry.maxTimeout:"Infinity",this.config.retry.randomize=!s.retry||(null==s.retry.randomize||s.retry.randomize);this.client=$e()(function(e,t){ve.a.post(a,JSON.parse(e),{headers:{"Content-Type":"application/json",credentials:"include"}}).then(function(e){if(h in e.data)t(e.data.error,null);else{var n=JSON.stringify(e.data.result);t(null,n)}}).catch(function(e){t({code:-32e3,message:e.message},null)})},{}),this.workerParamsCache={},this.selectedWorkerGroupCache={},this.taskKeyLocalStorage={},this.createContracts(n,r)}var t,n,r,a,s,d,l,c,y,u,m,f;return t=e,n=[{key:"admin",value:function(){this.admin=new Se(this.web3,this.enigmaContract,this.tokenContract,this.txDefaults,this)}},{key:"createContracts",value:function(e,t){this.enigmaContract=new this.web3.eth.Contract(S.abi,e,this.txDefaults),this.tokenContract=new this.web3.eth.Contract(I.abi,t,this.txDefaults)}},{key:"createTask",value:function(e,t,n,r,a,i,s){var o=this,d=new $.a;return Re(regeneratorRuntime.mark(function p(){var l,c,y,u,m,f,_,b,g,T,S,I,k,$,v,C,E,V,x,L,N,P,R,w,A,W,q,M;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:return p.t0=parseInt,p.next=3,o.enigmaContract.methods.getUserTaskDeployments(a).call();case 3:if(p.t1=p.sent,l=(0,p.t0)(p.t1),c=s?D.generateScAddr(a,l):i,!s){p.next=17;break}if(!Buffer.isBuffer(i)){p.next=14;break}return y=i,p.next=11,D.gzip(y);case 11:u=p.sent,p.next=15;break;case 14:throw Error("PreCode expected to be a Buffer, instead got "+Ne(i));case 15:p.next=19;break;case 17:y="",u="";case 19:for(m=s?o.web3.utils.soliditySha3({t:"bytes",value:y.toString("hex")}):"",f=void 0===t||0===t.length?[[],[]]:t[0].map(function(e,n){return t.map(function(e){return e[n]})}),_=D.remove0x(o.web3.eth.abi.encodeParameters(f[1],f[0])),b=[],g=0;g<_.length;g+=2)b.push(parseInt(_.substr(g,2),16));return p.next=26,o.web3.eth.getBlockNumber();case 26:return T=p.sent,p.next=29,o.getWorkerParams(T);case 29:return S=p.sent,I=S.firstBlockNumber,p.next=33,o.selectWorkerGroup(c,S,1)[0];case 33:return k=(k=p.sent).toLowerCase().slice(-40),$=o.obtainTaskKeyPair(),v=$.publicKey,C=$.privateKey,p.prev=36,p.next=39,new Promise(function(e,t){o.client.request("getWorkerEncryptionKey",{workerAddress:k,userPubKey:v},function(n,r){n?t(n):e(r)})});case 39:if(E=p.sent,V=E.result,x=E.id,L=V.workerEncryptionKey,N=V.workerSig,P="0x0000000000000013456e69676d612055736572204d6573736167650000000000000040"+L,R=(R=Le.a.recover("0x"+N,o.web3.utils.soliditySha3({t:"bytes",value:P}))).toLowerCase().slice(-40),k===R){p.next=50;break}console.error("Worker address",k,"!= recovered address",R),d.emit(h,{name:"InvalidWorker",message:"Invalid worker encryption key + signature combo ".concat(k," != ").concat(R)}),p.next=58;break;case 50:return w=D.getDerivedKey(L,C),A=D.encryptMessage(w,e),W=D.encryptMessage(w,Buffer.from(b)),q=o.web3.utils.soliditySha3({t:"bytes",v:A},{t:"bytes",v:W}),p.next=56,o.web3.eth.sign(q,a);case 56:M=p.sent,d.emit(U,new Ie(c,A,W,n,r,x,v,I,k,L,a,M,l,u.toString("base64"),m,s));case 58:p.next=63;break;case 60:p.prev=60,p.t2=p.catch(36),d.emit(h,p.t2);case 63:case"end":return p.stop()}},p,null,[[36,60]])}))(),d}},{key:"createTaskRecord",value:function(e){var t=this,n=new $.a;return Re(regeneratorRuntime.mark(function r(){var a;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,t.tokenContract.methods.balanceOf(e.sender).call();case 2:if(!(r.sent<e.gasLimit*e.gasPx)){r.next=6;break}return n.emit(h,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),r.abrupt("return");case 6:return r.next=8,t.tokenContract.methods.approve(t.enigmaContract.options.address,e.gasLimit*e.gasPx).send({from:e.sender});case 8:if(r.prev=8,!e.isContractDeploymentTask){r.next=15;break}return r.next=12,t.enigmaContract.methods.createDeploymentTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber,e.nonce).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(O,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 12:r.t0=r.sent,r.next=18;break;case 15:return r.next=17,t.enigmaContract.methods.createTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(O,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 17:r.t0=r.sent;case 18:a=r.t0,e.taskId=a.events.TaskRecordCreated.returnValues.taskId,e.receipt=a,e.ethStatus=1,e.creationBlockNumber=a.blockNumber,n.emit(K,a),n.emit(j,e),r.next=30;break;case 27:r.prev=27,r.t1=r.catch(8),n.emit(h,r.t1.message);case 30:case"end":return r.stop()}},r,null,[[8,27]])}))(),n}},{key:"createTaskRecords",value:function(e){var t=this,n=new $.a;return Re(regeneratorRuntime.mark(function r(){var a,i,s,o,d,p;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return a=e.map(function(e){return e.inputsHash}),i=e.map(function(e){return e.gasLimit}),s=e.map(function(e){return e.gasPx}),o=e.map(function(e){return e.gasLimit*e.gasPx}),r.next=6,t.tokenContract.methods.balanceOf(e[0].sender).call();case 6:if(d=r.sent,p=o.reduce(function(e,t){return e+t},0),!(d<p)){r.next=11;break}return n.emit(h,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),r.abrupt("return");case 11:return r.next=13,t.tokenContract.methods.approve(t.enigmaContract.options.address,p).send({from:e[0].sender});case 13:return r.next=15,t.enigmaContract.methods.createTaskRecords(a,i,s,e[0].firstBlockNumber).send({from:e[0].sender}).on("transactionHash",function(t){for(var r=0;r<e.length;r++)e[r].transactionHash=t;n.emit(Y,t)}).on("confirmation",function(e,t){n.emit(J,e,t)}).then(function(t){for(var r=t.events.TaskRecordsCreated.returnValues.taskIds,a=0;a<e.length;a++)e[a].taskId=r[a],e[a].receipt=t,e[a].ethStatus=1,e[a].creationBlockNumber=t.blockNumber;n.emit(Z,t),n.emit(X,e)});case 15:case"end":return r.stop()}},r)}))(),n}},{key:"getTaskRecordStatus",value:(f=Re(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return n=e.sent,t.ethStatus=parseInt(n.status),t.proof=n.proof,e.abrupt("return",t);case 6:case"end":return e.stop()}},e,this)})),function(e){return f.apply(this,arguments)})},{key:"getTaskRecordFromTaskId",value:(m=Re(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t).call();case 2:return n=e.sent,e.abrupt("return",{sender:n.sender,inputsHash:n.inputsHash,outputHash:n.outputHash,gasLimit:parseInt(n.gasLimit),gasPx:parseInt(n.gasPx),blockNumber:parseInt(n.blockNumber),status:parseInt(n.status),proof:n.proof});case 4:case"end":return e.stop()}},e,this)})),function(e){return m.apply(this,arguments)})},{key:"getTaskOutputHash",value:(u=Re(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return e.abrupt("return",e.sent.outputHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return u.apply(this,arguments)})},{key:"getReport",value:(y=Re(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getReport(t).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e){return y.apply(this,arguments)})},{key:"getWorkerParams",value:(c=Re(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(0===Object.keys(this.workerParamsCache).length||t-this.workerParamsCache.firstBlockNumber>=this.epochSize)){e.next=8;break}return e.next=3,this.enigmaContract.methods.getEpochSize().call();case 3:return this.epochSize=e.sent,e.next=6,this.enigmaContract.methods.getWorkerParams(t).call();case 6:n=e.sent,this.workerParamsCache={firstBlockNumber:parseInt(n[0]),seed:i.a.BigInt(n[1]),workers:n[2],stakes:n[3].map(function(e){return i.a.BigInt(e)})};case 8:return e.abrupt("return",this.workerParamsCache);case 9:case"end":return e.stop()}},e,this)})),function(e){return c.apply(this,arguments)})},{key:"selectWorkerGroup",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5,r=t.stakes.reduce(function(e,t){return i.a.add(e,t)},i.a.BigInt(0)),a=0,s=[];do{for(var d=Ve.rawEncode(["uint256","bytes32","uint256"],[t.seed.toString(10),e,a]),p=o.a.keccak256(d),l=i.a.remainder(i.a.BigInt(p),r),c=t.workers[t.workers.length-1],y=0;y<t.workers.length;y++)if((l=i.a.subtract(l,t.stakes[y]))<=0){c=t.workers[y];break}s.includes(c)||s.push(c),a++}while(s.length<n);return s}},{key:"sendTaskInput",value:function(t){var n=this,r=new $.a;return Re(regeneratorRuntime.mark(function a(){var i,s;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return i=ae,s=Q,t.isContractDeploymentTask&&(i=ie,s=ne),a.prev=3,a.next=6,new Promise(function(r,a){n.client.request(i,e.serializeTask(t),function(e,t){e?a(e):r(t)})});case 6:r.emit(s,t),a.next=12;break;case 9:a.prev=9,a.t0=a.catch(3),r.emit(h,a.t0);case 12:case"end":return a.stop()}},a,null,[[3,9]])}))(),r}},{key:"getTaskResult",value:function(e){var t=this,n=new $.a,r=Ee.a.operation(this.config.retry);return r.attempt(function(){var a=Re(regeneratorRuntime.mark(function a(i){var s;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,new Promise(function(n,r){t.client.request(se,{taskId:D.remove0x(e.taskId)},function(e,t){e?r(e):n(t)})});case 3:if(!(s=a.sent).result){a.next=20;break}a.t0=s.result.status,a.next=a.t0===de?8:a.t0===pe?12:a.t0===le?15:a.t0===ce?15:17;break;case 8:e.delta=s.result.delta,e.ethereumPayload=s.result.ethereumPayload,e.ethereumAddress=s.result.ethereumAddress,e.preCodeHash=s.result.preCodeHash;case 12:e.encryptedAbiEncodedOutputs=s.result.output,e.usedGas=s.result.usedGas,e.workerTaskSig=s.result.signature;case 15:return e.engStatus=s.result.status,a.abrupt("break",18);case 17:throw new Error("Invalid task result status").message;case 18:a.next=26;break;case 20:if(!r.retry(!0)){a.next=25;break}return console.log("Warning: Got an empty TaskResult on attempt "+i+" of "+(t.config.retry.retries+1)+". Retrying..."),a.abrupt("return");case 25:e.engStatus=null;case 26:n.emit(te,e),a.next=32;break;case 29:a.prev=29,a.t1=a.catch(0),n.emit(h,a.t1);case 32:case"end":return a.stop()}},a,null,[[0,29]])}));return function(e){return a.apply(this,arguments)}}()),n}},{key:"decryptTaskResult",value:(l=Re(regeneratorRuntime.mark(function e(t){var n,r,a;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("task.encryptedAbiEncodedOutputs is "+t.encryptedAbiEncodedOutputs),t.encryptedAbiEncodedOutputs?(n=this.obtainTaskKeyPair(),r=n.privateKey,a=D.getDerivedKey(t.workerEncryptionKey,r),t.decryptedOutput=D.decryptMessage(a,t.encryptedAbiEncodedOutputs)):(console.log("Warning: task.encryptedAbiEncodedOutputs is empty, there is nothing to decrypt."),t.decryptedOutput=null),e.abrupt("return",t);case 3:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"verifyTaskOutput",value:(d=Re(regeneratorRuntime.mark(function e(t){var n,r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getTaskOutputHash(t);case 2:return n=e.sent,r=this.web3.utils.soliditySha3({t:"bytes",value:t.encryptedAbiEncodedOutputs.toString("hex")}),e.abrupt("return",n===r);case 5:case"end":return e.stop()}},e,this)})),function(e){return d.apply(this,arguments)})},{key:"verifyTaskStatus",value:(s=Re(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getTaskRecordStatus(t);case 2:n=e.sent.ethStatus,e.t0=t.engStatus,e.next=e.t0===de?6:e.t0===pe?8:e.t0===le?10:e.t0===ce?10:12;break;case 6:return e.abrupt("return",n===me);case 8:return e.abrupt("return",n===fe);case 10:return e.abrupt("return",n===ue);case 12:return e.abrupt("return",n===ye);case 13:case"end":return e.stop()}},e,this)})),function(e){return s.apply(this,arguments)})},{key:"pollTaskStatusGen",value:regeneratorRuntime.mark(function e(t,n){var r=this;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,new Promise(function(e,a){r.client.request(oe,{taskId:D.remove0x(t.taskId),workerAddress:t.workerAddress,withResult:n},function(r,i){r?a(r):(t.engStatus=i.result.status,n&&(t.encryptedAbiEncodedOutputs=i.result.output),e(t))})});case 3:e.next=0;break;case 5:case"end":return e.stop()}},e)})},{key:"innerPollTaskStatus",value:function(e,t,n){var r=this;t.next().value.then(function(a){n.emit(ee,a),"SUCCESS"!==a.engStatus&&"FAILED"!==a.engStatus&&r.innerPollTaskStatus(e,t,n)}).catch(function(e){n.emit(h,e)})}},{key:"pollTaskStatus",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=new $.a,r=this.pollTaskStatusGen(e,t);return this.innerPollTaskStatus(e,r,n),n}},{key:"pollTaskETH",value:(a=Re(regeneratorRuntime.mark(function e(t){var n,r=arguments;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=r.length>1&&void 0!==r[1]?r[1]:1e3;case 1:if(t.ethStatus!==ue){e.next=9;break}return e.next=4,this.getTaskRecordStatus(t);case 4:return t=e.sent,e.next=7,D.sleep(n);case 7:e.next=1;break;case 9:return e.abrupt("return",t);case 10:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})},{key:"obtainTaskKeyPair",value:function(){var e,t="undefined"!=typeof window,n=t?window.localStorage.getItem("encodedPrivateKey"):this.taskKeyLocalStorage.encodedPrivateKey;if(null==n)throw Error("Need to set task key pair first");return e=t?atob(n):Buffer.from(n,"base64").toString("binary"),{publicKey:Le.a.publicKeyByPrivateKey(e),privateKey:e}}},{key:"setTaskKeyPair",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t="undefined"!=typeof window;if(""===e)for(var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",r=0;r<9;r++)e+=n.charAt(Math.floor(Math.random()*n.length));var a=p.a.random.createInstance();a.seedFileSync=function(t){return p.a.util.fillString(e,t)};var i=p.a.util.bytesToHex(a.getBytes(32));return t?window.localStorage.setItem("encodedPrivateKey",btoa(i)):this.taskKeyLocalStorage.encodedPrivateKey=Buffer.from(i,"binary").toString("base64"),e}},{key:"deploySecretContract",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new $.a;return Re(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!0).on(U,function(e){return o(e)}).on(h,function(e){return d(e)})});case 2:return p=o.sent,d.emit(U,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on(h,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(ne,function(t){return e(t)}).on(h,function(e){return t(e)})});case 10:return d.emit(ne,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit(h,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}},{key:"computeTask",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new $.a;return Re(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!1).on(U,function(e){return o(e)}).on(h,function(e){return d(e)})});case 2:return p=o.sent,d.emit(U,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on(h,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(Q,function(t){return e(t)}).on(h,function(e){return t(e)})});case 10:return d.emit(Q,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit(h,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}}],r=[{key:"serializeTask",value:function(e){return e.isContractDeploymentTask?{preCode:e.preCode,encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),encryptedFn:D.remove0x(e.encryptedFn),userDHKey:D.remove0x(e.userPubKey),contractAddress:D.remove0x(e.scAddr),workerAddress:e.workerAddress}:{taskId:D.remove0x(e.taskId),workerAddress:e.workerAddress,encryptedFn:D.remove0x(e.encryptedFn),encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),contractAddress:D.remove0x(e.scAddr),userDHKey:D.remove0x(e.userPubKey)}}},{key:"version",value:function(){return"0.0.1"}}],n&&we(t.prototype,n),r&&we(t,r),e}();n.d(t,"Enigma",function(){return Ae}),n.d(t,"utils",function(){return D}),n.d(t,"eeConstants",function(){return r})}])});
//# sourceMappingURL=enigma-js.node.min.js.map