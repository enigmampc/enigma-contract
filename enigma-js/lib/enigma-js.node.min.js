!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("enigma-js",[],t):"object"==typeof exports?exports["enigma-js"]=t():e["enigma-js"]=t()}(global,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=13)}([function(e,t){e.exports=require("node-forge")},function(e,t){e.exports=require("eventemitter3")},function(e,t){e.exports=require("jsbi")},function(e,t){e.exports=require("web3-utils")},function(e,t){e.exports=require("buffer")},function(e,t){e.exports=require("zlib")},function(e,t){e.exports=require("eth-crypto")},function(e,t){e.exports=require("elliptic")},function(e){e.exports=JSON.parse('{"contractName":"Enigma","abi":[{"constant":true,"inputs":[],"name":"getAllSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getWorkersParams","outputs":[{"components":[{"name":"firstBlockNumber","type":"uint256"},{"name":"workers","type":"address[]"},{"name":"stakes","type":"uint256[]"},{"name":"seed","type":"uint256"}],"name":"","type":"tuple[5]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_scAddr","type":"bytes32"}],"name":"getSecretContract","outputs":[{"components":[{"name":"owner","type":"address"},{"name":"preCodeHash","type":"bytes32"},{"name":"codeHash","type":"bytes32"},{"name":"stateDeltaHashes","type":"bytes32[]"},{"name":"status","type":"uint8"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"getTaskRecord","outputs":[{"components":[{"name":"sender","type":"address"},{"name":"inputsHash","type":"bytes32"},{"name":"outputHash","type":"bytes32"},{"name":"gasLimit","type":"uint256"},{"name":"gasPx","type":"uint256"},{"name":"blockNumber","type":"uint256"},{"name":"status","type":"uint8"},{"name":"proof","type":"bytes"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_signer","type":"address"}],"name":"getWorkerFromSigningAddress","outputs":[{"name":"","type":"address"},{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_worker","type":"address"}],"name":"getWorker","outputs":[{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSigningAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEpochSize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_sender","type":"address"}],"name":"getUserTaskDeployments","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_tokenAddress","type":"address"},{"name":"_principal","type":"address"},{"name":"_epochSize","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint256"},{"indexed":false,"name":"gasPx","type":"uint256"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint256[]"},{"indexed":false,"name":"gasPxs","type":"uint256[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event"},{"constant":false,"inputs":[{"name":"_signer","type":"address"},{"name":"_report","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_custodian","type":"address"},{"name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"login","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"logout","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContractFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_preCodeHash","type":"bytes32"},{"name":"_codeHash","type":"bytes32"},{"name":"_initStateDeltaHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"countSecretContracts","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_start","type":"uint256"},{"name":"_stop","type":"uint256"}],"name":"getSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint256"},{"name":"_gasPx","type":"uint256"},{"name":"_firstBlockNumber","type":"uint256"},{"name":"_nonce","type":"uint256"}],"name":"createDeploymentTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint256"},{"name":"_gasPx","type":"uint256"},{"name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHashes","type":"bytes32[]"},{"name":"_gasLimits","type":"uint256[]"},{"name":"_gasPxs","type":"uint256[]"},{"name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecords","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_stateDeltaHash","type":"bytes32"},{"name":"_outputHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitReceipt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitTaskFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"returnFeesForTask","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_seed","type":"uint256"},{"name":"_sig","type":"bytes"}],"name":"setWorkersParams","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getActiveWorkers","outputs":[{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getFirstBlockNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getWorkerParams","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_scAddr","type":"bytes32"}],"name":"getWorkerGroup","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_custodian","type":"address"}],"name":"getReport","outputs":[{"name":"","type":"address"},{"name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_data","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"verifyReport","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.8+commit.23d335f2\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createDeploymentTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"name\\":\\"_gasLimits\\",\\"type\\":\\"uint256[]\\"},{\\"name\\":\\"_gasPxs\\",\\"type\\":\\"uint256[]\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecords\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getActiveWorkers\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getWorkerGroup\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"logout\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdraw\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitReceipt\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitTaskFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"deposit\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_initStateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_seed\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setWorkersParams\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContractFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getAllSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getWorkersParams\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple[5]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"countSecretContracts\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getSecretContract\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"register\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_start\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_stop\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getTaskRecord\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"gasPx\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"proof\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getWorkerParams\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorkerFromSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"login\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_data\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"verifyReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_worker\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorker\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getFirstBlockNumber\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getEpochSize\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"returnFeesForTask\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_sender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getUserTaskDeployments\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"name\\":\\"_tokenAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_principal\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_epochSize\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"custodian\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"Registered\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"hash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"workerAddr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"ValidatedSig\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"inclusionBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"indexed\\":false,\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"name\\":\\"nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WorkersParameterized\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"gasPx\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskIds\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"inputsHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"gasLimits\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"name\\":\\"gasPxs\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordsCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"deltaHashIndex\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskIds\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"outputHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptsVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailed\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailedETH\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"TaskFeeReturned\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"DepositSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WithdrawSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"initStateDeltaHash\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"SecretContractDeployed\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_optionalEthereumContractAddress\\":\\"Output state hash\\",\\"_optionalEthereumData\\":\\"Output state hash\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_stateDeltaHash\\":\\"Input state delta hash\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"commitTaskFailure(bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"countSecretContracts()\\":{\\"return\\":\\"Number of deployed secret contracts\\"},\\"createDeploymentTaskRecord(bytes32,uint256,uint256,uint256,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\",\\"_nonce\\":\\"Locally-computed nonce value for this deployment\\"}},\\"createTaskRecord(bytes32,uint256,uint256,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"createTaskRecords(bytes32[],uint256[],uint256[],uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimits\\":\\"ENG gas limit\\",\\"_gasPxs\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHashes\\":\\"Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_initStateDeltaHash\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumContractAddress\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumData\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_preCodeHash\\":\\"Predeployed bytecode hash\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deploySecretContractFailure(bytes32,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deposit(address,uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\",\\"_custodian\\":\\"The worker\'s ETH address\\"}},\\"getActiveWorkers(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"}},\\"getAllSecretContractAddresses()\\":{\\"return\\":\\"Array of secret contract addresses\\"},\\"getEpochSize()\\":{\\"return\\":\\"Epoch size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Block number\\"},\\"getReport(address)\\":{\\"params\\":{\\"_custodian\\":\\"The worker\'s custodian address\\"}},\\"getSecretContract(bytes32)\\":{\\"params\\":{\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"SecretContract struct\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"params\\":{\\"_start\\":\\"Start of range\\",\\"_stop\\":\\"End of range\\"},\\"return\\":\\"Subset of deployed secret contract addresses\\"},\\"getSigningAddress()\\":{\\"return\\":\\"Signing address\\"},\\"getTaskRecord(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique identifier for a given task\\"},\\"return\\":\\"TaskRecord struct\\"},\\"getUserTaskDeployments(address)\\":{\\"params\\":{\\"_sender\\":\\"Task sender\'s ethereum address\\"},\\"return\\":\\"Current number for task deployments for user\\"},\\"getWorker(address)\\":{\\"params\\":{\\"_worker\\":\\"Worker\'s ethereum address\\"},\\"return\\":\\"Worker struct\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"params\\":{\\"_signer\\":\\"Worker\'s signing address\\"},\\"return\\":\\"Ethereum addressWorker struct\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number the task record was mined\\",\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"Selected workers\' addresses\\"},\\"getWorkerParams(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes\\"},\\"getWorkersParams()\\":{\\"return\\":\\"Array of WorkersParams structs\\"},\\"register(address,bytes,bytes)\\":{\\"params\\":{\\"_report\\":\\"The RLP encoded report returned by the IAS\\",\\"_signature\\":\\"Signature\\",\\"_signer\\":\\"The signer address, derived from the enclave public key\\"}},\\"returnFeesForTask(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique taskId\\"}},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number principal node is attempting to set worker params\\",\\"_seed\\":\\"The random integer generated by the enclave\\",\\"_sig\\":\\"Principal node\'s signature\\"}},\\"verifyReport(bytes,bytes)\\":{\\"params\\":{\\"_data\\":\\"The report itself\\",\\"_signature\\":\\"The signature of the report\\"}},\\"withdraw(uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\"}}}},\\"userdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee.\\"},\\"commitTaskFailure(bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure.\\"},\\"countSecretContracts()\\":{\\"notice\\":\\"Check if secret contract has been deployed\\"},\\"createDeploymentTaskRecord(bytes32,uint256,uint256,uint256,uint256)\\":{\\"notice\\":\\"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid.\\"},\\"createTaskRecord(bytes32,uint256,uint256,uint256)\\":{\\"notice\\":\\"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"createTaskRecords(bytes32[],uint256[],uint256[],uint256)\\":{\\"notice\\":\\"Create task records for tasks (either contract deployment or regular tasks). This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deploySecretContractFailure(bytes32,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deposit(address,uint256)\\":{\\"notice\\":\\"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\"},\\"getActiveWorkers(uint256)\\":{\\"notice\\":\\"Get active workers before a certain block number\\"},\\"getAllSecretContractAddresses()\\":{\\"notice\\":\\"Get all secret contract addresses\\"},\\"getEpochSize()\\":{\\"notice\\":\\"Get the epoch block size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"notice\\":\\"Get the first block number of an epoch that a given block number belongs to\\"},\\"getReport(address)\\":{\\"notice\\":\\"The RLP encoded report returned by the IAS server\\"},\\"getSecretContract(bytes32)\\":{\\"notice\\":\\"Get a SecretContract struct given a particular secret contract address\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"notice\\":\\"Get deployed secret contract addresses within a range\\"},\\"getSigningAddress()\\":{\\"notice\\":\\"Get signing address of calling worker\\"},\\"getTaskRecord(bytes32)\\":{\\"notice\\":\\"Get a TaskRecord struct given a particular task\'s ID\\"},\\"getUserTaskDeployments(address)\\":{\\"notice\\":\\"Get the current number/index (used as unique nonce value) of task deployments for a given user user\\"},\\"getWorker(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s ethereum address\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s signing address\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"notice\\":\\"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address.\\"},\\"getWorkerParams(uint256)\\":{\\"notice\\":\\"Get worker params for an epoch given a particular block number\\"},\\"getWorkersParams()\\":{\\"notice\\":\\"Get epoch-based history of worker params information\\"},\\"login()\\":{\\"notice\\":\\"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process.\\"},\\"logout()\\":{\\"notice\\":\\"Logout worker. Worker must be logged in to do so.\\"},\\"register(address,bytes,bytes)\\":{\\"notice\\":\\"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks.\\"},\\"returnFeesForTask(bytes32)\\":{\\"notice\\":\\"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\"},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"notice\\":\\"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node\\"},\\"verifyReport(bytes,bytes)\\":{\\"notice\\":\\"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\"},\\"withdraw(uint256)\\":{\\"notice\\":\\"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\"}}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":\\"Enigma\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":{\\"keccak256\\":\\"0x65888189bb158fe1e0af4e44c146c5488dc6e5412d67a68a4bf525386b17f77e\\",\\"urls\\":[\\"bzzr://e897b2413db0831474218a4ec9c760c80f7c6aa9dfa310d6d249283153176a3d\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol\\":{\\"keccak256\\":\\"0x7a8befde8abb59f06cf07e212187f89d19c3bea3128a39ecb1be090575c541e2\\",\\"urls\\":[\\"bzzr://9e32213777516ca794c97f0f371ab61e14a3e97073a6b83c257ebc8760434897\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol\\":{\\"keccak256\\":\\"0x0ad522a418f0667849a2358245a07cc64f8e91cc5875804002251cb64873e204\\",\\"urls\\":[\\"bzzr://1e30a5341a140274bd42ebc5081af0d0311bde223876b1e21bd685ab06652d2b\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol\\":{\\"keccak256\\":\\"0xa51a72e8404dbd12f291f205b02b0e9f5ecb505d78c38bc1b86bedb2257b7a28\\",\\"urls\\":[\\"bzzr://9f7f4cc58ebec18084bc7f0ce09692f6f132ab0e0c703fc09bdabec913736fda\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol\\":{\\"keccak256\\":\\"0xaba87ac6cd834c8a356a454c9eeca6373a159c772e70c2d444facb024907f087\\",\\"urls\\":[\\"bzzr://e8c6d14b96f76d84c547c841b61e0df7a87fdb3f099621cafbe70f45c79cbf05\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol\\":{\\"keccak256\\":\\"0xc9bd3a53a57a95af1958676186382951d915ec96f46a3db61164eb8d0298556e\\",\\"urls\\":[\\"bzzr://128fe282e7acd0f113926aaba8983c8fadaaab7c7060f23282d67a68a2c44b7d\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol\\":{\\"keccak256\\":\\"0xa024ae15d1fddc2e1fdd568fa4b30491b686a925f201c4505f8c8aff6899fda6\\",\\"urls\\":[\\"bzzr://ef337efb647966a0e6691af7187f20c2091a9635945052cf2c57acaf6e0c27ee\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol\\":{\\"keccak256\\":\\"0x4e00d7b1cd34e5f91b51a6d6cff4af44221cda6b193ce91e76f71a838fa889f1\\",\\"urls\\":[\\"bzzr://215fe7b649e59d98e2bb8c94efe38336b3364ea428f69fb2871b5896f65432be\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol\\":{\\"keccak256\\":\\"0x3bb43bcf13d17d018069e6a3c1a44d1a15e35ef600e077c1d0749ad8ec3ef23e\\",\\"urls\\":[\\"bzzr://668ac2199e2d27d7c8049c13cd3076e66b73af6d4c75abfdcbd8a870ef250df6\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol\\":{\\"keccak256\\":\\"0xe918c3a32ffaa3be9a2ca32e0c156fa13f45df3a180b4afb966ed74beac68aee\\",\\"urls\\":[\\"bzzr://4cf87b0dd13996acd984d0964bef0de24f9f5b8a7f9c181ac6fcb2cdf04b2e38\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol\\":{\\"keccak256\\":\\"0xe21e3ce303a61dc1fe7e5ee8c77c94b0a96eaa9015f8abe6eb1fbce2d903b8ee\\",\\"urls\\":[\\"bzzr://ff90e3a82eb6fb10497c419d71bf240f43c544d0071b74b251204200dc08bba1\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Base64.sol\\":{\\"keccak256\\":\\"0x6b6fca483b4fd19ab6f282b45b24f02277ad2b0e2e65269c1f1f9b0672bf8ef3\\",\\"urls\\":[\\"bzzr://227cecb0afb5c808a338d0c757cedf9c085786a8f74fece5d9b14fac332f1301\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Bytes.sol\\":{\\"keccak256\\":\\"0xa9504cd72371444aaec522d40e02f930e9017fc59059c80b4d0b60afe6d3f151\\",\\"urls\\":[\\"bzzr://09e35d59d1fd6c478388e098f8f586d0eb3004af0e8402e5dc0c003b3d555e56\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Memory.sol\\":{\\"keccak256\\":\\"0xbb69933fc38ebf561a60fc4496c8d48f4aef12b5cef49bb9dd2957d8c6478ce0\\",\\"urls\\":[\\"bzzr://a4b1117bcf978aebba7df92a10df9e866cf854033bc2f4d8e426e360ba78d1fa\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol\\":{\\"keccak256\\":\\"0x171f88dc2ce91d601aa659bf84a240a2e7565d26d1a3ef1a0f98ec8181573498\\",\\"urls\\":[\\"bzzr://3830487ad541d0a7df9b761dee0a835cf065e369c6f1b2ac5f8409413f1777b6\\"]},\\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\":{\\"keccak256\\":\\"0xb48974d92a87053dc1d6c5389f3d1b2ad522dec23afcb508eaa935d98dfdc0b6\\",\\"urls\\":[\\"bzzr://e665a84309432c27a26e622665dd97ff29d4d6ad7ad655d6e2c50226a5e99b56\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]}},\\"version\\":1}","bytecode":"0x60806040523480156200001157600080fd5b506040516060806200487a83398101806040526200003391908101906200009b565b600080546001600160a01b039485166001600160a01b031991821617909155600191825560c86002556003805493909416921691909117909155601e819055601f5562000129565b8051620000888162000104565b92915050565b805162000088816200011e565b600080600060608486031215620000b157600080fd5b6000620000bf86866200007b565b9350506020620000d2868287016200007b565b9250506040620000e5868287016200008e565b9150509250925092565b60006001600160a01b03821662000088565b90565b6200010f81620000ef565b81146200011b57600080fd5b50565b6200010f8162000101565b61474180620001396000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806375bbf75b1161010f578063b34e97e8116100a2578063d855a57911610071578063d855a57914610454578063df4da46114610469578063ee6dcef914610471578063f9a9b7ae14610484576101e5565b8063b34e97e814610406578063b5c149921461040e578063c011b1c314610421578063cbbc061d14610441576101e5565b80638ed05737116100de5780638ed05737146103815780639836ca31146103a1578063a0c39982146103c4578063a3bdae3e146103e5576101e5565b806375bbf75b146103265780637624281e1461033b578063786cd4d71461035b5780638e055b8b1461036e576101e5565b8063365a2cb31161018757806350946a9f1161015657806350946a9f146102d6578063516c8269146102e9578063550baa2f146102fc57806370266a4714610311576101e5565b8063365a2cb31461028a5780633a322c521461029d57806347e7ef24146102b057806348cc3761146102c3576101e5565b806316f9a2a4116101c357806316f9a2a4146102255780631d40ff0b1461024f5780631f3c99c31461026f5780632e1a7d4d14610277576101e5565b806302e15a91146101ea57806310851876146101ff578063167e54b714610212575b600080fd5b6101fd6101f8366004613481565b610497565b005b6101fd61020d366004613230565b610513565b6101fd61022036600461343d565b61058c565b6102386102333660046132d5565b6105cf565b6040516102469291906140a1565b60405180910390f35b61026261025d3660046135c1565b610669565b6040516102469190614090565b6101fd610708565b6101fd6102853660046132d5565b610961565b6101fd6102983660046132f3565b610c72565b6101fd6102ab3660046133d1565b610f1e565b6101fd6102be36600461313b565b6111be565b6101fd6102d13660046132f3565b6113df565b6101fd6102e4366004613663565b61164d565b6101fd6102f73660046134f6565b611870565b610304611b0c565b60405161024691906140c6565b610319611b67565b60405161024691906140d7565b61032e611c81565b6040516102469190614518565b61034e6103493660046132d5565b611d13565b60405161024691906141bd565b6101fd6103693660046130c0565b611dda565b61030461037c3660046135c1565b611e9e565b61039461038f3660046132d5565b611f34565b60405161024691906144d6565b6103b46103af3660046132d5565b612060565b6040516102469493929190614526565b6103d76103d2366004613049565b612103565b604051610246929190614070565b6103f86103f3366004613049565b612346565b604051610246929190614050565b6101fd6125c8565b61032e61041c366004613528565b612834565b61043461042f366004613049565b6128c3565b60405161024691906144e7565b61032e61044f3660046132d5565b612a74565b61045c612b03565b6040516102469190614042565b61032e612b1f565b6101fd61047f3660046132d5565b612b25565b61032e610492366004613049565b612ba5565b604051600160e01b63f37f394502815273__TaskImpl______________________________9063f37f3945906104dc906000908990899089908990899060040161440a565b60006040518083038186803b1580156104f457600080fd5b505af4158015610508573d6000803e3d6000fd5b505050505050505050565b604051600160e01b63eeb3ea8f02815273__TaskImpl______________________________9063eeb3ea8f90610556906000908890889088908890600401614271565b60006040518083038186803b15801561056e57600080fd5b505af4158015610582573d6000803e3d6000fd5b5050505050505050565b604051600160e01b6327731d8102815273__TaskImpl______________________________906327731d81906105569060009088908890889088906004016143c8565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b815260040161060c9291906142c8565b60006040518083038186803b15801561062457600080fd5b505af4158015610638573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610660919081019061319f565b91509150915091565b604051600160e11b635deadfbd02815260609073__WorkersImpl___________________________9063bbd5bf7a906106ab9060009087908790600401614493565b60006040518083038186803b1580156106c357600080fd5b505af41580156106d7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ff919081019061316b565b90505b92915050565b33610711612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561075957fe5b600281111561076457fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108015780601f106107d657610100808354040283529160200191610801565b820191906000526020600020905b8154815290600101906020018083116107e457829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156108ac57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561087a57fe5b600381111561088557fe5b81526020016001820154815260200160028201548152505081526020019060010190610839565b50505091525090915060019050816020015160028111156108c957fe5b146108f257604051600160e51b62461bcd0281526004016108e99061417d565b60405180910390fd5b604051600160e01b6349e44f4902815273__WorkersImpl___________________________906349e44f499061092d906000906004016141ce565b60006040518083038186803b15801561094557600080fd5b505af4158015610959573d6000803e3d6000fd5b505050505050565b3361096a612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156109b257fe5b60028111156109bd57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a5a5780601f10610a2f57610100808354040283529160200191610a5a565b820191906000526020600020905b815481529060010190602001808311610a3d57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610b0557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610ad357fe5b6003811115610ade57fe5b81526020016001820154815260200160028201548152505081526020019060010190610a92565b5050509152509091506002905081602001516002811115610b2257fe5b14610b4257604051600160e51b62461bcd0281526004016108e9906141ad565b610b4a612bf0565b604051600160e21b6328de336102815273__WorkersImpl___________________________9063a378cd8490610b8690859043906004016144f8565b60606040518083038186803b158015610b9e57600080fd5b505af4158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bd69190810190613585565b9050600281516003811115610be757fe5b14610c0757604051600160e51b62461bcd0281526004016108e99061412d565b8060200151610c1543612a74565b11610c3557604051600160e51b62461bcd0281526004016108e99061416d565b604051600160e21b632fdb7d1902815273__WorkersImpl___________________________9063bf6df464906105569060009088906004016142c8565b33610c7b612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610cc357fe5b6002811115610cce57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d6b5780601f10610d4057610100808354040283529160200191610d6b565b820191906000526020600020905b815481529060010190602001808311610d4e57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610e1657838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610de457fe5b6003811115610def57fe5b81526020016001820154815260200160028201548152505081526020019060010190610da3565b5050509152509091506001905081602001516002811115610e3357fe5b14610e5357604051600160e51b62461bcd0281526004016108e99061417d565b8960016000828152601c602052604090206004015460ff166001811115610e7657fe5b14610e9657604051600160e51b62461bcd0281526004016108e99061413d565b604051600160e01b632def3b6902815273__TaskImpl______________________________90632def3b6990610ee1906000908f908f908f908f908f908f908f908f906004016142e3565b60006040518083038186803b158015610ef957600080fd5b505af4158015610f0d573d6000803e3d6000fd5b505050505050505050505050505050565b33610f27612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610f6f57fe5b6002811115610f7a57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110175780601f10610fec57610100808354040283529160200191611017565b820191906000526020600020905b815481529060010190602001808311610ffa57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110c257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561109057fe5b600381111561109b57fe5b8152602001600182015481526020016002820154815250508152602001906001019061104f565b50505091525090915060019050816020015160028111156110df57fe5b146110ff57604051600160e51b62461bcd0281526004016108e99061417d565b8560016000828152601c602052604090206004015460ff16600181111561112257fe5b1461114257604051600160e51b62461bcd0281526004016108e99061413d565b604051600160e21b632c5b41b302815273__TaskImpl______________________________9063b16d06cc90611185906000908b908b908b908b90600401614376565b60006040518083038186803b15801561119d57600080fd5b505af41580156111b1573d6000803e3d6000fd5b5050505050505050505050565b816111c7612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561120f57fe5b600281111561121a57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112b75780601f1061128c576101008083540402835291602001916112b7565b820191906000526020600020905b81548152906001019060200180831161129a57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561136257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561133057fe5b600381111561133b57fe5b815260200160018201548152602001600282015481525050815260200190600101906112ef565b505050915250909150600090508160200151600281111561137f57fe5b14156113a057604051600160e51b62461bcd0281526004016108e99061418d565b604051600160e21b630e80483102815273__WorkersImpl___________________________90633a0120c4906105569060009088908890600401614249565b336113e8612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561143057fe5b600281111561143b57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114d85780601f106114ad576101008083540402835291602001916114d8565b820191906000526020600020905b8154815290600101906020018083116114bb57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561158357838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561155157fe5b600381111561155c57fe5b81526020016001820154815260200160028201548152505081526020019060010190611510565b50505091525090915060019050816020015160028111156115a057fe5b146115c057604051600160e51b62461bcd0281526004016108e99061417d565b89600080828152601c602052604090206004015460ff1660018111156115e257fe5b1461160257604051600160e51b62461bcd0281526004016108e99061419d565b604051600160e01b63b36d042b02815273__TaskImpl______________________________9063b36d042b90610ee1906000908f908f908f908f908f908f908f908f906004016142e3565b33611656612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561169e57fe5b60028111156116a957fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117465780601f1061171b57610100808354040283529160200191611746565b820191906000526020600020905b81548152906001019060200180831161172957829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156117f157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156117bf57fe5b60038111156117ca57fe5b8152602001600182015481526020016002820154815250508152602001906001019061177e565b505050915250909150600090508160200151600281111561180e57fe5b141561182f57604051600160e51b62461bcd0281526004016108e99061418d565b604051600160e31b63184e876302815273__PrincipalImpl_________________________9063c2743b18906104dc906000908990899089906004016144ae565b33611879612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156118c157fe5b60028111156118cc57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119695780601f1061193e57610100808354040283529160200191611969565b820191906000526020600020905b81548152906001019060200180831161194c57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611a1457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156119e257fe5b60038111156119ed57fe5b815260200160018201548152602001600282015481525050815260200190600101906119a1565b5050509152509091506001905081602001516002811115611a3157fe5b14611a5157604051600160e51b62461bcd0281526004016108e99061417d565b84600080828152601c602052604090206004015460ff166001811115611a7357fe5b14611a9357604051600160e51b62461bcd0281526004016108e99061419d565b604051600160e01b6370a2e43b02815273__TaskImpl______________________________906370a2e43b90611ad4906000908a908a908a90600401614459565b60006040518083038186803b158015611aec57600080fd5b505af4158015611b00573d6000803e3d6000fd5b50505050505050505050565b60606000601901805480602002602001604051908101604052809291908181526020018280548015611b5d57602002820191906000526020600020905b815481526020019060010190808311611b49575b5050505050905090565b611b6f612c12565b6040805160a08101909152600460056000835b82821015611c78578382600402016040518060800160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020018280548015611bfe57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611be0575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611c5657602002820191906000526020600020905b815481526020019060010190808311611c42575b5050505050815260200160038201548152505081526020019060010190611b82565b50505050905090565b604051600160e11b6302b519c302815260009073__SecretContractImpl____________________9063056a338690611cbe9084906004016141ce565b60206040518083038186803b158015611cd657600080fd5b505af4158015611cea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d0e91908101906135a3565b905090565b611d1b612c40565b6000828152601c6020908152604091829020825160a08101845281546001600160a01b031681526001820154818401526002820154818501526003820180548551818602810186019096528086529194929360608601939290830182828015611da357602002820191906000526020600020905b815481526020019060010190808311611d8f575b5050509183525050600482015460209091019060ff166001811115611dc457fe5b6001811115611dcf57fe5b90525090505b919050565b8260005b601854811015611e5c57816001600160a01b03166000601a016000806018018481548110611e0857fe5b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902054161415611e5457604051600160e51b62461bcd0281526004016108e99061411d565b600101611dde565b50604051600160e51b63063e88f102815273__WorkersImpl___________________________9063c7d11e2090610556906000908890889088906004016141fe565b604051600160e01b63e5a2600902815260609073__SecretContractImpl____________________9063e5a2600990611ee09060009087908790600401614493565b60006040518083038186803b158015611ef857600080fd5b505af4158015611f0c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ff91908101906131fc565b611f3c612c6b565b6000828152601b602090815260409182902082516101008101845281546001600160a01b03168152600182015492810192909252600281015492820192909252600382015460608201526004820154608082015260058083015460a0830152600683015491929160c084019160ff90911690811115611fb757fe5b6005811115611fc257fe5b815260078201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156120505780601f1061202557610100808354040283529160200191612050565b820191906000526020600020905b81548152906001019060200180831161203357829003601f168201915b5050505050815250509050919050565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b81526004016120a09291906142c8565b60006040518083038186803b1580156120b857600080fd5b505af41580156120cc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526120f491908101906135e0565b93509350935093509193509193565b600061210d612bc0565b6000612117612bc0565b60005b60185481101561233b5760188054601a916000918490811061213857fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b90910416600281111561218e57fe5b600281111561219957fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122365780601f1061220b57610100808354040283529160200191612236565b820191906000526020600020905b81548152906001019060200180831161221957829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156122e157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156122af57fe5b60038111156122ba57fe5b8152602001600182015481526020016002820154815250508152602001906001019061226e565b50505050815250509150856001600160a01b031682600001516001600160a01b0316141561233357601880548290811061231757fe5b6000918252602090912001546001600160a01b0316925061233b565b60010161211a565b509092509050915091565b6000606082612353612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561239b57fe5b60028111156123a657fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124435780601f1061241857610100808354040283529160200191612443565b820191906000526020600020905b81548152906001019060200180831161242657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156124ee57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156124bc57fe5b60038111156124c757fe5b8152602001600182015481526020016002820154815250508152602001906001019061247b565b505050915250909150600090508160200151600281111561250b57fe5b141561252c57604051600160e51b62461bcd0281526004016108e99061418d565b604051600160e01b632f68f03102815273__WorkersImpl___________________________90632f68f031906125699060009089906004016141dc565b60006040518083038186803b15801561258157600080fd5b505af4158015612595573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526125bd919081019061306f565b935093505050915091565b336125d1612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561261957fe5b600281111561262457fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126c15780601f10612696576101008083540402835291602001916126c1565b820191906000526020600020905b8154815290600101906020018083116126a457829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561276c57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561273a57fe5b600381111561274557fe5b815260200160018201548152602001600282015481525050815260200190600101906126f9565b5050505081525050905061277f43612a74565b61279e57604051600160e51b62461bcd0281526004016108e99061415d565b6002816020015160028111156127b057fe5b146127d057604051600160e51b62461bcd0281526004016108e9906141ad565b601e54606082015110156127f957604051600160e51b62461bcd0281526004016108e99061410d565b604051600160e11b6318a8dc7102815273__WorkersImpl___________________________90633151b8e29061092d906000906004016141ce565b604051600160e31b6312c8c46d02815260009073__WorkersImpl___________________________9063964623689061287390869086906004016140e8565b60206040518083038186803b15801561288b57600080fd5b505af415801561289f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106ff91908101906135a3565b6128cb612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561291357fe5b600281111561291e57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156129bb5780601f10612990576101008083540402835291602001916129bb565b820191906000526020600020905b81548152906001019060200180831161299e57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612a6657838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612a3457fe5b6003811115612a3f57fe5b815260200160018201548152602001600282015481525050815260200190600101906129f3565b505050915250909392505050565b604051600160e31b6304d5c11302815260009073__WorkersImpl___________________________906326ae089890612ab390849086906004016142c8565b60206040518083038186803b158015612acb57600080fd5b505af4158015612adf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061070291908101906135a3565b336000908152601a60205260409020546001600160a01b031690565b60015490565b8060016000828152601b602052604090206006015460ff166005811115612b4857fe5b14612b6857604051600160e51b62461bcd0281526004016108e99061414d565b604051600160e01b631c9a715b02815273__TaskImpl______________________________90631c9a715b9061092d9060009086906004016142c8565b6001600160a01b03166000908152601d602052604090205490565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b6040518061028001604052806005905b612c2a612cb0565b815260200190600190039081612c225790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b8035610702816146d4565b8051610702816146d4565b600082601f830112612cff57600080fd5b8151612d12612d0d8261458d565b614567565b91508181835260208401935060208101905083856020840282011115612d3757600080fd5b60005b83811015612d635781612d4d8882612ce3565b8452506020928301929190910190600101612d3a565b5050505092915050565b600082601f830112612d7e57600080fd5b8135612d8c612d0d8261458d565b91508181835260208401935060208101905083856020840282011115612db157600080fd5b60005b83811015612d635781612dc78882612f2d565b8452506020928301929190910190600101612db4565b600082601f830112612dee57600080fd5b8151612dfc612d0d8261458d565b91508181835260208401935060208101905083856020840282011115612e2157600080fd5b60005b83811015612d635781612e378882612f38565b8452506020928301929190910190600101612e24565b600082601f830112612e5e57600080fd5b8135612e6c612d0d8261458d565b91508181835260208401935060208101905083856020840282011115612e9157600080fd5b60005b83811015612d635781612ea78882612f2d565b8452506020928301929190910190600101612e94565b600082601f830112612ece57600080fd5b8151612edc612d0d8261458d565b91508181835260208401935060208101905083856020840282011115612f0157600080fd5b60005b83811015612d635781612f178882612f38565b8452506020928301929190910190600101612f04565b8035610702816146e8565b8051610702816146e8565b600082601f830112612f5457600080fd5b8135612f62612d0d826145ad565b91508082526020830160208301858383011115612f7e57600080fd5b612f89838284614667565b50505092915050565b600082601f830112612fa357600080fd5b8151612fb1612d0d826145ad565b91508082526020830160208301858383011115612fcd57600080fd5b612f89838284614673565b8051610702816146f1565b600060608284031215612ff557600080fd5b612fff6060614567565b9050600061300d8484612fd8565b825250602061301e84848301612f38565b602083015250604061303284828501612f38565b60408301525092915050565b8035610702816146fe565b60006020828403121561305b57600080fd5b60006130678484612cd8565b949350505050565b6000806040838503121561308257600080fd5b600061308e8585612ce3565b92505060208301516001600160401b038111156130aa57600080fd5b6130b685828601612f92565b9150509250929050565b6000806000606084860312156130d557600080fd5b60006130e18686612cd8565b93505060208401356001600160401b038111156130fd57600080fd5b61310986828701612f43565b92505060408401356001600160401b0381111561312557600080fd5b61313186828701612f43565b9150509250925092565b6000806040838503121561314e57600080fd5b600061315a8585612cd8565b92505060206130b685828601612f2d565b60006020828403121561317d57600080fd5b81516001600160401b0381111561319357600080fd5b61306784828501612cee565b600080604083850312156131b257600080fd5b82516001600160401b038111156131c857600080fd5b6131d485828601612cee565b92505060208301516001600160401b038111156131f057600080fd5b6130b685828601612ebd565b60006020828403121561320e57600080fd5b81516001600160401b0381111561322457600080fd5b61306784828501612ddd565b6000806000806080858703121561324657600080fd5b84356001600160401b0381111561325c57600080fd5b61326887828801612d6d565b94505060208501356001600160401b0381111561328457600080fd5b61329087828801612e4d565b93505060408501356001600160401b038111156132ac57600080fd5b6132b887828801612e4d565b92505060606132c987828801612f2d565b91505092959194509250565b6000602082840312156132e757600080fd5b60006130678484612f2d565b600080600080600080600080610100898b03121561331057600080fd5b600061331c8b8b612f2d565b985050602061332d8b828c01612f2d565b975050604061333e8b828c01612f2d565b965050606061334f8b828c01612f2d565b95505060808901356001600160401b0381111561336b57600080fd5b6133778b828c01612f43565b94505060a06133888b828c01612cd8565b93505060c06133998b828c0161303e565b92505060e08901356001600160401b038111156133b557600080fd5b6133c18b828c01612f43565b9150509295985092959890939650565b600080600080608085870312156133e757600080fd5b60006133f38787612f2d565b945050602061340487828801612f2d565b93505060406134158782880161303e565b92505060608501356001600160401b0381111561343157600080fd5b6132c987828801612f43565b6000806000806080858703121561345357600080fd5b600061345f8787612f2d565b945050602061347087828801612f2d565b93505060406132b887828801612f2d565b600080600080600060a0868803121561349957600080fd5b60006134a58888612f2d565b95505060206134b688828901612f2d565b94505060406134c788828901612f2d565b93505060606134d888828901612f2d565b92505060806134e988828901612f2d565b9150509295509295909350565b60008060006060848603121561350b57600080fd5b60006135178686612f2d565b93505060206131098682870161303e565b6000806040838503121561353b57600080fd5b82356001600160401b0381111561355157600080fd5b61355d85828601612f43565b92505060208301356001600160401b0381111561357957600080fd5b6130b685828601612f43565b60006060828403121561359757600080fd5b60006130678484612fe3565b6000602082840312156135b557600080fd5b60006130678484612f38565b600080604083850312156135d457600080fd5b600061315a8585612f2d565b600080600080608085870312156135f657600080fd5b60006136028787612f38565b945050602061361387828801612f38565b93505060408501516001600160401b0381111561362f57600080fd5b61363b87828801612cee565b92505060608501516001600160401b0381111561365757600080fd5b6132c987828801612ebd565b60008060006060848603121561367857600080fd5b60006136848686612f2d565b935050602061310986828701612f2d565b60006136a183836136d5565b505060200190565b60006136a18383613a69565b60006136c18383613ec9565b505060600190565b60006106ff8383613fde565b6136de816145f0565b82525050565b60006136ef826145dd565b6136f981856145e7565b9350613704836145d4565b8060005b8381101561373257815161371c8882613695565b9750613727836145d4565b925050600101613708565b509495945050505050565b6000613748826145dd565b61375281856145e7565b935061375d836145d4565b8060005b838110156137325781516137758882613695565b9750613780836145d4565b925050600101613761565b6000613796826145dd565b6137a081856145e7565b93506137ab836145d4565b8060005b838110156137325781516137c388826136a9565b97506137ce836145d4565b9250506001016137af565b60006137e4826145dd565b6137ee81856145e7565b93506137f9836145d4565b8060005b8381101561373257815161381188826136a9565b975061381c836145d4565b9250506001016137fd565b6000613832826145dd565b61383c81856145e7565b9350613847836145d4565b8060005b8381101561373257815161385f88826136a9565b975061386a836145d4565b92505060010161384b565b6000613880826145dd565b61388a81856145e7565b9350613895836145d4565b8060005b838110156137325781516138ad88826136b5565b97506138b8836145d4565b925050600101613899565b60006138ce826145dd565b6138d881856145e7565b93506138e3836145d4565b8060005b838110156137325781516138fb88826136b5565b9750613906836145d4565b9250506001016138e7565b600061391c826145e1565b6139268185611dd5565b935083602082028501613938856145da565b8060005b85811015613972578484038952815161395585826136c9565b9450613960836145d4565b60209a909a019992505060010161393c565b5091979650505050505050565b600061398a826145dd565b61399481856145e7565b935061399f836145d4565b8060005b838110156137325781516139b788826136a9565b97506139c2836145d4565b9250506001016139a3565b60006139d8826145dd565b6139e281856145e7565b93506139ed836145d4565b8060005b83811015613732578151613a0588826136a9565b9750613a10836145d4565b9250506001016139f1565b6000613a26826145dd565b613a3081856145e7565b9350613a3b836145d4565b8060005b83811015613732578151613a5388826136a9565b9750613a5e836145d4565b925050600101613a3f565b6136de816145da565b6000613a7d826145dd565b613a8781856145e7565b9350613a97818560208601614673565b613aa08161469f565b9093019392505050565b6136de8161463b565b6136de81614646565b6136de81614651565b6136de8161465c565b6000613adb6022836145e7565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152600160f21b611b9d02602082015260400192915050565b6000613b226018836145e7565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b6000613b5b6027836145e7565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152600160c81b667574207479706502602082015260400192915050565b6000613ba7601c836145e7565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b6000613be06013836145e7565b7f5461736b206973206e6f742077616974696e6700000000000000000000000000815260200192915050565b6000613c196027836145e7565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152600160ca1b661a585b1a5e995902602082015260400192915050565b6000613c65602e836145e7565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381527f206c6f67206f7574206576656e74000000000000000000000000000000000000602082015260400192915050565b6000613cc46014836145e7565b7f576f726b6572206e6f74206c6f6767656420696e000000000000000000000000815260200192915050565b6000613cfd6013836145e7565b7f556e7265676973746572656420776f726b657200000000000000000000000000815260200192915050565b6000613d366020836145e7565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000613d6f6027836145e7565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f678152600160ca1b6619d959081bdd5d02602082015260400192915050565b805160009060a0840190613dc285826136d5565b506020830151613dd56020860182613a69565b506040830151613de86040860182613a69565b5060608301518482036060860152613e008282613827565b9150506080830151613e156080860182613aaa565b509392505050565b9052565b8051600090610100840190613e3685826136d5565b506020830151613e496020860182613a69565b506040830151613e5c6040860182613a69565b506060830151613e6f6060860182613a69565b506080830151613e826080860182613a69565b5060a0830151613e9560a0860182613a69565b5060c0830151613ea860c0860182613ab3565b5060e083015184820360e0860152613ec08282613a72565b95945050505050565b80516060830190613eda8482613abc565b506020820151613eed6020850182613a69565b506040820151613f006040850182613a69565b50505050565b805160009060a0840190613f1a85826136d5565b506020830151613f2d6020860182613ac5565b5060408301518482036040860152613f458282613a72565b9150506060830151613f5a6060860182613a69565b5060808301518482036080860152613ec08282613875565b805160009060a0840190613f8685826136d5565b506020830151613f996020860182613ac5565b5060408301518482036040860152613fb18282613a72565b9150506060830151613fc66060860182613a69565b5060808301518482036080860152613ec082826138c3565b80516000906080840190613ff28582613a69565b506020830151848203602086015261400a828261373d565b915050604083015184820360408601526140248282613a1b565b9150506060830151613e156060860182613a69565b6136de8161462f565b6020810161070282846136d5565b6040810161405e82856136d5565b81810360208301526130678184613a72565b6040810161407e82856136d5565b81810360208301526130678184613f06565b602080825281016106ff81846136e4565b604080825281016140b281856136e4565b90508181036020830152613067818461397f565b602080825281016106ff818461378b565b602080825281016106ff8184613911565b604080825281016140f98185613a72565b905081810360208301526130678184613a72565b6020808252810161070281613ace565b6020808252810161070281613b15565b6020808252810161070281613b4e565b6020808252810161070281613b9a565b6020808252810161070281613bd3565b6020808252810161070281613c0c565b6020808252810161070281613c58565b6020808252810161070281613cb7565b6020808252810161070281613cf0565b6020808252810161070281613d29565b6020808252810161070281613d62565b602080825281016106ff8184613dae565b602081016107028284613e1d565b604081016141ea8285613e1d565b6141f760208301846136d5565b9392505050565b6080810161420c8287613e1d565b61421960208301866136d5565b818103604083015261422b8185613a72565b9050818103606083015261423f8184613a72565b9695505050505050565b606081016142578286613e1d565b61426460208301856136d5565b6130676040830184613a69565b60a0810161427f8288613e1d565b818103602083015261429181876137d9565b905081810360408301526142a581866139cd565b905081810360608301526142b981856139cd565b905061423f6080830184613a69565b604081016142d68285613e1d565b6141f76020830184613a69565b61012081016142f2828c613e1d565b6142ff602083018b613a69565b61430c604083018a613a69565b6143196060830189613a69565b6143266080830188613a69565b81810360a08301526143388187613a72565b905061434760c08301866136d5565b61435460e0830185614039565b8181036101008301526143678184613a72565b9b9a5050505050505050505050565b60a081016143848288613e1d565b6143916020830187613a69565b61439e6040830186613a69565b6143ab6060830185614039565b81810360808301526143bd8184613a72565b979650505050505050565b60a081016143d68288613e1d565b6143e36020830187613a69565b6143f06040830186613a69565b6143fd6060830185613a69565b61423f6080830184613a69565b60c081016144188289613e1d565b6144256020830188613a69565b6144326040830187613a69565b61443f6060830186613a69565b61444c6080830185613a69565b6143bd60a0830184613a69565b608081016144678287613e1d565b6144746020830186613a69565b6144816040830185614039565b818103606083015261423f8184613a72565b606081016144a18286613e1d565b6142646020830185613a69565b608081016144bc8287613e1d565b6144c96020830186613a69565b6144816040830185613a69565b602080825281016106ff8184613e21565b602080825281016106ff8184613f06565b604080825281016145098185613f72565b90506141f76020830184613a69565b602081016107028284613a69565b608081016145348287613a69565b6145416020830186613a69565b818103604083015261455381856136e4565b9050818103606083015261423f818461397f565b6040518181016001600160401b038111828210171561458557600080fd5b604052919050565b60006001600160401b038211156145a357600080fd5b5060209081020190565b60006001600160401b038211156145c357600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600590565b90815260200190565b600061070282614623565b80611dd5816146a9565b80611dd5816146b6565b80611dd5816146c0565b80611dd5816146ca565b6001600160a01b031690565b6001600160401b031690565b6000610702826145fb565b600061070282614605565b60006107028261460f565b600061070282614619565b82818337506000910152565b60005b8381101561468e578181015183820152602001614676565b83811115613f005750506000910152565b601f01601f191690565b600281106146b357fe5b50565b600681106146b357fe5b600481106146b357fe5b600381106146b357fe5b6146dd816145f0565b81146146b357600080fd5b6146dd816145da565b600481106146b357600080fd5b6146dd8161462f56fea265627a7a72305820f172d195e2a8a9da368d19285c5e0e9c3e158614d58cdc440b63276654fb77d96c6578706572696d656e74616cf50037","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106101e55760003560e01c806375bbf75b1161010f578063b34e97e8116100a2578063d855a57911610071578063d855a57914610454578063df4da46114610469578063ee6dcef914610471578063f9a9b7ae14610484576101e5565b8063b34e97e814610406578063b5c149921461040e578063c011b1c314610421578063cbbc061d14610441576101e5565b80638ed05737116100de5780638ed05737146103815780639836ca31146103a1578063a0c39982146103c4578063a3bdae3e146103e5576101e5565b806375bbf75b146103265780637624281e1461033b578063786cd4d71461035b5780638e055b8b1461036e576101e5565b8063365a2cb31161018757806350946a9f1161015657806350946a9f146102d6578063516c8269146102e9578063550baa2f146102fc57806370266a4714610311576101e5565b8063365a2cb31461028a5780633a322c521461029d57806347e7ef24146102b057806348cc3761146102c3576101e5565b806316f9a2a4116101c357806316f9a2a4146102255780631d40ff0b1461024f5780631f3c99c31461026f5780632e1a7d4d14610277576101e5565b806302e15a91146101ea57806310851876146101ff578063167e54b714610212575b600080fd5b6101fd6101f8366004613481565b610497565b005b6101fd61020d366004613230565b610513565b6101fd61022036600461343d565b61058c565b6102386102333660046132d5565b6105cf565b6040516102469291906140a1565b60405180910390f35b61026261025d3660046135c1565b610669565b6040516102469190614090565b6101fd610708565b6101fd6102853660046132d5565b610961565b6101fd6102983660046132f3565b610c72565b6101fd6102ab3660046133d1565b610f1e565b6101fd6102be36600461313b565b6111be565b6101fd6102d13660046132f3565b6113df565b6101fd6102e4366004613663565b61164d565b6101fd6102f73660046134f6565b611870565b610304611b0c565b60405161024691906140c6565b610319611b67565b60405161024691906140d7565b61032e611c81565b6040516102469190614518565b61034e6103493660046132d5565b611d13565b60405161024691906141bd565b6101fd6103693660046130c0565b611dda565b61030461037c3660046135c1565b611e9e565b61039461038f3660046132d5565b611f34565b60405161024691906144d6565b6103b46103af3660046132d5565b612060565b6040516102469493929190614526565b6103d76103d2366004613049565b612103565b604051610246929190614070565b6103f86103f3366004613049565b612346565b604051610246929190614050565b6101fd6125c8565b61032e61041c366004613528565b612834565b61043461042f366004613049565b6128c3565b60405161024691906144e7565b61032e61044f3660046132d5565b612a74565b61045c612b03565b6040516102469190614042565b61032e612b1f565b6101fd61047f3660046132d5565b612b25565b61032e610492366004613049565b612ba5565b604051600160e01b63f37f394502815273__TaskImpl______________________________9063f37f3945906104dc906000908990899089908990899060040161440a565b60006040518083038186803b1580156104f457600080fd5b505af4158015610508573d6000803e3d6000fd5b505050505050505050565b604051600160e01b63eeb3ea8f02815273__TaskImpl______________________________9063eeb3ea8f90610556906000908890889088908890600401614271565b60006040518083038186803b15801561056e57600080fd5b505af4158015610582573d6000803e3d6000fd5b5050505050505050565b604051600160e01b6327731d8102815273__TaskImpl______________________________906327731d81906105569060009088908890889088906004016143c8565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b815260040161060c9291906142c8565b60006040518083038186803b15801561062457600080fd5b505af4158015610638573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610660919081019061319f565b91509150915091565b604051600160e11b635deadfbd02815260609073__WorkersImpl___________________________9063bbd5bf7a906106ab9060009087908790600401614493565b60006040518083038186803b1580156106c357600080fd5b505af41580156106d7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ff919081019061316b565b90505b92915050565b33610711612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561075957fe5b600281111561076457fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108015780601f106107d657610100808354040283529160200191610801565b820191906000526020600020905b8154815290600101906020018083116107e457829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156108ac57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561087a57fe5b600381111561088557fe5b81526020016001820154815260200160028201548152505081526020019060010190610839565b50505091525090915060019050816020015160028111156108c957fe5b146108f257604051600160e51b62461bcd0281526004016108e99061417d565b60405180910390fd5b604051600160e01b6349e44f4902815273__WorkersImpl___________________________906349e44f499061092d906000906004016141ce565b60006040518083038186803b15801561094557600080fd5b505af4158015610959573d6000803e3d6000fd5b505050505050565b3361096a612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156109b257fe5b60028111156109bd57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a5a5780601f10610a2f57610100808354040283529160200191610a5a565b820191906000526020600020905b815481529060010190602001808311610a3d57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610b0557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610ad357fe5b6003811115610ade57fe5b81526020016001820154815260200160028201548152505081526020019060010190610a92565b5050509152509091506002905081602001516002811115610b2257fe5b14610b4257604051600160e51b62461bcd0281526004016108e9906141ad565b610b4a612bf0565b604051600160e21b6328de336102815273__WorkersImpl___________________________9063a378cd8490610b8690859043906004016144f8565b60606040518083038186803b158015610b9e57600080fd5b505af4158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bd69190810190613585565b9050600281516003811115610be757fe5b14610c0757604051600160e51b62461bcd0281526004016108e99061412d565b8060200151610c1543612a74565b11610c3557604051600160e51b62461bcd0281526004016108e99061416d565b604051600160e21b632fdb7d1902815273__WorkersImpl___________________________9063bf6df464906105569060009088906004016142c8565b33610c7b612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610cc357fe5b6002811115610cce57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d6b5780601f10610d4057610100808354040283529160200191610d6b565b820191906000526020600020905b815481529060010190602001808311610d4e57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610e1657838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610de457fe5b6003811115610def57fe5b81526020016001820154815260200160028201548152505081526020019060010190610da3565b5050509152509091506001905081602001516002811115610e3357fe5b14610e5357604051600160e51b62461bcd0281526004016108e99061417d565b8960016000828152601c602052604090206004015460ff166001811115610e7657fe5b14610e9657604051600160e51b62461bcd0281526004016108e99061413d565b604051600160e01b632def3b6902815273__TaskImpl______________________________90632def3b6990610ee1906000908f908f908f908f908f908f908f908f906004016142e3565b60006040518083038186803b158015610ef957600080fd5b505af4158015610f0d573d6000803e3d6000fd5b505050505050505050505050505050565b33610f27612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610f6f57fe5b6002811115610f7a57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110175780601f10610fec57610100808354040283529160200191611017565b820191906000526020600020905b815481529060010190602001808311610ffa57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110c257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561109057fe5b600381111561109b57fe5b8152602001600182015481526020016002820154815250508152602001906001019061104f565b50505091525090915060019050816020015160028111156110df57fe5b146110ff57604051600160e51b62461bcd0281526004016108e99061417d565b8560016000828152601c602052604090206004015460ff16600181111561112257fe5b1461114257604051600160e51b62461bcd0281526004016108e99061413d565b604051600160e21b632c5b41b302815273__TaskImpl______________________________9063b16d06cc90611185906000908b908b908b908b90600401614376565b60006040518083038186803b15801561119d57600080fd5b505af41580156111b1573d6000803e3d6000fd5b5050505050505050505050565b816111c7612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561120f57fe5b600281111561121a57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112b75780601f1061128c576101008083540402835291602001916112b7565b820191906000526020600020905b81548152906001019060200180831161129a57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561136257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561133057fe5b600381111561133b57fe5b815260200160018201548152602001600282015481525050815260200190600101906112ef565b505050915250909150600090508160200151600281111561137f57fe5b14156113a057604051600160e51b62461bcd0281526004016108e99061418d565b604051600160e21b630e80483102815273__WorkersImpl___________________________90633a0120c4906105569060009088908890600401614249565b336113e8612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561143057fe5b600281111561143b57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114d85780601f106114ad576101008083540402835291602001916114d8565b820191906000526020600020905b8154815290600101906020018083116114bb57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561158357838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561155157fe5b600381111561155c57fe5b81526020016001820154815260200160028201548152505081526020019060010190611510565b50505091525090915060019050816020015160028111156115a057fe5b146115c057604051600160e51b62461bcd0281526004016108e99061417d565b89600080828152601c602052604090206004015460ff1660018111156115e257fe5b1461160257604051600160e51b62461bcd0281526004016108e99061419d565b604051600160e01b63b36d042b02815273__TaskImpl______________________________9063b36d042b90610ee1906000908f908f908f908f908f908f908f908f906004016142e3565b33611656612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561169e57fe5b60028111156116a957fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117465780601f1061171b57610100808354040283529160200191611746565b820191906000526020600020905b81548152906001019060200180831161172957829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156117f157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156117bf57fe5b60038111156117ca57fe5b8152602001600182015481526020016002820154815250508152602001906001019061177e565b505050915250909150600090508160200151600281111561180e57fe5b141561182f57604051600160e51b62461bcd0281526004016108e99061418d565b604051600160e31b63184e876302815273__PrincipalImpl_________________________9063c2743b18906104dc906000908990899089906004016144ae565b33611879612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156118c157fe5b60028111156118cc57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119695780601f1061193e57610100808354040283529160200191611969565b820191906000526020600020905b81548152906001019060200180831161194c57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611a1457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156119e257fe5b60038111156119ed57fe5b815260200160018201548152602001600282015481525050815260200190600101906119a1565b5050509152509091506001905081602001516002811115611a3157fe5b14611a5157604051600160e51b62461bcd0281526004016108e99061417d565b84600080828152601c602052604090206004015460ff166001811115611a7357fe5b14611a9357604051600160e51b62461bcd0281526004016108e99061419d565b604051600160e01b6370a2e43b02815273__TaskImpl______________________________906370a2e43b90611ad4906000908a908a908a90600401614459565b60006040518083038186803b158015611aec57600080fd5b505af4158015611b00573d6000803e3d6000fd5b50505050505050505050565b60606000601901805480602002602001604051908101604052809291908181526020018280548015611b5d57602002820191906000526020600020905b815481526020019060010190808311611b49575b5050505050905090565b611b6f612c12565b6040805160a08101909152600460056000835b82821015611c78578382600402016040518060800160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020018280548015611bfe57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611be0575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611c5657602002820191906000526020600020905b815481526020019060010190808311611c42575b5050505050815260200160038201548152505081526020019060010190611b82565b50505050905090565b604051600160e11b6302b519c302815260009073__SecretContractImpl____________________9063056a338690611cbe9084906004016141ce565b60206040518083038186803b158015611cd657600080fd5b505af4158015611cea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d0e91908101906135a3565b905090565b611d1b612c40565b6000828152601c6020908152604091829020825160a08101845281546001600160a01b031681526001820154818401526002820154818501526003820180548551818602810186019096528086529194929360608601939290830182828015611da357602002820191906000526020600020905b815481526020019060010190808311611d8f575b5050509183525050600482015460209091019060ff166001811115611dc457fe5b6001811115611dcf57fe5b90525090505b919050565b8260005b601854811015611e5c57816001600160a01b03166000601a016000806018018481548110611e0857fe5b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902054161415611e5457604051600160e51b62461bcd0281526004016108e99061411d565b600101611dde565b50604051600160e51b63063e88f102815273__WorkersImpl___________________________9063c7d11e2090610556906000908890889088906004016141fe565b604051600160e01b63e5a2600902815260609073__SecretContractImpl____________________9063e5a2600990611ee09060009087908790600401614493565b60006040518083038186803b158015611ef857600080fd5b505af4158015611f0c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ff91908101906131fc565b611f3c612c6b565b6000828152601b602090815260409182902082516101008101845281546001600160a01b03168152600182015492810192909252600281015492820192909252600382015460608201526004820154608082015260058083015460a0830152600683015491929160c084019160ff90911690811115611fb757fe5b6005811115611fc257fe5b815260078201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156120505780601f1061202557610100808354040283529160200191612050565b820191906000526020600020905b81548152906001019060200180831161203357829003601f168201915b5050505050815250509050919050565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b81526004016120a09291906142c8565b60006040518083038186803b1580156120b857600080fd5b505af41580156120cc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526120f491908101906135e0565b93509350935093509193509193565b600061210d612bc0565b6000612117612bc0565b60005b60185481101561233b5760188054601a916000918490811061213857fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b90910416600281111561218e57fe5b600281111561219957fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122365780601f1061220b57610100808354040283529160200191612236565b820191906000526020600020905b81548152906001019060200180831161221957829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156122e157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156122af57fe5b60038111156122ba57fe5b8152602001600182015481526020016002820154815250508152602001906001019061226e565b50505050815250509150856001600160a01b031682600001516001600160a01b0316141561233357601880548290811061231757fe5b6000918252602090912001546001600160a01b0316925061233b565b60010161211a565b509092509050915091565b6000606082612353612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561239b57fe5b60028111156123a657fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124435780601f1061241857610100808354040283529160200191612443565b820191906000526020600020905b81548152906001019060200180831161242657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156124ee57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156124bc57fe5b60038111156124c757fe5b8152602001600182015481526020016002820154815250508152602001906001019061247b565b505050915250909150600090508160200151600281111561250b57fe5b141561252c57604051600160e51b62461bcd0281526004016108e99061418d565b604051600160e01b632f68f03102815273__WorkersImpl___________________________90632f68f031906125699060009089906004016141dc565b60006040518083038186803b15801561258157600080fd5b505af4158015612595573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526125bd919081019061306f565b935093505050915091565b336125d1612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561261957fe5b600281111561262457fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126c15780601f10612696576101008083540402835291602001916126c1565b820191906000526020600020905b8154815290600101906020018083116126a457829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561276c57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561273a57fe5b600381111561274557fe5b815260200160018201548152602001600282015481525050815260200190600101906126f9565b5050505081525050905061277f43612a74565b61279e57604051600160e51b62461bcd0281526004016108e99061415d565b6002816020015160028111156127b057fe5b146127d057604051600160e51b62461bcd0281526004016108e9906141ad565b601e54606082015110156127f957604051600160e51b62461bcd0281526004016108e99061410d565b604051600160e11b6318a8dc7102815273__WorkersImpl___________________________90633151b8e29061092d906000906004016141ce565b604051600160e31b6312c8c46d02815260009073__WorkersImpl___________________________9063964623689061287390869086906004016140e8565b60206040518083038186803b15801561288b57600080fd5b505af415801561289f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106ff91908101906135a3565b6128cb612bc0565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561291357fe5b600281111561291e57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156129bb5780601f10612990576101008083540402835291602001916129bb565b820191906000526020600020905b81548152906001019060200180831161299e57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612a6657838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612a3457fe5b6003811115612a3f57fe5b815260200160018201548152602001600282015481525050815260200190600101906129f3565b505050915250909392505050565b604051600160e31b6304d5c11302815260009073__WorkersImpl___________________________906326ae089890612ab390849086906004016142c8565b60206040518083038186803b158015612acb57600080fd5b505af4158015612adf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061070291908101906135a3565b336000908152601a60205260409020546001600160a01b031690565b60015490565b8060016000828152601b602052604090206006015460ff166005811115612b4857fe5b14612b6857604051600160e51b62461bcd0281526004016108e99061414d565b604051600160e01b631c9a715b02815273__TaskImpl______________________________90631c9a715b9061092d9060009086906004016142c8565b6001600160a01b03166000908152601d602052604090205490565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b6040518061028001604052806005905b612c2a612cb0565b815260200190600190039081612c225790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b8035610702816146d4565b8051610702816146d4565b600082601f830112612cff57600080fd5b8151612d12612d0d8261458d565b614567565b91508181835260208401935060208101905083856020840282011115612d3757600080fd5b60005b83811015612d635781612d4d8882612ce3565b8452506020928301929190910190600101612d3a565b5050505092915050565b600082601f830112612d7e57600080fd5b8135612d8c612d0d8261458d565b91508181835260208401935060208101905083856020840282011115612db157600080fd5b60005b83811015612d635781612dc78882612f2d565b8452506020928301929190910190600101612db4565b600082601f830112612dee57600080fd5b8151612dfc612d0d8261458d565b91508181835260208401935060208101905083856020840282011115612e2157600080fd5b60005b83811015612d635781612e378882612f38565b8452506020928301929190910190600101612e24565b600082601f830112612e5e57600080fd5b8135612e6c612d0d8261458d565b91508181835260208401935060208101905083856020840282011115612e9157600080fd5b60005b83811015612d635781612ea78882612f2d565b8452506020928301929190910190600101612e94565b600082601f830112612ece57600080fd5b8151612edc612d0d8261458d565b91508181835260208401935060208101905083856020840282011115612f0157600080fd5b60005b83811015612d635781612f178882612f38565b8452506020928301929190910190600101612f04565b8035610702816146e8565b8051610702816146e8565b600082601f830112612f5457600080fd5b8135612f62612d0d826145ad565b91508082526020830160208301858383011115612f7e57600080fd5b612f89838284614667565b50505092915050565b600082601f830112612fa357600080fd5b8151612fb1612d0d826145ad565b91508082526020830160208301858383011115612fcd57600080fd5b612f89838284614673565b8051610702816146f1565b600060608284031215612ff557600080fd5b612fff6060614567565b9050600061300d8484612fd8565b825250602061301e84848301612f38565b602083015250604061303284828501612f38565b60408301525092915050565b8035610702816146fe565b60006020828403121561305b57600080fd5b60006130678484612cd8565b949350505050565b6000806040838503121561308257600080fd5b600061308e8585612ce3565b92505060208301516001600160401b038111156130aa57600080fd5b6130b685828601612f92565b9150509250929050565b6000806000606084860312156130d557600080fd5b60006130e18686612cd8565b93505060208401356001600160401b038111156130fd57600080fd5b61310986828701612f43565b92505060408401356001600160401b0381111561312557600080fd5b61313186828701612f43565b9150509250925092565b6000806040838503121561314e57600080fd5b600061315a8585612cd8565b92505060206130b685828601612f2d565b60006020828403121561317d57600080fd5b81516001600160401b0381111561319357600080fd5b61306784828501612cee565b600080604083850312156131b257600080fd5b82516001600160401b038111156131c857600080fd5b6131d485828601612cee565b92505060208301516001600160401b038111156131f057600080fd5b6130b685828601612ebd565b60006020828403121561320e57600080fd5b81516001600160401b0381111561322457600080fd5b61306784828501612ddd565b6000806000806080858703121561324657600080fd5b84356001600160401b0381111561325c57600080fd5b61326887828801612d6d565b94505060208501356001600160401b0381111561328457600080fd5b61329087828801612e4d565b93505060408501356001600160401b038111156132ac57600080fd5b6132b887828801612e4d565b92505060606132c987828801612f2d565b91505092959194509250565b6000602082840312156132e757600080fd5b60006130678484612f2d565b600080600080600080600080610100898b03121561331057600080fd5b600061331c8b8b612f2d565b985050602061332d8b828c01612f2d565b975050604061333e8b828c01612f2d565b965050606061334f8b828c01612f2d565b95505060808901356001600160401b0381111561336b57600080fd5b6133778b828c01612f43565b94505060a06133888b828c01612cd8565b93505060c06133998b828c0161303e565b92505060e08901356001600160401b038111156133b557600080fd5b6133c18b828c01612f43565b9150509295985092959890939650565b600080600080608085870312156133e757600080fd5b60006133f38787612f2d565b945050602061340487828801612f2d565b93505060406134158782880161303e565b92505060608501356001600160401b0381111561343157600080fd5b6132c987828801612f43565b6000806000806080858703121561345357600080fd5b600061345f8787612f2d565b945050602061347087828801612f2d565b93505060406132b887828801612f2d565b600080600080600060a0868803121561349957600080fd5b60006134a58888612f2d565b95505060206134b688828901612f2d565b94505060406134c788828901612f2d565b93505060606134d888828901612f2d565b92505060806134e988828901612f2d565b9150509295509295909350565b60008060006060848603121561350b57600080fd5b60006135178686612f2d565b93505060206131098682870161303e565b6000806040838503121561353b57600080fd5b82356001600160401b0381111561355157600080fd5b61355d85828601612f43565b92505060208301356001600160401b0381111561357957600080fd5b6130b685828601612f43565b60006060828403121561359757600080fd5b60006130678484612fe3565b6000602082840312156135b557600080fd5b60006130678484612f38565b600080604083850312156135d457600080fd5b600061315a8585612f2d565b600080600080608085870312156135f657600080fd5b60006136028787612f38565b945050602061361387828801612f38565b93505060408501516001600160401b0381111561362f57600080fd5b61363b87828801612cee565b92505060608501516001600160401b0381111561365757600080fd5b6132c987828801612ebd565b60008060006060848603121561367857600080fd5b60006136848686612f2d565b935050602061310986828701612f2d565b60006136a183836136d5565b505060200190565b60006136a18383613a69565b60006136c18383613ec9565b505060600190565b60006106ff8383613fde565b6136de816145f0565b82525050565b60006136ef826145dd565b6136f981856145e7565b9350613704836145d4565b8060005b8381101561373257815161371c8882613695565b9750613727836145d4565b925050600101613708565b509495945050505050565b6000613748826145dd565b61375281856145e7565b935061375d836145d4565b8060005b838110156137325781516137758882613695565b9750613780836145d4565b925050600101613761565b6000613796826145dd565b6137a081856145e7565b93506137ab836145d4565b8060005b838110156137325781516137c388826136a9565b97506137ce836145d4565b9250506001016137af565b60006137e4826145dd565b6137ee81856145e7565b93506137f9836145d4565b8060005b8381101561373257815161381188826136a9565b975061381c836145d4565b9250506001016137fd565b6000613832826145dd565b61383c81856145e7565b9350613847836145d4565b8060005b8381101561373257815161385f88826136a9565b975061386a836145d4565b92505060010161384b565b6000613880826145dd565b61388a81856145e7565b9350613895836145d4565b8060005b838110156137325781516138ad88826136b5565b97506138b8836145d4565b925050600101613899565b60006138ce826145dd565b6138d881856145e7565b93506138e3836145d4565b8060005b838110156137325781516138fb88826136b5565b9750613906836145d4565b9250506001016138e7565b600061391c826145e1565b6139268185611dd5565b935083602082028501613938856145da565b8060005b85811015613972578484038952815161395585826136c9565b9450613960836145d4565b60209a909a019992505060010161393c565b5091979650505050505050565b600061398a826145dd565b61399481856145e7565b935061399f836145d4565b8060005b838110156137325781516139b788826136a9565b97506139c2836145d4565b9250506001016139a3565b60006139d8826145dd565b6139e281856145e7565b93506139ed836145d4565b8060005b83811015613732578151613a0588826136a9565b9750613a10836145d4565b9250506001016139f1565b6000613a26826145dd565b613a3081856145e7565b9350613a3b836145d4565b8060005b83811015613732578151613a5388826136a9565b9750613a5e836145d4565b925050600101613a3f565b6136de816145da565b6000613a7d826145dd565b613a8781856145e7565b9350613a97818560208601614673565b613aa08161469f565b9093019392505050565b6136de8161463b565b6136de81614646565b6136de81614651565b6136de8161465c565b6000613adb6022836145e7565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152600160f21b611b9d02602082015260400192915050565b6000613b226018836145e7565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b6000613b5b6027836145e7565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152600160c81b667574207479706502602082015260400192915050565b6000613ba7601c836145e7565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b6000613be06013836145e7565b7f5461736b206973206e6f742077616974696e6700000000000000000000000000815260200192915050565b6000613c196027836145e7565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152600160ca1b661a585b1a5e995902602082015260400192915050565b6000613c65602e836145e7565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381527f206c6f67206f7574206576656e74000000000000000000000000000000000000602082015260400192915050565b6000613cc46014836145e7565b7f576f726b6572206e6f74206c6f6767656420696e000000000000000000000000815260200192915050565b6000613cfd6013836145e7565b7f556e7265676973746572656420776f726b657200000000000000000000000000815260200192915050565b6000613d366020836145e7565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000613d6f6027836145e7565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f678152600160ca1b6619d959081bdd5d02602082015260400192915050565b805160009060a0840190613dc285826136d5565b506020830151613dd56020860182613a69565b506040830151613de86040860182613a69565b5060608301518482036060860152613e008282613827565b9150506080830151613e156080860182613aaa565b509392505050565b9052565b8051600090610100840190613e3685826136d5565b506020830151613e496020860182613a69565b506040830151613e5c6040860182613a69565b506060830151613e6f6060860182613a69565b506080830151613e826080860182613a69565b5060a0830151613e9560a0860182613a69565b5060c0830151613ea860c0860182613ab3565b5060e083015184820360e0860152613ec08282613a72565b95945050505050565b80516060830190613eda8482613abc565b506020820151613eed6020850182613a69565b506040820151613f006040850182613a69565b50505050565b805160009060a0840190613f1a85826136d5565b506020830151613f2d6020860182613ac5565b5060408301518482036040860152613f458282613a72565b9150506060830151613f5a6060860182613a69565b5060808301518482036080860152613ec08282613875565b805160009060a0840190613f8685826136d5565b506020830151613f996020860182613ac5565b5060408301518482036040860152613fb18282613a72565b9150506060830151613fc66060860182613a69565b5060808301518482036080860152613ec082826138c3565b80516000906080840190613ff28582613a69565b506020830151848203602086015261400a828261373d565b915050604083015184820360408601526140248282613a1b565b9150506060830151613e156060860182613a69565b6136de8161462f565b6020810161070282846136d5565b6040810161405e82856136d5565b81810360208301526130678184613a72565b6040810161407e82856136d5565b81810360208301526130678184613f06565b602080825281016106ff81846136e4565b604080825281016140b281856136e4565b90508181036020830152613067818461397f565b602080825281016106ff818461378b565b602080825281016106ff8184613911565b604080825281016140f98185613a72565b905081810360208301526130678184613a72565b6020808252810161070281613ace565b6020808252810161070281613b15565b6020808252810161070281613b4e565b6020808252810161070281613b9a565b6020808252810161070281613bd3565b6020808252810161070281613c0c565b6020808252810161070281613c58565b6020808252810161070281613cb7565b6020808252810161070281613cf0565b6020808252810161070281613d29565b6020808252810161070281613d62565b602080825281016106ff8184613dae565b602081016107028284613e1d565b604081016141ea8285613e1d565b6141f760208301846136d5565b9392505050565b6080810161420c8287613e1d565b61421960208301866136d5565b818103604083015261422b8185613a72565b9050818103606083015261423f8184613a72565b9695505050505050565b606081016142578286613e1d565b61426460208301856136d5565b6130676040830184613a69565b60a0810161427f8288613e1d565b818103602083015261429181876137d9565b905081810360408301526142a581866139cd565b905081810360608301526142b981856139cd565b905061423f6080830184613a69565b604081016142d68285613e1d565b6141f76020830184613a69565b61012081016142f2828c613e1d565b6142ff602083018b613a69565b61430c604083018a613a69565b6143196060830189613a69565b6143266080830188613a69565b81810360a08301526143388187613a72565b905061434760c08301866136d5565b61435460e0830185614039565b8181036101008301526143678184613a72565b9b9a5050505050505050505050565b60a081016143848288613e1d565b6143916020830187613a69565b61439e6040830186613a69565b6143ab6060830185614039565b81810360808301526143bd8184613a72565b979650505050505050565b60a081016143d68288613e1d565b6143e36020830187613a69565b6143f06040830186613a69565b6143fd6060830185613a69565b61423f6080830184613a69565b60c081016144188289613e1d565b6144256020830188613a69565b6144326040830187613a69565b61443f6060830186613a69565b61444c6080830185613a69565b6143bd60a0830184613a69565b608081016144678287613e1d565b6144746020830186613a69565b6144816040830185614039565b818103606083015261423f8184613a72565b606081016144a18286613e1d565b6142646020830185613a69565b608081016144bc8287613e1d565b6144c96020830186613a69565b6144816040830185613a69565b602080825281016106ff8184613e21565b602080825281016106ff8184613f06565b604080825281016145098185613f72565b90506141f76020830184613a69565b602081016107028284613a69565b608081016145348287613a69565b6145416020830186613a69565b818103604083015261455381856136e4565b9050818103606083015261423f818461397f565b6040518181016001600160401b038111828210171561458557600080fd5b604052919050565b60006001600160401b038211156145a357600080fd5b5060209081020190565b60006001600160401b038211156145c357600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600590565b90815260200190565b600061070282614623565b80611dd5816146a9565b80611dd5816146b6565b80611dd5816146c0565b80611dd5816146ca565b6001600160a01b031690565b6001600160401b031690565b6000610702826145fb565b600061070282614605565b60006107028261460f565b600061070282614619565b82818337506000910152565b60005b8381101561468e578181015183820152602001614676565b83811115613f005750506000910152565b601f01601f191690565b600281106146b357fe5b50565b600681106146b357fe5b600481106146b357fe5b600381106146b357fe5b6146dd816145f0565b81146146b357600080fd5b6146dd816145da565b600481106146b357600080fd5b6146dd8161462f56fea265627a7a72305820f172d195e2a8a9da368d19285c5e0e9c3e158614d58cdc440b63276654fb77d96c6578706572696d656e74616cf50037","sourceMap":"767:16629:0:-;;;997:317;8:9:-1;5:2;;;30:1;27;20:12;5:2;997:317:0;;;;;;;;;;;;;;;;;;;;;;1086:5;:37;;-1:-1:-1;;;;;1086:37:0;;;-1:-1:-1;;;;;;1086:37:0;;;;;;;;1133:28;;;1195:3;1171:21;:27;1208:15;:28;;;;;;;;;;;;;;;1246:22;:26;;;1282:21;:25;767:16629;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;146:134;224:13;;242:33;224:13;242:33;;287:535;;;;436:2;424:9;415:7;411:23;407:32;404:2;;;452:1;449;442:12;404:2;487:1;504:64;560:7;540:9;504:64;;;494:74;;466:108;605:2;623:64;679:7;670:6;659:9;655:22;623:64;;;613:74;;584:109;724:2;742:64;798:7;789:6;778:9;774:22;742:64;;;732:74;;703:109;398:424;;;;;;829:91;;-1:-1;;;;;989:54;;891:24;972:76;1055:72;1117:5;1100:27;1134:117;1203:24;1221:5;1203:24;;;1196:5;1193:35;1183:2;;1242:1;1239;1232:12;1183:2;1177:74;;1258:117;1327:24;1345:5;1327:24;;1301:74;767:16629:0;;;;;;","deployedSourceMap":"767:16629:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;767:16629:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10296:306;;;;;;;;;:::i;:::-;;12045:294;;;;;;;;;:::i;11177:257::-;;;;;;;;;:::i;15116:194::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16471:199;;;;;;;;;:::i;:::-;;;;;;;;6847:98;;;:::i;6385:132::-;;;;;;;;;:::i;12943:546::-;;;;;;;;;:::i;13837:299::-;;;;;;;;;:::i;6020:167::-;;;;;;;;;:::i;8168:575::-;;;;;;;;;:::i;14786:209::-;;;;;;;;;:::i;7207:286::-;;;;;;;;;:::i;3069:121:10:-;;;:::i;:::-;;;;;;;;2823:130;;;:::i;:::-;;;;;;;;8870:149:0;;;:::i;:::-;;;;;;;;2543::10;;;;;;;;;:::i;:::-;;;;;;;;5568:207:0;;;;;;;;;:::i;9232:211::-;;;;;;;;;:::i;2221:137:10:-;;;;;;;;;:::i;:::-;;;;;;;;15936:198:0;;;;;;;;;:::i;:::-;;;;;;;;;;;1004:492:10;;;;;;;;;:::i;:::-;;;;;;;;;16808:200:0;;;;;;;;;:::i;:::-;;;;;;;;;6680:90;;;:::i;17213:181::-;;;;;;;;;:::i;679:131:10:-;;;;;;;;;:::i;:::-;;;;;;;;15485:167:0;;;;;;;;;:::i;399:115:10:-;;;:::i;:::-;;;;;;;;1957:90;;;:::i;14303:147:0:-;;;;;;;;;:::i;1740:134:10:-;;;;;;;;;:::i;10296:306:0:-;10490:105;;-1:-1:-1;;;;;10490:105:0;;:8;;:39;;:105;;10530:5;;10537:11;;10550:9;;10561:6;;10569:17;;10588:6;;10490:105;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10490:105:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10490:105:0;;;;10296:306;;;;;:::o;12045:294::-;12240:92;;-1:-1:-1;;;;;12240:92:0;;:8;;:30;;:92;;12271:5;;12278:13;;12293:10;;12305:7;;12314:17;;12240:92;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12240:92:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12240:92:0;;;;12045:294;;;;:::o;11177:257::-;11340:87;;-1:-1:-1;;;;;11340:87:0;;:8;;:29;;:87;;11370:5;;11377:11;;11390:9;;11401:6;;11409:17;;11340:87;;;;15116:194;15194:16;15212:13;15248;:34;15283:5;15290:12;15248:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15248:55:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15248:55:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;15248:55:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;15248:55:0;;;;;;;;;15241:62;;;;15116:194;;;:::o;16471:199::-;16603:60;;-1:-1:-1;;;;;16603:60:0;;16564:16;;16603:11;;:30;;:60;;16634:5;;16641:12;;16655:7;;16603:60;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16603:60:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16603:60:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16603:60:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16603:60:0;;;;;;;;;16596:67;;16471:199;;;;;:::o;6847:98::-;6887:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;;;;;;;;;6909:29;;-1:-1:-1;;;;;6909:29:0;;:11;;:22;;:29;;6932:5;;6909:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6909:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6909:29:0;;;;6847:98;;:::o;6385:132::-;6444:10;3223:33;;:::i;:::-;-1:-1:-1;;;;;3259:20:0;;;:5;:20;;;:13;:20;;;;;;;;;3223:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3223:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3223:56:0;;-1:-1:-1;3223:56:0;;-1:-1:-1;3314:35:0;;-1:-1:-1;3297:6:0;:13;;;:52;;;;;;;;;3289:104;;;;-1:-1:-1;;;;;3289:104:0;;;;;;;;;3403:39;;:::i;:::-;3445:56;;-1:-1:-1;;;;;3445:56:0;;:11;;:34;;:56;;3480:6;;3488:12;;3445:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3445:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3445:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3445:56:0;;;;;;;;;3403:98;-1:-1:-1;3548:33:0;3519:25;;:62;;;;;;;;;3511:126;;;;-1:-1:-1;;;;;3511:126:0;;;;;;;;;3691:9;:21;;;3655:33;3675:12;3655:19;:33::i;:::-;:57;3647:128;;;;-1:-1:-1;;;;;3647:128:0;;;;;;;;;6470:40;;-1:-1:-1;;;;;6470:40:0;;:11;;:24;;:40;;6495:5;;6502:7;;6470:40;;;;12943:546;13260:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;13293:7;4326:42;4291:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4283:118;;;;-1:-1:-1;;;;;4283:118:0;;;;;;;;;13316:166;;-1:-1:-1;;;;;13316:166:0;;:8;;:26;;:166;;13343:5;;13350:7;;13359;;13368:15;;13385:11;;13398:21;;13433:32;;13467:8;;13477:4;;13316:166;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13316:166:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13316:166:0;;;;2138:1;12943:546;;;;;;;;;;:::o;13837:299::-;14002:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;14035:7;4326:42;4291:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4283:118;;;;-1:-1:-1;;;;;4283:118:0;;;;;;;;;14058:71;;-1:-1:-1;;;;;14058:71:0;;:8;;:30;;:71;;14089:5;;14096:7;;14105;;14114:8;;14124:4;;14058:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14058:71:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14058:71:0;;;;2138:1;13837:299;;;;;;:::o;6020:167::-;6103:10;1614:33;;:::i;:::-;-1:-1:-1;;;;;1650:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1614:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;-1:-1:-1;1614:56:0;;-1:-1:-1;1705:38:0;;-1:-1:-1;1688:6:0;:13;;;:55;;;;;;;;;;1680:87;;;;-1:-1:-1;;;;;1680:87:0;;;;;;;;;6129:51;;-1:-1:-1;;;;;6129:51:0;;:11;;:23;;:51;;6153:5;;6160:10;;6172:7;;6129:51;;;;8168:575;8499:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;8533:7;4013:43;3978:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;3970:123;;;;-1:-1:-1;;;;;3970:123:0;;;;;;;;;8556:180;;-1:-1:-1;;;;;8556:180:0;;:8;;:33;;:180;;8590:5;;8597:7;;8606:12;;8620:9;;8631:19;;8664:21;;8687:32;;8721:8;;8731:4;;8556:180;;;;14786:209;14894:10;1614:33;;:::i;:::-;-1:-1:-1;;;;;1650:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1614:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;-1:-1:-1;1614:56:0;;-1:-1:-1;1705:38:0;;-1:-1:-1;1688:6:0;:13;;;:55;;;;;;;;;;1680:87;;;;-1:-1:-1;;;;;1680:87:0;;;;;;;;;14920:68;;-1:-1:-1;;;;;14920:68:0;;:13;;:34;;:68;;14955:5;;14962:12;;14976:5;;14983:4;;14920:68;;;;7207:286;7357:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;7391:7;4013:43;3978:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;3970:123;;;;-1:-1:-1;;;;;3970:123:0;;;;;;;;;7414:72;;-1:-1:-1;;;;;7414:72:0;;:8;;:40;;:72;;7455:5;;7462:7;;7471:8;;7481:4;;7414:72;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7414:72:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7414:72:0;;;;2138:1;7207:286;;;;;:::o;3069:121:10:-;3131:16;3166:5;:17;;3159:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:121;:::o;2823:130::-;2872:36;;:::i;:::-;2920:26;;;;;;;;;2927:19;2920:26;2927:5;2920:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2920:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2823:130;:::o;8870:149:0:-;8962:50;;-1:-1:-1;;;;;8962:50:0;;8935:4;;8962:18;;:43;;:50;;8935:4;;8962:50;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8962:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8962:50:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8962:50:0;;;;;;;;;8955:57;;8870:149;:::o;2543::10:-;2608:34;;:::i;:::-;2661:5;:24;;;:15;:24;;;;;;;;;2654:31;;;;;;;;;-1:-1:-1;;;;;2654:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2661:24;;2654:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2654:31:10;;;-1:-1:-1;;2654:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2654:31:10;-1:-1:-1;2543:149:10;;;;:::o;5568:207:0:-;5684:7;4889:6;4884:175;4905:21;:28;4901:32;;4884:175;;;5012:7;-1:-1:-1;;;;;4962:57:0;:5;:13;;:39;4976:5;:21;;4998:1;4976:24;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4976:24:0;;;4962:39;;;;;;;;;;;;;;;:46;;:57;;4954:94;;;;-1:-1:-1;;;;;4954:94:0;;;;;;;;;4935:3;;4884:175;;;-1:-1:-1;5707:61:0;;-1:-1:-1;;;;;5707:61:0;;:11;;:24;;:61;;5732:5;;5739:7;;5748;;5757:10;;5707:61;;;;9232:211;9365:71;;-1:-1:-1;;;;;9365:71:0;;9326:16;;9365:18;;:49;;:71;;9415:5;;9422:6;;9430:5;;9365:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9365:71:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9365:71:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;9365:71:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;9365:71:0;;;;;;;;2221:137:10;2282:30;;:::i;:::-;2331:5;:20;;;:11;:20;;;;;;;;;2324:27;;;;;;;;;-1:-1:-1;;;;;2324:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2331:20;2324:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2324:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2221:137;;;:::o;15936:198:0:-;16013:4;16019;16025:16;16043:13;16075:11;:31;16107:5;16114:12;16075:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16075:52:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16075:52:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16075:52:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16075:52:0;;;;;;;;;16068:59;;;;;;;;15936:198;;;;;:::o;1004:492:10:-;1079:7;1088:26;;:::i;:::-;1126:15;1151:33;;:::i;:::-;1199:6;1194:262;1215:21;:28;1211:32;;1194:262;;;1287:21;:24;;1273:13;;:5;;1309:1;;1287:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1287:24:10;;;1273:39;;;;;;;;;;;;;;;;1264:48;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1264:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:7;-1:-1:-1;;;;;1330:24:10;:6;:13;;;-1:-1:-1;;;;;1330:24:10;;1326:120;;;1384:21;:24;;1406:1;;1384:24;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1384:24:10;;-1:-1:-1;1426:5:10;;1326:120;1245:3;;1194:262;;;-1:-1:-1;1473:7:10;;-1:-1:-1;1482:6:10;-1:-1:-1;1004:492:10;;;:::o;16808:200:0:-;16913:7;16922:12;16888:10;1614:33;;:::i;:::-;-1:-1:-1;;;;;1650:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1614:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;-1:-1:-1;1614:56:0;;-1:-1:-1;1705:38:0;;-1:-1:-1;1688:6:0;:13;;;:55;;;;;;;;;;1680:87;;;;-1:-1:-1;;;;;1680:87:0;;;;;;;;;16957:44;;-1:-1:-1;;;;;16957:44:0;;:11;;:25;;:44;;16983:5;;16990:10;;16957:44;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16957:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16957:44:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16957:44:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16957:44:0;;;;;;;;;16950:51;;;;16808:200;;;;;:::o;6680:90::-;6713:10;2670:33;;:::i;:::-;-1:-1:-1;;;;;2706:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2670:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2670:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2744:33;2764:12;2744:19;:33::i;:::-;2736:90;;;;-1:-1:-1;;;;;2736:90:0;;;;;;;;;2861:35;2844:6;:13;;;:52;;;;;;;;;2836:104;;;;-1:-1:-1;;;;;2836:104:0;;;;;;;;;2976:22;;2958:14;;;;:40;;2950:87;;;;-1:-1:-1;;;;;2950:87:0;;;;;;;;;6735:28;;-1:-1:-1;;;;;6735:28:0;;:11;;:21;;:28;;6757:5;;6735:28;;;;17213:181;17340:47;;-1:-1:-1;;;;;17340:47:0;;17313:4;;17340:11;;:28;;:47;;17369:5;;17376:10;;17340:47;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17340:47:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17340:47:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;17340:47:0;;;;;;;;679:131:10;736:26;;:::i;:::-;-1:-1:-1;;;;;781:22:10;;;:5;:22;;;:13;:22;;;;;;;;;774:29;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;-1:-1:-1;774:29:10;;679:131;-1:-1:-1;;;679:131:10:o;15485:167:0:-;15589:56;;-1:-1:-1;;;;;15589:56:0;;15566:4;;15589:11;;:35;;:56;;15566:4;;15632:12;;15589:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15589:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15589:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;15589:56:0;;;;;;;;399:115:10;489:10;449:7;475:25;;;:13;:25;;;;;:32;-1:-1:-1;;;;;475:32:10;399:115;:::o;1957:90::-;2025:15;;1957:90;:::o;14303:147:0:-;14374:7;4633:37;4602:5;:20;;;:11;:20;;;;;:27;;;;;:68;;;;;;;;;4594:100;;;;-1:-1:-1;;;;;4594:100:0;;;;;;;;;14397:46;;-1:-1:-1;;;;;14397:46:0;;:8;;:30;;:46;;14428:5;;14435:7;;14397:46;;;;1740:134:10;-1:-1:-1;;;;;1833:34:10;1810:4;1833:34;;;:25;:34;;;;;;;1740:134::o;767:16629:0:-;;;;;;;;;;-1:-1:-1;767:16629:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;767:16629:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;767:16629:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;767:16629:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:722;;429:3;422:4;414:6;410:17;406:27;396:2;;447:1;444;437:12;396:2;477:6;471:13;499:80;514:64;571:6;514:64;;;499:80;;;490:89;;596:5;621:6;614:5;607:21;651:4;643:6;639:17;629:27;;673:4;668:3;664:14;657:21;;726:6;773:3;765:4;757:6;753:17;748:3;744:27;741:36;738:2;;;790:1;787;780:12;738:2;815:1;800:217;825:6;822:1;819:13;800:217;;;883:3;905:48;949:3;937:10;905:48;;;893:61;;-1:-1;977:4;968:14;;;;996;;;;;847:1;840:9;800:217;;;804:14;389:634;;;;;;;;1049:707;;1166:3;1159:4;1151:6;1147:17;1143:27;1133:2;;1184:1;1181;1174:12;1133:2;1221:6;1208:20;1243:80;1258:64;1315:6;1258:64;;1243:80;1234:89;;1340:5;1365:6;1358:5;1351:21;1395:4;1387:6;1383:17;1373:27;;1417:4;1412:3;1408:14;1401:21;;1470:6;1517:3;1509:4;1501:6;1497:17;1492:3;1488:27;1485:36;1482:2;;;1534:1;1531;1524:12;1482:2;1559:1;1544:206;1569:6;1566:1;1563:13;1544:206;;;1627:3;1649:37;1682:3;1670:10;1649:37;;;1637:50;;-1:-1;1710:4;1701:14;;;;1729;;;;;1591:1;1584:9;1544:206;;1782:722;;1910:3;1903:4;1895:6;1891:17;1887:27;1877:2;;1928:1;1925;1918:12;1877:2;1958:6;1952:13;1980:80;1995:64;2052:6;1995:64;;1980:80;1971:89;;2077:5;2102:6;2095:5;2088:21;2132:4;2124:6;2120:17;2110:27;;2154:4;2149:3;2145:14;2138:21;;2207:6;2254:3;2246:4;2238:6;2234:17;2229:3;2225:27;2222:36;2219:2;;;2271:1;2268;2261:12;2219:2;2296:1;2281:217;2306:6;2303:1;2300:13;2281:217;;;2364:3;2386:48;2430:3;2418:10;2386:48;;;2374:61;;-1:-1;2458:4;2449:14;;;;2477;;;;;2328:1;2321:9;2281:217;;2530:707;;2647:3;2640:4;2632:6;2628:17;2624:27;2614:2;;2665:1;2662;2655:12;2614:2;2702:6;2689:20;2724:80;2739:64;2796:6;2739:64;;2724:80;2715:89;;2821:5;2846:6;2839:5;2832:21;2876:4;2868:6;2864:17;2854:27;;2898:4;2893:3;2889:14;2882:21;;2951:6;2998:3;2990:4;2982:6;2978:17;2973:3;2969:27;2966:36;2963:2;;;3015:1;3012;3005:12;2963:2;3040:1;3025:206;3050:6;3047:1;3044:13;3025:206;;;3108:3;3130:37;3163:3;3151:10;3130:37;;;3118:50;;-1:-1;3191:4;3182:14;;;;3210;;;;;3072:1;3065:9;3025:206;;3263:722;;3391:3;3384:4;3376:6;3372:17;3368:27;3358:2;;3409:1;3406;3399:12;3358:2;3439:6;3433:13;3461:80;3476:64;3533:6;3476:64;;3461:80;3452:89;;3558:5;3583:6;3576:5;3569:21;3613:4;3605:6;3601:17;3591:27;;3635:4;3630:3;3626:14;3619:21;;3688:6;3735:3;3727:4;3719:6;3715:17;3710:3;3706:27;3703:36;3700:2;;;3752:1;3749;3742:12;3700:2;3777:1;3762:217;3787:6;3784:1;3781:13;3762:217;;;3845:3;3867:48;3911:3;3899:10;3867:48;;;3855:61;;-1:-1;3939:4;3930:14;;;;3958;;;;;3809:1;3802:9;3762:217;;3993:130;4060:20;;4085:33;4060:20;4085:33;;4130:134;4208:13;;4226:33;4208:13;4226:33;;4272:440;;4373:3;4366:4;4358:6;4354:17;4350:27;4340:2;;4391:1;4388;4381:12;4340:2;4428:6;4415:20;4450:64;4465:48;4506:6;4465:48;;4450:64;4441:73;;4534:6;4527:5;4520:21;4570:4;4562:6;4558:17;4603:4;4596:5;4592:16;4638:3;4629:6;4624:3;4620:16;4617:25;4614:2;;;4655:1;4652;4645:12;4614:2;4665:41;4699:6;4694:3;4689;4665:41;;;4333:379;;;;;;;;4721:442;;4833:3;4826:4;4818:6;4814:17;4810:27;4800:2;;4851:1;4848;4841:12;4800:2;4881:6;4875:13;4903:64;4918:48;4959:6;4918:48;;4903:64;4894:73;;4987:6;4980:5;4973:21;5023:4;5015:6;5011:17;5056:4;5049:5;5045:16;5091:3;5082:6;5077:3;5073:16;5070:25;5067:2;;;5108:1;5105;5098:12;5067:2;5118:39;5150:6;5145:3;5140;5118:39;;5171:170;5267:13;;5285:51;5267:13;5285:51;;5384:695;;5511:4;5499:9;5494:3;5490:19;5486:30;5483:2;;;5529:1;5526;5519:12;5483:2;5547:20;5562:4;5547:20;;;5538:29;-1:-1;5628:1;5659:78;5733:3;5713:9;5659:78;;;5635:103;;-1:-1;5806:2;5839:60;5895:3;5871:22;;;5839:60;;;5832:4;5825:5;5821:16;5814:86;5759:152;5964:2;5997:60;6053:3;6044:6;6033:9;6029:22;5997:60;;;5990:4;5983:5;5979:16;5972:86;5921:148;5477:602;;;;;6364:128;6430:20;;6455:32;6430:20;6455:32;;6499:241;;6603:2;6591:9;6582:7;6578:23;6574:32;6571:2;;;6619:1;6616;6609:12;6571:2;6654:1;6671:53;6716:7;6696:9;6671:53;;;6661:63;6565:175;-1:-1;;;;6565:175;6747:496;;;6888:2;6876:9;6867:7;6863:23;6859:32;6856:2;;;6904:1;6901;6894:12;6856:2;6939:1;6956:64;7012:7;6992:9;6956:64;;;6946:74;;6918:108;7078:2;7067:9;7063:18;7057:25;-1:-1;;;;;7094:6;7091:30;7088:2;;;7134:1;7131;7124:12;7088:2;7154:73;7219:7;7210:6;7199:9;7195:22;7154:73;;;7144:83;;7036:197;6850:393;;;;;;7250:699;;;;7406:2;7394:9;7385:7;7381:23;7377:32;7374:2;;;7422:1;7419;7412:12;7374:2;7457:1;7474:53;7519:7;7499:9;7474:53;;;7464:63;;7436:97;7592:2;7581:9;7577:18;7564:32;-1:-1;;;;;7608:6;7605:30;7602:2;;;7648:1;7645;7638:12;7602:2;7668:62;7722:7;7713:6;7702:9;7698:22;7668:62;;;7658:72;;7543:193;7795:2;7784:9;7780:18;7767:32;-1:-1;;;;;7811:6;7808:30;7805:2;;;7851:1;7848;7841:12;7805:2;7871:62;7925:7;7916:6;7905:9;7901:22;7871:62;;;7861:72;;7746:193;7368:581;;;;;;7956:366;;;8077:2;8065:9;8056:7;8052:23;8048:32;8045:2;;;8093:1;8090;8083:12;8045:2;8128:1;8145:53;8190:7;8170:9;8145:53;;;8135:63;;8107:97;8235:2;8253:53;8298:7;8289:6;8278:9;8274:22;8253:53;;8329:392;;8469:2;8457:9;8448:7;8444:23;8440:32;8437:2;;;8485:1;8482;8475:12;8437:2;8520:24;;-1:-1;;;;;8553:30;;8550:2;;;8596:1;8593;8586:12;8550:2;8616:89;8697:7;8688:6;8677:9;8673:22;8616:89;;8728:657;;;8910:2;8898:9;8889:7;8885:23;8881:32;8878:2;;;8926:1;8923;8916:12;8878:2;8961:24;;-1:-1;;;;;8994:30;;8991:2;;;9037:1;9034;9027:12;8991:2;9057:89;9138:7;9129:6;9118:9;9114:22;9057:89;;;9047:99;;8940:212;9204:2;9193:9;9189:18;9183:25;-1:-1;;;;;9220:6;9217:30;9214:2;;;9260:1;9257;9250:12;9214:2;9280:89;9361:7;9352:6;9341:9;9337:22;9280:89;;9392:392;;9532:2;9520:9;9511:7;9507:23;9503:32;9500:2;;;9548:1;9545;9538:12;9500:2;9583:24;;-1:-1;;;;;9616:30;;9613:2;;;9659:1;9656;9649:12;9613:2;9679:89;9760:7;9751:6;9740:9;9736:22;9679:89;;9791:1025;;;;;10021:3;10009:9;10000:7;9996:23;9992:33;9989:2;;;10038:1;10035;10028:12;9989:2;10073:31;;-1:-1;;;;;10113:30;;10110:2;;;10156:1;10153;10146:12;10110:2;10176:78;10246:7;10237:6;10226:9;10222:22;10176:78;;;10166:88;;10052:208;10319:2;10308:9;10304:18;10291:32;-1:-1;;;;;10335:6;10332:30;10329:2;;;10375:1;10372;10365:12;10329:2;10395:78;10465:7;10456:6;10445:9;10441:22;10395:78;;;10385:88;;10270:209;10538:2;10527:9;10523:18;10510:32;-1:-1;;;;;10554:6;10551:30;10548:2;;;10594:1;10591;10584:12;10548:2;10614:78;10684:7;10675:6;10664:9;10660:22;10614:78;;;10604:88;;10489:209;10729:2;10747:53;10792:7;10783:6;10772:9;10768:22;10747:53;;;10737:63;;10708:98;9983:833;;;;;;;;10823:241;;10927:2;10915:9;10906:7;10902:23;10898:32;10895:2;;;10943:1;10940;10933:12;10895:2;10978:1;10995:53;11040:7;11020:9;10995:53;;11071:1327;;;;;;;;;11311:3;11299:9;11290:7;11286:23;11282:33;11279:2;;;11328:1;11325;11318:12;11279:2;11363:1;11380:53;11425:7;11405:9;11380:53;;;11370:63;;11342:97;11470:2;11488:53;11533:7;11524:6;11513:9;11509:22;11488:53;;;11478:63;;11449:98;11578:2;11596:53;11641:7;11632:6;11621:9;11617:22;11596:53;;;11586:63;;11557:98;11686:2;11704:53;11749:7;11740:6;11729:9;11725:22;11704:53;;;11694:63;;11665:98;11822:3;11811:9;11807:19;11794:33;-1:-1;;;;;11839:6;11836:30;11833:2;;;11879:1;11876;11869:12;11833:2;11899:62;11953:7;11944:6;11933:9;11929:22;11899:62;;;11889:72;;11773:194;11998:3;12017:53;12062:7;12053:6;12042:9;12038:22;12017:53;;;12007:63;;11977:99;12107:3;12126:52;12170:7;12161:6;12150:9;12146:22;12126:52;;;12116:62;;12086:98;12243:3;12232:9;12228:19;12215:33;-1:-1;;;;;12260:6;12257:30;12254:2;;;12300:1;12297;12290:12;12254:2;12320:62;12374:7;12365:6;12354:9;12350:22;12320:62;;;12310:72;;12194:194;11273:1125;;;;;;;;;;;;12405:719;;;;;12568:3;12556:9;12547:7;12543:23;12539:33;12536:2;;;12585:1;12582;12575:12;12536:2;12620:1;12637:53;12682:7;12662:9;12637:53;;;12627:63;;12599:97;12727:2;12745:53;12790:7;12781:6;12770:9;12766:22;12745:53;;;12735:63;;12706:98;12835:2;12853:52;12897:7;12888:6;12877:9;12873:22;12853:52;;;12843:62;;12814:97;12970:2;12959:9;12955:18;12942:32;-1:-1;;;;;12986:6;12983:30;12980:2;;;13026:1;13023;13016:12;12980:2;13046:62;13100:7;13091:6;13080:9;13076:22;13046:62;;13131:617;;;;;13286:3;13274:9;13265:7;13261:23;13257:33;13254:2;;;13303:1;13300;13293:12;13254:2;13338:1;13355:53;13400:7;13380:9;13355:53;;;13345:63;;13317:97;13445:2;13463:53;13508:7;13499:6;13488:9;13484:22;13463:53;;;13453:63;;13424:98;13553:2;13571:53;13616:7;13607:6;13596:9;13592:22;13571:53;;13755:743;;;;;;13927:3;13915:9;13906:7;13902:23;13898:33;13895:2;;;13944:1;13941;13934:12;13895:2;13979:1;13996:53;14041:7;14021:9;13996:53;;;13986:63;;13958:97;14086:2;14104:53;14149:7;14140:6;14129:9;14125:22;14104:53;;;14094:63;;14065:98;14194:2;14212:53;14257:7;14248:6;14237:9;14233:22;14212:53;;;14202:63;;14173:98;14302:2;14320:53;14365:7;14356:6;14345:9;14341:22;14320:53;;;14310:63;;14281:98;14410:3;14429:53;14474:7;14465:6;14454:9;14450:22;14429:53;;;14419:63;;14389:99;13889:609;;;;;;;;;14505:593;;;;14651:2;14639:9;14630:7;14626:23;14622:32;14619:2;;;14667:1;14664;14657:12;14619:2;14702:1;14719:53;14764:7;14744:9;14719:53;;;14709:63;;14681:97;14809:2;14827:52;14871:7;14862:6;14851:9;14847:22;14827:52;;15105:574;;;15244:2;15232:9;15223:7;15219:23;15215:32;15212:2;;;15260:1;15257;15250:12;15212:2;15295:31;;-1:-1;;;;;15335:30;;15332:2;;;15378:1;15375;15368:12;15332:2;15398:62;15452:7;15443:6;15432:9;15428:22;15398:62;;;15388:72;;15274:192;15525:2;15514:9;15510:18;15497:32;-1:-1;;;;;15541:6;15538:30;15535:2;;;15581:1;15578;15571:12;15535:2;15601:62;15655:7;15646:6;15635:9;15631:22;15601:62;;15686:317;;15828:2;15816:9;15807:7;15803:23;15799:32;15796:2;;;15844:1;15841;15834:12;15796:2;15879:1;15896:91;15979:7;15959:9;15896:91;;16258:263;;16373:2;16361:9;16352:7;16348:23;16344:32;16341:2;;;16389:1;16386;16379:12;16341:2;16424:1;16441:64;16497:7;16477:9;16441:64;;16528:366;;;16649:2;16637:9;16628:7;16624:23;16620:32;16617:2;;;16665:1;16662;16655:12;16617:2;16700:1;16717:53;16762:7;16742:9;16717:53;;17274:930;;;;;17490:3;17478:9;17469:7;17465:23;17461:33;17458:2;;;17507:1;17504;17497:12;17458:2;17542:1;17559:64;17615:7;17595:9;17559:64;;;17549:74;;17521:108;17660:2;17678:64;17734:7;17725:6;17714:9;17710:22;17678:64;;;17668:74;;17639:109;17800:2;17789:9;17785:18;17779:25;-1:-1;;;;;17816:6;17813:30;17810:2;;;17856:1;17853;17846:12;17810:2;17876:89;17957:7;17948:6;17937:9;17933:22;17876:89;;;17866:99;;17758:213;18023:2;18012:9;18008:18;18002:25;-1:-1;;;;;18039:6;18036:30;18033:2;;;18079:1;18076;18069:12;18033:2;18099:89;18180:7;18171:6;18160:9;18156:22;18099:89;;18211:595;;;;18358:2;18346:9;18337:7;18333:23;18329:32;18326:2;;;18374:1;18371;18364:12;18326:2;18409:1;18426:53;18471:7;18451:9;18426:53;;;18416:63;;18388:97;18516:2;18534:53;18579:7;18570:6;18559:9;18555:22;18534:53;;18814:173;;18901:46;18943:3;18935:6;18901:46;;;-1:-1;;18976:4;18967:14;;18894:93;18996:173;;19083:46;19125:3;19117:6;19083:46;;19376:269;;19509:96;19601:3;19593:6;19509:96;;;-1:-1;;19634:4;19625:14;;19502:143;19948:265;;20103:104;20203:3;20195:6;20103:104;;20601:103;20674:24;20692:5;20674:24;;;20669:3;20662:37;20656:48;;;21108:690;;21253:54;21301:5;21253:54;;;21320:86;21399:6;21394:3;21320:86;;;21313:93;;21427:56;21477:5;21427:56;;;21503:7;21531:1;21516:260;21541:6;21538:1;21535:13;21516:260;;;21608:6;21602:13;21629:63;21688:3;21673:13;21629:63;;;21622:70;;21709:60;21762:6;21709:60;;;21699:70;-1:-1;;21563:1;21556:9;21516:260;;;-1:-1;21789:3;;21232:566;-1:-1;;;;;21232:566;21837:654;;21968:50;22012:5;21968:50;;;22031:76;22100:6;22095:3;22031:76;;;22024:83;;22128:52;22174:5;22128:52;;;22200:7;22228:1;22213:256;22238:6;22235:1;22232:13;22213:256;;;22305:6;22299:13;22326:63;22385:3;22370:13;22326:63;;;22319:70;;22406:56;22455:6;22406:56;;;22396:66;-1:-1;;22260:1;22253:9;22213:256;;22530:690;;22675:54;22723:5;22675:54;;;22742:86;22821:6;22816:3;22742:86;;;22735:93;;22849:56;22899:5;22849:56;;;22925:7;22953:1;22938:260;22963:6;22960:1;22957:13;22938:260;;;23030:6;23024:13;23051:63;23110:3;23095:13;23051:63;;;23044:70;;23131:60;23184:6;23131:60;;;23121:70;-1:-1;;22985:1;22978:9;22938:260;;23259:714;;23412:54;23460:5;23412:54;;;23479:94;23566:6;23561:3;23479:94;;;23472:101;;23594:56;23644:5;23594:56;;;23670:7;23698:1;23683:268;23708:6;23705:1;23702:13;23683:268;;;23775:6;23769:13;23796:71;23863:3;23848:13;23796:71;;;23789:78;;23884:60;23937:6;23884:60;;;23874:70;-1:-1;;23730:1;23723:9;23683:268;;24012:654;;24143:50;24187:5;24143:50;;;24206:76;24275:6;24270:3;24206:76;;;24199:83;;24303:52;24349:5;24303:52;;;24375:7;24403:1;24388:256;24413:6;24410:1;24407:13;24388:256;;;24480:6;24474:13;24501:63;24560:3;24545:13;24501:63;;;24494:70;;24581:56;24630:6;24581:56;;;24571:66;-1:-1;;24435:1;24428:9;24388:256;;24749:838;;24926:73;24993:5;24926:73;;;25012:99;25104:6;25099:3;25012:99;;;25005:106;;25132:75;25201:5;25132:75;;;25227:7;25255:1;25240:325;25265:6;25262:1;25259:13;25240:325;;;25332:6;25326:13;25353:109;25458:3;25443:13;25353:109;;;25346:116;;25479:79;25551:6;25479:79;;;25469:89;-1:-1;;25287:1;25280:9;25240:325;;25670:862;;25855:73;25922:5;25855:73;;;25941:107;26041:6;26036:3;25941:107;;;25934:114;;26069:75;26138:5;26069:75;;;26164:7;26192:1;26177:333;26202:6;26199:1;26196:13;26177:333;;;26269:6;26263:13;26290:117;26403:3;26388:13;26290:117;;;26283:124;;26424:79;26496:6;26424:79;;;26414:89;-1:-1;;26224:1;26217:9;26177:333;;26625:1052;;26820:79;26893:5;26820:79;;;26912:111;27016:6;27011:3;26912:111;;;26905:118;;27046:3;27088:4;27080:6;27076:17;27071:3;27067:27;27115:81;27190:5;27115:81;;;27216:7;27244:1;27229:409;27254:6;27251:1;27248:13;27229:409;;;27316:9;27310:4;27306:20;27301:3;27294:33;27361:6;27355:13;27383:118;27496:4;27481:13;27383:118;;;27375:126;;27518:85;27596:6;27518:85;;;27626:4;27617:14;;;;;27508:95;-1:-1;;27276:1;27269:9;27229:409;;;-1:-1;27651:4;;26799:878;-1:-1;;;;;;;26799:878;27716:690;;27861:54;27909:5;27861:54;;;27928:86;28007:6;28002:3;27928:86;;;27921:93;;28035:56;28085:5;28035:56;;;28111:7;28139:1;28124:260;28149:6;28146:1;28143:13;28124:260;;;28216:6;28210:13;28237:63;28296:3;28281:13;28237:63;;;28230:70;;28317:60;28370:6;28317:60;;;28307:70;-1:-1;;28171:1;28164:9;28124:260;;28445:714;;28598:54;28646:5;28598:54;;;28665:94;28752:6;28747:3;28665:94;;;28658:101;;28780:56;28830:5;28780:56;;;28856:7;28884:1;28869:268;28894:6;28891:1;28888:13;28869:268;;;28961:6;28955:13;28982:71;29049:3;29034:13;28982:71;;;28975:78;;29070:60;29123:6;29070:60;;;29060:70;-1:-1;;28916:1;28909:9;28869:268;;29198:654;;29329:50;29373:5;29329:50;;;29392:76;29461:6;29456:3;29392:76;;;29385:83;;29489:52;29535:5;29489:52;;;29561:7;29589:1;29574:256;29599:6;29596:1;29593:13;29574:256;;;29666:6;29660:13;29687:63;29746:3;29731:13;29687:63;;;29680:70;;29767:56;29816:6;29767:56;;;29757:66;-1:-1;;29621:1;29614:9;29574:256;;29860:103;29933:24;29951:5;29933:24;;30216:343;;30326:38;30358:5;30326:38;;;30376:70;30439:6;30434:3;30376:70;;;30369:77;;30451:52;30496:6;30491:3;30484:4;30477:5;30473:16;30451:52;;;30524:29;30546:6;30524:29;;;30515:39;;;;30306:253;-1:-1;;;30306:253;31592:162;31688:60;31742:5;31688:60;;31761:142;31847:50;31891:5;31847:50;;31910:148;31999:53;32046:5;31999:53;;32228:146;32316:52;32362:5;32316:52;;32543:465;;32703:67;32767:2;32762:3;32703:67;;;32803:66;32783:87;;-1:-1;;;;;32899:2;32890:12;;32883:88;32999:2;32990:12;;32689:319;-1:-1;;32689:319;33017:364;;33177:67;33241:2;33236:3;33177:67;;;33277:66;33257:87;;33372:2;33363:12;;33163:218;-1:-1;;33163:218;33390:465;;33550:67;33614:2;33609:3;33550:67;;;33650:66;33630:87;;-1:-1;;;;;33746:2;33737:12;;33730:88;33846:2;33837:12;;33536:319;-1:-1;;33536:319;33864:364;;34024:67;34088:2;34083:3;34024:67;;;34124:66;34104:87;;34219:2;34210:12;;34010:218;-1:-1;;34010:218;34237:364;;34397:67;34461:2;34456:3;34397:67;;;34497:66;34477:87;;34592:2;34583:12;;34383:218;-1:-1;;34383:218;34610:465;;34770:67;34834:2;34829:3;34770:67;;;34870:66;34850:87;;-1:-1;;;;;34966:2;34957:12;;34950:88;35066:2;35057:12;;34756:319;-1:-1;;34756:319;35084:465;;35244:67;35308:2;35303:3;35244:67;;;35344:66;35324:87;;35445:66;35440:2;35431:12;;35424:88;35540:2;35531:12;;35230:319;-1:-1;;35230:319;35558:364;;35718:67;35782:2;35777:3;35718:67;;;35818:66;35798:87;;35913:2;35904:12;;35704:218;-1:-1;;35704:218;35931:364;;36091:67;36155:2;36150:3;36091:67;;;36191:66;36171:87;;36286:2;36277:12;;36077:218;-1:-1;;36077:218;36304:364;;36464:67;36528:2;36523:3;36464:67;;;36564:66;36544:87;;36659:2;36650:12;;36450:218;-1:-1;;36450:218;36677:465;;36837:67;36901:2;36896:3;36837:67;;;36937:66;36917:87;;-1:-1;;;;;37033:2;37024:12;;37017:88;37133:2;37124:12;;36823:319;-1:-1;;36823:319;37229:1120;37461:22;;37229:1120;;37394:4;37385:14;;;37489:62;37389:3;37461:22;37489:62;;;37414:143;37637:4;37630:5;37626:16;37620:23;37649:63;37706:4;37701:3;37697:14;37683:12;37649:63;;;37567:151;37795:4;37788:5;37784:16;37778:23;37807:63;37864:4;37859:3;37855:14;37841:12;37807:63;;;37728:148;37961:4;37954:5;37950:16;37944:23;38013:3;38007:4;38003:14;37996:4;37991:3;37987:14;37980:38;38033:99;38127:4;38113:12;38033:99;;;38025:107;;37886:258;38219:4;38212:5;38208:16;38202:23;38231:86;38311:4;38306:3;38302:14;38288:12;38231:86;;;-1:-1;38340:4;37367:982;-1:-1;;;37367:982;38356:122;38455:18;;38449:29;38556:1536;38782:22;;38556:1536;;38713:5;38704:15;;;38810:62;38708:3;38782:22;38810:62;;;38734:144;38957:4;38950:5;38946:16;38940:23;38969:63;39026:4;39021:3;39017:14;39003:12;38969:63;;;38888:150;39117:4;39110:5;39106:16;39100:23;39129:63;39186:4;39181:3;39177:14;39163:12;39129:63;;;39048:150;39275:4;39268:5;39264:16;39258:23;39287:63;39344:4;39339:3;39335:14;39321:12;39287:63;;;39208:148;39430:4;39423:5;39419:16;39413:23;39442:63;39499:4;39494:3;39490:14;39476:12;39442:63;;;39366:145;39591:4;39584:5;39580:16;39574:23;39603:63;39660:4;39655:3;39651:14;39637:12;39603:63;;;39521:151;39747:4;39740:5;39736:16;39730:23;39759:76;39829:4;39824:3;39820:14;39806:12;39759:76;;;39682:159;39915:4;39908:5;39904:16;39898:23;39967:3;39961:4;39957:14;39950:4;39945:3;39941:14;39934:38;39987:67;40049:4;40035:12;39987:67;;;39979:75;38686:1406;-1:-1;;;;;38686:1406;40168:655;40378:22;;40301:4;40292:14;;;40406:78;40296:3;40378:22;40406:78;;;40321:169;40570:4;40563:5;40559:16;40553:23;40582:63;40639:4;40634:3;40630:14;40616:12;40582:63;;;40500:151;40727:4;40720:5;40716:16;40710:23;40739:63;40796:4;40791:3;40787:14;40773:12;40739:63;;;40661:147;40274:549;;;;41656:1201;41873:22;;41656:1201;;41805:4;41796:14;;;41901:62;41800:3;41873:22;41901:62;;;41825:144;42044:4;42037:5;42033:16;42027:23;42056:78;42128:4;42123:3;42119:14;42105:12;42056:78;;;41979:161;42215:4;42208:5;42204:16;42198:23;42267:3;42261:4;42257:14;42250:4;42245:3;42241:14;42234:38;42287:67;42349:4;42335:12;42287:67;;;42279:75;;42150:216;42442:4;42435:5;42431:16;42425:23;42454:63;42511:4;42506:3;42502:14;42488:12;42454:63;;;42376:147;42602:4;42595:5;42591:16;42585:23;42654:3;42648:4;42644:14;42637:4;42632:3;42628:14;42621:38;42674:145;42814:4;42800:12;42674:145;;42927:1249;43152:22;;42927:1249;;43084:4;43075:14;;;43180:70;43079:3;43152:22;43180:70;;;43104:152;43331:4;43324:5;43320:16;43314:23;43343:86;43423:4;43418:3;43414:14;43400:12;43343:86;;;43266:169;43510:4;43503:5;43499:16;43493:23;43562:3;43556:4;43552:14;43545:4;43540:3;43536:14;43529:38;43582:75;43652:4;43638:12;43582:75;;;43574:83;;43445:224;43745:4;43738:5;43734:16;43728:23;43757:71;43822:4;43817:3;43813:14;43799:12;43757:71;;;43679:155;43913:4;43906:5;43902:16;43896:23;43965:3;43959:4;43955:14;43948:4;43943:3;43939:14;43932:38;43985:153;44133:4;44119:12;43985:153;;44260:1020;44487:22;;44260:1020;;44409:4;44400:14;;;44515:62;44404:3;44487:22;44515:62;;;44429:154;44659:4;44652:5;44648:16;44642:23;44711:3;44705:4;44701:14;44694:4;44689:3;44685:14;44678:38;44731:99;44825:4;44811:12;44731:99;;;44723:107;;44593:249;44917:4;44910:5;44906:16;44900:23;44969:3;44963:4;44959:14;44952:4;44947:3;44943:14;44936:38;44989:99;45083:4;45069:12;44989:99;;;44981:107;;44852:248;45173:4;45166:5;45162:16;45156:23;45185:63;45242:4;45237:3;45233:14;45219:12;45185:63;;45763:118;45852:23;45869:5;45852:23;;45888:213;46006:2;45991:18;;46020:71;45995:9;46064:6;46020:71;;46108:408;46272:2;46257:18;;46286:71;46261:9;46330:6;46286:71;;;46405:9;46399:4;46395:20;46390:2;46379:9;46375:18;46368:48;46430:76;46501:4;46492:6;46430:76;;46523:468;46717:2;46702:18;;46731:71;46706:9;46775:6;46731:71;;;46850:9;46844:4;46840:20;46835:2;46824:9;46820:18;46813:48;46875:106;46976:4;46967:6;46875:106;;46998:361;47166:2;47180:47;;;47151:18;;47241:108;47151:18;47335:6;47241:108;;47366:620;47612:2;47626:47;;;47597:18;;47687:108;47597:18;47781:6;47687:108;;;47679:116;;47843:9;47837:4;47833:20;47828:2;47817:9;47813:18;47806:48;47868:108;47971:4;47962:6;47868:108;;47993:361;48161:2;48175:47;;;48146:18;;48236:108;48146:18;48330:6;48236:108;;48361:461;48579:2;48593:47;;;48564:18;;48654:158;48564:18;48798:6;48654:158;;48829:516;49019:2;49033:47;;;49004:18;;49094:84;49004:18;49164:6;49094:84;;;49086:92;;49226:9;49220:4;49216:20;49211:2;49200:9;49196:18;49189:48;49251:84;49330:4;49321:6;49251:84;;49352:407;49543:2;49557:47;;;49528:18;;49618:131;49528:18;49618:131;;49766:407;49957:2;49971:47;;;49942:18;;50032:131;49942:18;50032:131;;50180:407;50371:2;50385:47;;;50356:18;;50446:131;50356:18;50446:131;;50594:407;50785:2;50799:47;;;50770:18;;50860:131;50770:18;50860:131;;51008:407;51199:2;51213:47;;;51184:18;;51274:131;51184:18;51274:131;;51422:407;51613:2;51627:47;;;51598:18;;51688:131;51598:18;51688:131;;51836:407;52027:2;52041:47;;;52012:18;;52102:131;52012:18;52102:131;;52250:407;52441:2;52455:47;;;52426:18;;52516:131;52426:18;52516:131;;52664:407;52855:2;52869:47;;;52840:18;;52930:131;52840:18;52930:131;;53078:407;53269:2;53283:47;;;53254:18;;53344:131;53254:18;53344:131;;53492:407;53683:2;53697:47;;;53668:18;;53758:131;53668:18;53758:131;;53906:389;54088:2;54102:47;;;54073:18;;54163:122;54073:18;54271:6;54163:122;;54302:269;54448:2;54433:18;;54462:99;54437:9;54534:6;54462:99;;54578:388;54752:2;54737:18;;54766:99;54741:9;54838:6;54766:99;;;54876:80;54952:2;54941:9;54937:18;54928:6;54876:80;;;54723:243;;;;;;54973:795;55239:3;55224:19;;55254:99;55228:9;55326:6;55254:99;;;55364:80;55440:2;55429:9;55425:18;55416:6;55364:80;;;55492:9;55486:4;55482:20;55477:2;55466:9;55462:18;55455:48;55517:84;55596:4;55587:6;55517:84;;;55509:92;;55649:9;55643:4;55639:20;55634:2;55623:9;55619:18;55612:48;55674:84;55753:4;55744:6;55674:84;;;55666:92;55210:558;-1:-1;;;;;;55210:558;55775:507;55977:2;55962:18;;55991:99;55966:9;56063:6;55991:99;;;56101:80;56177:2;56166:9;56162:18;56153:6;56101:80;;;56192;56268:2;56257:9;56253:18;56244:6;56192:80;;56289:1191;56697:3;56682:19;;56712:99;56686:9;56784:6;56712:99;;;56859:9;56853:4;56849:20;56844:2;56833:9;56829:18;56822:48;56884:116;56995:4;56986:6;56884:116;;;56876:124;;57048:9;57042:4;57038:20;57033:2;57022:9;57018:18;57011:48;57073:116;57184:4;57175:6;57073:116;;;57065:124;;57237:9;57231:4;57227:20;57222:2;57211:9;57207:18;57200:48;57262:116;57373:4;57364:6;57262:116;;;57254:124;;57389:81;57465:3;57454:9;57450:19;57441:6;57389:81;;57487:388;57661:2;57646:18;;57675:99;57650:9;57747:6;57675:99;;;57785:80;57861:2;57850:9;57846:18;57837:6;57785:80;;57882:1391;58286:3;58271:19;;58301:99;58275:9;58373:6;58301:99;;;58411:80;58487:2;58476:9;58472:18;58463:6;58411:80;;;58502;58578:2;58567:9;58563:18;58554:6;58502:80;;;58593;58669:2;58658:9;58654:18;58645:6;58593:80;;;58684:81;58760:3;58749:9;58745:19;58736:6;58684:81;;;58814:9;58808:4;58804:20;58798:3;58787:9;58783:19;58776:49;58839:84;58918:4;58909:6;58839:84;;;58831:92;;58934:81;59010:3;58999:9;58995:19;58986:6;58934:81;;;59026:79;59100:3;59089:9;59085:19;59076:6;59026:79;;;59154:9;59148:4;59144:20;59138:3;59127:9;59123:19;59116:49;59179:84;59258:4;59249:6;59179:84;;;59171:92;58257:1016;-1:-1;;;;;;;;;;;58257:1016;59280:827;59554:3;59539:19;;59569:99;59543:9;59641:6;59569:99;;;59679:80;59755:2;59744:9;59740:18;59731:6;59679:80;;;59770;59846:2;59835:9;59831:18;59822:6;59770:80;;;59861:78;59935:2;59924:9;59920:18;59911:6;59861:78;;;59988:9;59982:4;59978:20;59972:3;59961:9;59957:19;59950:49;60013:84;60092:4;60083:6;60013:84;;;60005:92;59525:582;-1:-1;;;;;;;59525:582;60114:747;60372:3;60357:19;;60387:99;60361:9;60459:6;60387:99;;;60497:80;60573:2;60562:9;60558:18;60549:6;60497:80;;;60588;60664:2;60653:9;60649:18;60640:6;60588:80;;;60679;60755:2;60744:9;60740:18;60731:6;60679:80;;;60770:81;60846:3;60835:9;60831:19;60822:6;60770:81;;60868:867;61154:3;61139:19;;61169:99;61143:9;61241:6;61169:99;;;61279:80;61355:2;61344:9;61340:18;61331:6;61279:80;;;61370;61446:2;61435:9;61431:18;61422:6;61370:80;;;61461;61537:2;61526:9;61522:18;61513:6;61461:80;;;61552:81;61628:3;61617:9;61613:19;61604:6;61552:81;;;61644;61720:3;61709:9;61705:19;61696:6;61644:81;;61742:707;61988:3;61973:19;;62003:99;61977:9;62075:6;62003:99;;;62113:80;62189:2;62178:9;62174:18;62165:6;62113:80;;;62204:78;62278:2;62267:9;62263:18;62254:6;62204:78;;;62330:9;62324:4;62320:20;62315:2;62304:9;62300:18;62293:48;62355:84;62434:4;62425:6;62355:84;;62851:507;63053:2;63038:18;;63067:99;63042:9;63139:6;63067:99;;;63177:80;63253:2;63242:9;63238:18;63229:6;63177:80;;63879:711;64127:3;64112:19;;64142:99;64116:9;64214:6;64142:99;;;64252:80;64328:2;64317:9;64313:18;64304:6;64252:80;;;64343;64419:2;64408:9;64404:18;64395:6;64343:80;;64597:373;64771:2;64785:47;;;64756:18;;64846:114;64756:18;64946:6;64846:114;;64977:357;65143:2;65157:47;;;65128:18;;65218:106;65128:18;65310:6;65218:106;;65341:492;65543:2;65557:47;;;65528:18;;65618:114;65528:18;65718:6;65618:114;;;65610:122;;65743:80;65819:2;65808:9;65804:18;65795:6;65743:80;;65840:213;65958:2;65943:18;;65972:71;65947:9;66016:6;65972:71;;66060:843;66362:3;66347:19;;66377:71;66351:9;66421:6;66377:71;;;66459:72;66527:2;66516:9;66512:18;66503:6;66459:72;;;66579:9;66573:4;66569:20;66564:2;66553:9;66549:18;66542:48;66604:108;66707:4;66698:6;66604:108;;;66596:116;;66760:9;66754:4;66750:20;66745:2;66734:9;66730:18;66723:48;66785:108;66888:4;66879:6;66785:108;;66910:256;66972:2;66966:9;66998:17;;;-1:-1;;;;;67058:34;;67094:22;;;67055:62;67052:2;;;67130:1;67127;67120:12;67052:2;67146;67139:22;66950:216;;-1:-1;66950:216;67173:258;;-1:-1;;;;;67324:6;67321:30;67318:2;;;67364:1;67361;67354:12;67318:2;-1:-1;67393:4;67381:17;;;67411:15;;67255:176;67968:258;;-1:-1;;;;;68103:6;68100:30;68097:2;;;68143:1;68140;68133:12;68097:2;-1:-1;68216:4;68187;68164:17;;;;-1:-1;;68160:33;68206:15;;68034:192;68236:119;68342:4;68330:17;;68310:45;68927:137;69050:6;69030:34;69342:103;69428:12;;69412:33;69923:123;-1:-1;70038:3;;70022:24;71582:168;71690:19;;;71739:4;71730:14;;71683:67;74499:91;;74561:24;74579:5;74561:24;;74676:156;74763:5;74769:58;74763:5;74769:58;;74839:136;74916:5;74922:48;74916:5;74922:48;;74982:142;75062:5;75068:51;75062:5;75068:51;;75131:140;75210:5;75216:50;75210:5;75216:50;;75278:121;-1:-1;;;;;75340:54;;75323:76;75485:96;-1:-1;;;;;75546:30;;75529:52;75588:156;;75690:49;75733:5;75690:49;;75751:136;;75843:39;75876:5;75843:39;;75894:142;;75989:42;76025:5;75989:42;;76043:140;;76137:41;76172:5;76137:41;;76191:145;76272:6;76267:3;76262;76249:30;-1:-1;76328:1;76310:16;;76303:27;76242:94;76345:268;76410:1;76417:101;76431:6;76428:1;76425:13;76417:101;;;76498:11;;;76492:18;76479:11;;;76472:39;76453:2;76446:10;76417:101;;;76533:6;76530:1;76527:13;76524:2;;;-1:-1;;76598:1;76580:16;;76573:27;76394:219;76621:97;76709:2;76689:14;-1:-1;;76685:28;;76669:49;76726:116;76820:1;76813:5;76810:12;76800:2;;76826:9;76800:2;76794:48;;76849:106;76933:1;76926:5;76923:12;76913:2;;76939:9;76962:109;77049:1;77042:5;77039:12;77029:2;;77055:9;77078:108;77164:1;77157:5;77154:12;77144:2;;77170:9;77193:117;77262:24;77280:5;77262:24;;;77255:5;77252:35;77242:2;;77301:1;77298;77291:12;77317:117;77386:24;77404:5;77386:24;;77441:112;77528:1;77521:5;77518:12;77508:2;;77544:1;77541;77534:12;77684:115;77752:23;77769:5;77752:23;","source":"pragma solidity ^0.5.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\"openzeppelin-solidity/contracts/math/SafeMath.sol\\";\\nimport \\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\";\\nimport \\"./utils/SolRsaVerify.sol\\";\\n\\nimport { WorkersImpl } from \\"./impl/WorkersImpl.sol\\";\\nimport { PrincipalImpl } from \\"./impl/PrincipalImpl.sol\\";\\nimport { TaskImpl } from \\"./impl/TaskImpl.sol\\";\\nimport { SecretContractImpl } from \\"./impl/SecretContractImpl.sol\\";\\nimport { EnigmaCommon } from \\"./impl/EnigmaCommon.sol\\";\\nimport { EnigmaState } from \\"./impl/EnigmaState.sol\\";\\nimport { EnigmaEvents } from \\"./impl/EnigmaEvents.sol\\";\\nimport { EnigmaStorage } from \\"./impl/EnigmaStorage.sol\\";\\nimport { Getters } from \\"./impl/Getters.sol\\";\\nimport { ERC20 } from \\"./interfaces/ERC20.sol\\";\\n\\ncontract Enigma is EnigmaStorage, EnigmaEvents, Getters {\\n    using SafeMath for uint256;\\n    using ECDSA for bytes32;\\n\\n    // ========================================== Constructor ==========================================\\n\\n    constructor(address _tokenAddress, address _principal, uint _epochSize) public {\\n        state.engToken = ERC20(_tokenAddress);\\n        state.epochSize = _epochSize;\\n        state.taskTimeoutSize = 200;\\n        state.principal = _principal;\\n        state.stakingThreshold = 1;\\n        state.workerGroupSize = 1;\\n    }\\n\\n    // ========================================== Modifiers ==========================================\\n\\n    /**\\n    * Checks if the custodian wallet is registered as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerRegistered(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status != EnigmaCommon.WorkerStatus.Unregistered, \\"Unregistered worker\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged in as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedIn, \\"Worker not logged in\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged out as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedOut(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not logged out\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if worker can log in\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canLogIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(getFirstBlockNumber(block.number) != 0, \\"Principal node has not been initialized\\");\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        require(worker.balance >= state.stakingThreshold, \\"Worker\'s balance is not sufficient\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the worker can withdraw\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canWithdraw(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        EnigmaCommon.WorkerLog memory workerLog = WorkersImpl.getLatestWorkerLogImpl(worker, block.number);\\n        require(workerLog.workerEventType == EnigmaCommon.WorkerLogType.LogOut,\\n            \\"Worker\'s last log is not of LogOut type\\");\\n        require(getFirstBlockNumber(block.number) > workerLog.blockNumber,\\n            \\"Cannot withdraw in same epoch as log out event\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has not been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractUndefined(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Undefined, \\"Secret contract already deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractDeployed(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Deployed, \\"Secret contract not deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks task record has been created and is still pending receipt\\n    *\\n    * @param _taskId Task ID\\n    */\\n    modifier taskWaiting(bytes32 _taskId) {\\n        require(state.tasks[_taskId].status == EnigmaCommon.TaskStatus.RecordCreated, \\"Task is not waiting\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure signing key used for registration is unique\\n    *\\n    * @param _signer Signing key\\n    */\\n    modifier isUniqueSigningKey(address _signer) {\\n        for (uint i = 0; i < state.workerAddresses.length; i++) {\\n            require(state.workers[state.workerAddresses[i]].signer != _signer, \\"Not a unique signing key\\");\\n        }\\n        _;\\n    }\\n\\n    // ========================================== Functions ==========================================\\n\\n    /**\\n    * Registers a new worker or change the signer parameters of an existing\\n    * worker. This should be called by every worker (and the principal)\\n    * node in order to receive tasks.\\n    *\\n    * @param _signer The signer address, derived from the enclave public key\\n    * @param _report The RLP encoded report returned by the IAS\\n    * @param _signature Signature\\n    */\\n    function register(address _signer, bytes memory _report, bytes memory _signature)\\n    public\\n    isUniqueSigningKey(_signer)\\n    {\\n        WorkersImpl.registerImpl(state, _signer, _report, _signature);\\n    }\\n//\\n    /**\\n    * Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    *\\n    * @param _custodian The worker\'s ETH address\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function deposit(address _custodian, uint _amount)\\n    public\\n    workerRegistered(_custodian)\\n    {\\n        WorkersImpl.depositImpl(state, _custodian, _amount);\\n    }\\n\\n    /**\\n    * Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    *\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function withdraw(uint _amount)\\n    public\\n    canWithdraw(msg.sender)\\n    {\\n        WorkersImpl.withdrawImpl(state, _amount);\\n    }\\n\\n    /**\\n    * Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\n    * selection process.\\n    */\\n    function login() public canLogIn(msg.sender) {\\n        WorkersImpl.loginImpl(state);\\n    }\\n\\n    /**\\n    * Logout worker. Worker must be logged in to do so.\\n    */\\n    function logout() public workerLoggedIn(msg.sender) {\\n        WorkersImpl.logoutImpl(state);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContractFailure(\\n        bytes32 _taskId,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractFailureImpl(state, _taskId, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _preCodeHash Predeployed bytecode hash\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContract(\\n        bytes32 _taskId,\\n        bytes32 _preCodeHash,\\n        bytes32 _codeHash,\\n        bytes32 _initStateDeltaHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractImpl(state, _taskId, _preCodeHash, _codeHash, _initStateDeltaHash,\\n            _optionalEthereumData, _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Check if secret contract has been deployed\\n    *\\n    * @return  Number of deployed secret contracts\\n    */\\n    function countSecretContracts()\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return SecretContractImpl.countSecretContractsImpl(state);\\n    }\\n\\n    /**\\n    * Get deployed secret contract addresses within a range\\n    *\\n    * @param _start Start of range\\n    * @param _stop End of range\\n    * @return Subset of deployed secret contract addresses\\n    */\\n    function getSecretContractAddresses(uint _start, uint _stop)\\n    public\\n    view\\n    returns (bytes32[] memory)\\n    {\\n        return SecretContractImpl.getSecretContractAddressesImpl(state, _start, _stop);\\n    }\\n\\n    /**\\n    * Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\n    * generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\n    * task deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\n    * the on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\n    * invalid.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    * @param _nonce Locally-computed nonce value for this deployment\\n    */\\n    function createDeploymentTaskRecord(\\n        bytes32 _inputsHash,\\n        uint _gasLimit,\\n        uint _gasPx,\\n        uint _firstBlockNumber,\\n        uint _nonce\\n    )\\n    public\\n    {\\n        TaskImpl.createDeploymentTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber, _nonce);\\n    }\\n\\n    /**\\n    * Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\n    * contract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\n    * the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecord(\\n        bytes32 _inputsHash,\\n        uint _gasLimit,\\n        uint _gasPx,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    {\\n        TaskImpl.createTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\n    * transferring task fee from sender to contract, generating the unique taskId, saving the block number\\n    * when the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimits ENG gas limit\\n    * @param _gasPxs ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecords(\\n        bytes32[] memory _inputsHashes,\\n        uint[] memory _gasLimits,\\n        uint[] memory _gasPxs,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    {\\n        TaskImpl.createTaskRecordsImpl(state, _inputsHashes, _gasLimits, _gasPxs, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\n    * The task record is finalized and the worker is credited with the task fee.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _stateDeltaHash Input state delta hash\\n    * @param _outputHash Output state hash\\n    * @param _optionalEthereumData Output state hash\\n    * @param _optionalEthereumContractAddress Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitReceipt(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _stateDeltaHash,\\n        bytes32 _outputHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitReceiptImpl(state, _scAddr, _taskId, _stateDeltaHash, _outputHash, _optionalEthereumData,\\n            _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\n    * updated to indicate task failure.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitTaskFailure(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitTaskFailureImpl(state, _scAddr, _taskId, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    *\\n    * @param _taskId Unique taskId\\n    */\\n    function returnFeesForTask(bytes32 _taskId)\\n    public\\n    taskWaiting(_taskId)\\n    {\\n        TaskImpl.returnFeesForTaskImpl(state, _taskId);\\n    }\\n\\n    /**\\n    * Reparameterizing workers with a new seed\\n    * This should be called for each epoch by the Principal node\\n    *\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n    * @param _seed The random integer generated by the enclave\\n    * @param _sig Principal node\'s signature\\n    */\\n    function setWorkersParams(uint _blockNumber, uint _seed, bytes memory _sig)\\n    public\\n    workerRegistered(msg.sender)\\n    {\\n        PrincipalImpl.setWorkersParamsImpl(state, _blockNumber, _seed, _sig);\\n    }\\n\\n    /**\\n    * Get active workers before a certain block number\\n    *\\n    * @param _blockNumber Block number\\n    */\\n    function getActiveWorkers(uint _blockNumber)\\n    public\\n    view\\n    returns (address[] memory, uint[] memory)\\n    {\\n        return PrincipalImpl.getActiveWorkersImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get the first block number of an epoch that a given block number belongs to\\n    *\\n    * @param _blockNumber Block number\\n    * @return Block number\\n    */\\n    function getFirstBlockNumber(uint _blockNumber)\\n    public\\n    view\\n    returns (uint) {\\n        return WorkersImpl.getFirstBlockNumberImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get worker params for an epoch given a particular block number\\n    *\\n    * @param _blockNumber Block number\\n    * @return Epoch\'s first block number\\n    * @return Seed\\n    * @return Array of worker\'s signing addresses\\n    * @return Array of worker\'s stakes\\n    */\\n    function getWorkerParams(uint _blockNumber)\\n    public\\n    view\\n    returns (uint, uint, address[] memory, uint[] memory) {\\n        return WorkersImpl.getWorkerParamsImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\n    * and the secret contract address.\\n    *\\n    * @param _blockNumber Block number the task record was mined\\n    * @param _scAddr Secret contract address\\n    * @return Selected workers\' addresses\\n    */\\n    function getWorkerGroup(uint _blockNumber, bytes32 _scAddr)\\n    public\\n    view\\n    returns (address[] memory)\\n    {\\n        return WorkersImpl.getWorkerGroupImpl(state, _blockNumber, _scAddr);\\n    }\\n\\n    /**\\n    * The RLP encoded report returned by the IAS server\\n    *\\n    * @param _custodian The worker\'s custodian address\\n    */\\n    function getReport(address _custodian)\\n    public\\n    view\\n    workerRegistered(_custodian)\\n    returns (address, bytes memory)\\n    {\\n        return WorkersImpl.getReportImpl(state, _custodian);\\n    }\\n\\n    /**\\n    * This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n    * @param _data The report itself\\n    * @param _signature The signature of the report\\n    */\\n    function verifyReport(bytes memory _data, bytes memory _signature)\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return WorkersImpl.verifyReportImpl(_data, _signature);\\n    }\\n}\\n","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[823]},"id":824,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":824,"sourceUnit":12341,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":824,"sourceUnit":12213,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":5,"nodeType":"ImportDirective","scope":824,"sourceUnit":12132,"src":"184:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":7,"nodeType":"ImportDirective","scope":824,"sourceUnit":9305,"src":"220:53:0","symbolAliases":[{"foreign":6,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":9,"nodeType":"ImportDirective","scope":824,"sourceUnit":3163,"src":"274:57:0","symbolAliases":[{"foreign":8,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":11,"nodeType":"ImportDirective","scope":824,"sourceUnit":6044,"src":"332:47:0","symbolAliases":[{"foreign":10,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":13,"nodeType":"ImportDirective","scope":824,"sourceUnit":3803,"src":"380:67:0","symbolAliases":[{"foreign":12,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":15,"nodeType":"ImportDirective","scope":824,"sourceUnit":2277,"src":"448:55:0","symbolAliases":[{"foreign":14,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":17,"nodeType":"ImportDirective","scope":824,"sourceUnit":2463,"src":"504:53:0","symbolAliases":[{"foreign":16,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":19,"nodeType":"ImportDirective","scope":824,"sourceUnit":2416,"src":"558:55:0","symbolAliases":[{"foreign":18,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":21,"nodeType":"ImportDirective","scope":824,"sourceUnit":2471,"src":"614:57:0","symbolAliases":[{"foreign":20,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":23,"nodeType":"ImportDirective","scope":824,"sourceUnit":2636,"src":"672:45:0","symbolAliases":[{"foreign":22,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":25,"nodeType":"ImportDirective","scope":824,"sourceUnit":10290,"src":"718:47:0","symbolAliases":[{"foreign":24,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":26,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2470,"src":"786:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2470","typeString":"contract EnigmaStorage"}},"id":27,"nodeType":"InheritanceSpecifier","src":"786:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":28,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2415,"src":"801:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2415","typeString":"contract EnigmaEvents"}},"id":29,"nodeType":"InheritanceSpecifier","src":"801:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":30,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2635,"src":"815:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2635","typeString":"contract Getters"}},"id":31,"nodeType":"InheritanceSpecifier","src":"815:7:0"}],"contractDependencies":[2415,2470,2635],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":823,"linearizedBaseContracts":[823,2635,2415,2470],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":34,"libraryName":{"contractScope":null,"id":32,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":12340,"src":"835:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$12340","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"829:27:0","typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":37,"libraryName":{"contractScope":null,"id":35,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":12212,"src":"867:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$12212","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"861:24:0","typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":84,"nodeType":"Block","src":"1076:238:0","statements":[{"expression":{"argumentTypes":null,"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":46,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"1086:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":48,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2424,"src":"1086:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10289","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":50,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1109:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10289,"src":"1103:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$10289_$","typeString":"type(contract ERC20)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1103:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10289","typeString":"contract ERC20"}},"src":"1086:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10289","typeString":"contract ERC20"}},"id":53,"nodeType":"ExpressionStatement","src":"1086:37:0"},{"expression":{"argumentTypes":null,"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":54,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"1133:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":56,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2426,"src":"1133:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":57,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"1151:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1133:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":59,"nodeType":"ExpressionStatement","src":"1133:28:0"},{"expression":{"argumentTypes":null,"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":60,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"1171:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":62,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2428,"src":"1171:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"323030","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1195:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"src":"1171:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":65,"nodeType":"ExpressionStatement","src":"1171:27:0"},{"expression":{"argumentTypes":null,"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":66,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"1208:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":68,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2430,"src":"1208:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":69,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"1226:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1208:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":71,"nodeType":"ExpressionStatement","src":"1208:28:0"},{"expression":{"argumentTypes":null,"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":72,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"1246:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"1246:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1271:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1246:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":77,"nodeType":"ExpressionStatement","src":"1246:26:0"},{"expression":{"argumentTypes":null,"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":78,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"1282:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":80,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2460,"src":"1282:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1306:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1282:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":83,"nodeType":"ExpressionStatement","src":"1282:25:0"}]},"documentation":null,"id":85,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":85,"src":"1009:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":41,"name":"_principal","nodeType":"VariableDeclaration","scope":85,"src":"1032:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40,"name":"address","nodeType":"ElementaryTypeName","src":"1032:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":43,"name":"_epochSize","nodeType":"VariableDeclaration","scope":85,"src":"1052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint","nodeType":"ElementaryTypeName","src":"1052:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1008:60:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"1076:0:0"},"scope":823,"src":"997:317:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":109,"nodeType":"Block","src":"1604:181:0","statements":[{"assignments":[92],"declarations":[{"constant":false,"id":92,"name":"worker","nodeType":"VariableDeclaration","scope":109,"src":"1614:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":91,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2124,"src":"1614:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":97,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":93,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"1650:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":94,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2444,"src":"1650:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2124_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":96,"indexExpression":{"argumentTypes":null,"id":95,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"1664:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1650:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1614:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":99,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"1688:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"1688:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":101,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"1705:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"1705:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2165_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1705:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1688:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1745:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":98,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"1680:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1680:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":107,"nodeType":"ExpressionStatement","src":"1680:87:0"},{"id":108,"nodeType":"PlaceholderStatement","src":"1777:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":110,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"name":"_user","nodeType":"VariableDeclaration","scope":110,"src":"1589:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"1589:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1588:15:0"},"src":"1563:222:0","visibility":"internal"},{"body":{"id":134,"nodeType":"Block","src":"1968:178:0","statements":[{"assignments":[117],"declarations":[{"constant":false,"id":117,"name":"worker","nodeType":"VariableDeclaration","scope":134,"src":"1978:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":116,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2124,"src":"1978:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":122,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":118,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2014:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2444,"src":"2014:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2124_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":121,"indexExpression":{"argumentTypes":null,"id":120,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2028:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2014:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1978:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":124,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2052:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"2052:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":126,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"2069:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"2069:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2165_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2069:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2052:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2105:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"2044:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2044:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":132,"nodeType":"ExpressionStatement","src":"2044:84:0"},{"id":133,"nodeType":"PlaceholderStatement","src":"2138:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":135,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"name":"_user","nodeType":"VariableDeclaration","scope":135,"src":"1953:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"1953:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1952:15:0"},"src":"1929:217:0","visibility":"internal"},{"body":{"id":159,"nodeType":"Block","src":"2331:180:0","statements":[{"assignments":[142],"declarations":[{"constant":false,"id":142,"name":"worker","nodeType":"VariableDeclaration","scope":159,"src":"2341:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":141,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2124,"src":"2341:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":147,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":143,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2377:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2444,"src":"2377:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2124_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":146,"indexExpression":{"argumentTypes":null,"id":145,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2391:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2377:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2341:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":149,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2415:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"2415:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":151,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"2432:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"2432:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2165_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2432:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2415:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2469:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"2407:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2407:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":157,"nodeType":"ExpressionStatement","src":"2407:86:0"},{"id":158,"nodeType":"PlaceholderStatement","src":"2503:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":160,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"name":"_user","nodeType":"VariableDeclaration","scope":160,"src":"2316:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2315:15:0"},"src":"2291:220:0","visibility":"internal"},{"body":{"id":203,"nodeType":"Block","src":"2660:395:0","statements":[{"assignments":[167],"declarations":[{"constant":false,"id":167,"name":"worker","nodeType":"VariableDeclaration","scope":203,"src":"2670:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":166,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2124,"src":"2670:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":172,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":168,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2706:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2444,"src":"2706:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2124_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":171,"indexExpression":{"argumentTypes":null,"id":170,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2720:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2706:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2670:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":175,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12904,"src":"2764:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2764:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":174,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"2744:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2744:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2781:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2744:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2784:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":173,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"2736:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":182,"nodeType":"ExpressionStatement","src":"2736:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":184,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2844:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"2844:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":186,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"2861:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"2861:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2165_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2861:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2844:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2898:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"2836:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2836:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":192,"nodeType":"ExpressionStatement","src":"2836:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":194,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2958:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2120,"src":"2958:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":196,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2976:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"2976:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2958:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3000:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"2950:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2950:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"ExpressionStatement","src":"2950:87:0"},{"id":202,"nodeType":"PlaceholderStatement","src":"3047:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":204,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"name":"_user","nodeType":"VariableDeclaration","scope":204,"src":"2645:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"2645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2644:15:0"},"src":"2627:428:0","visibility":"internal"},{"body":{"id":260,"nodeType":"Block","src":"3213:580:0","statements":[{"assignments":[211],"declarations":[{"constant":false,"id":211,"name":"worker","nodeType":"VariableDeclaration","scope":260,"src":"3223:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":210,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2124,"src":"3223:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":216,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":212,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"3259:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2444,"src":"3259:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2124_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":215,"indexExpression":{"argumentTypes":null,"id":214,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"3273:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3259:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3223:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":218,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3297:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"3297:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":220,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"3314:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"3314:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2165_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3314:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3297:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3351:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"3289:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3289:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":226,"nodeType":"ExpressionStatement","src":"3289:104:0"},{"assignments":[230],"declarations":[{"constant":false,"id":230,"name":"workerLog","nodeType":"VariableDeclaration","scope":260,"src":"3403:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2142_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":229,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2142,"src":"3403:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2142_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":237,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":233,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3480:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":234,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12904,"src":"3488:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3488:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":231,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"3445:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":9303,"src":"3445:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2124_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2142_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3445:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2142_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3403:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2173","typeString":"enum EnigmaCommon.WorkerLogType"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":239,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3519:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2142_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2137,"src":"3519:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2173","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":241,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"3548:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2173,"src":"3548:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2173_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3548:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2173","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3519:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3595:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"3511:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3511:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"ExpressionStatement","src":"3511:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":250,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12904,"src":"3675:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3675:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":249,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"3655:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3655:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":253,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3691:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2142_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"3691:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3655:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3726:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"3647:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3647:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":258,"nodeType":"ExpressionStatement","src":"3647:128:0"},{"id":259,"nodeType":"PlaceholderStatement","src":"3785:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":261,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"name":"_user","nodeType":"VariableDeclaration","scope":261,"src":"3198:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"3198:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3197:15:0"},"src":"3177:616:0","visibility":"internal"},{"body":{"id":279,"nodeType":"Block","src":"3960:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2168","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":266,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"3978:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"3978:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2154_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":269,"indexExpression":{"argumentTypes":null,"id":268,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3994:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3978:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2154_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2153,"src":"3978:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2168","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":271,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"4013:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2168,"src":"4013:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2168_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4013:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2168","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"3978:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4058:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"3970:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3970:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":277,"nodeType":"ExpressionStatement","src":"3970:123:0"},{"id":278,"nodeType":"PlaceholderStatement","src":"4103:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":280,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"name":"_scAddr","nodeType":"VariableDeclaration","scope":280,"src":"3943:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3943:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3942:17:0"},"src":"3916:195:0","visibility":"internal"},{"body":{"id":298,"nodeType":"Block","src":"4273:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2168","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":285,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4291:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"4291:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2154_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":288,"indexExpression":{"argumentTypes":null,"id":287,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"4307:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4291:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2154_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2153,"src":"4291:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2168","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":290,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"4326:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2168,"src":"4326:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2168_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4326:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2168","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4291:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4370:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"4283:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4283:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":296,"nodeType":"ExpressionStatement","src":"4283:118:0"},{"id":297,"nodeType":"PlaceholderStatement","src":"4411:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":299,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"name":"_scAddr","nodeType":"VariableDeclaration","scope":299,"src":"4256:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4256:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4255:17:0"},"src":"4230:189:0","visibility":"internal"},{"body":{"id":317,"nodeType":"Block","src":"4584:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2161","typeString":"enum EnigmaCommon.TaskStatus"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":304,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4602:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2448,"src":"4602:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2112_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":307,"indexExpression":{"argumentTypes":null,"id":306,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"4614:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4602:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2112_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2109,"src":"4602:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2161","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":309,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"4633:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2161,"src":"4633:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2161_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4633:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2161","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4602:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"4594:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4594:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":315,"nodeType":"ExpressionStatement","src":"4594:100:0"},{"id":316,"nodeType":"PlaceholderStatement","src":"4704:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":318,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"name":"_taskId","nodeType":"VariableDeclaration","scope":318,"src":"4567:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4567:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4566:17:0"},"src":"4546:166:0","visibility":"internal"},{"body":{"id":351,"nodeType":"Block","src":"4874:202:0","statements":[{"body":{"id":348,"nodeType":"Block","src":"4940:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":335,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4962:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2444,"src":"4962:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2124_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":341,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":337,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4976:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2437,"src":"4976:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":340,"indexExpression":{"argumentTypes":null,"id":339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4998:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4976:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4962:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2114,"src":"4962:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":343,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"5012:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4962:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5021:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":334,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"4954:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4954:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"ExpressionStatement","src":"4954:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":326,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4901:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":327,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4905:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2437,"src":"4905:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4905:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4901:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":349,"initializationExpression":{"assignments":[323],"declarations":[{"constant":false,"id":323,"name":"i","nodeType":"VariableDeclaration","scope":349,"src":"4889:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint","nodeType":"ElementaryTypeName","src":"4889:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":325,"initialValue":{"argumentTypes":null,"hexValue":"30","id":324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4898:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4889:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4935:3:0","subExpression":{"argumentTypes":null,"id":331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4935:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":333,"nodeType":"ExpressionStatement","src":"4935:3:0"},"nodeType":"ForStatement","src":"4884:175:0"},{"id":350,"nodeType":"PlaceholderStatement","src":"5068:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":352,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"name":"_signer","nodeType":"VariableDeclaration","scope":352,"src":"4857:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"4857:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4856:17:0"},"src":"4829:247:0","visibility":"internal"},{"body":{"id":373,"nodeType":"Block","src":"5697:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":367,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"5732:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":368,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5739:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":369,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"5748:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":370,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5757:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":364,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"5707:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":8571,"src":"5707:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5707:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"5707:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":374,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":361,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":362,"modifierName":{"argumentTypes":null,"id":360,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"5665:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"5665:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"name":"_signer","nodeType":"VariableDeclaration","scope":374,"src":"5586:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"5586:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":356,"name":"_report","nodeType":"VariableDeclaration","scope":374,"src":"5603:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":355,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":358,"name":"_signature","nodeType":"VariableDeclaration","scope":374,"src":"5625:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":357,"name":"bytes","nodeType":"ElementaryTypeName","src":"5625:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"5585:64:0"},"returnParameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"5697:0:0"},"scope":823,"src":"5568:207:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":392,"nodeType":"Block","src":"6119:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":387,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"6153:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":388,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6160:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":389,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"6172:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":384,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"6129:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":8777,"src":"6129:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6129:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"6129:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":393,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":381,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6103:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":382,"modifierName":{"argumentTypes":null,"id":380,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"6086:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6086:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"name":"_custodian","nodeType":"VariableDeclaration","scope":393,"src":"6037:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"6037:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":378,"name":"_amount","nodeType":"VariableDeclaration","scope":393,"src":"6057:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint","nodeType":"ElementaryTypeName","src":"6057:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6036:34:0"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"6119:0:0"},"scope":823,"src":"6020:167:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":409,"nodeType":"Block","src":"6460:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":405,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"6495:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":406,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":402,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"6470:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":8830,"src":"6470:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6470:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":408,"nodeType":"ExpressionStatement","src":"6470:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":410,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":398,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12914,"src":"6444:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6444:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":400,"modifierName":{"argumentTypes":null,"id":397,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6432:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6432:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"name":"_amount","nodeType":"VariableDeclaration","scope":410,"src":"6403:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint","nodeType":"ElementaryTypeName","src":"6403:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6402:14:0"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"6460:0:0"},"scope":823,"src":"6385:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":423,"nodeType":"Block","src":"6725:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":420,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"6757:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":417,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"6735:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":8675,"src":"6735:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6735:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"ExpressionStatement","src":"6735:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":424,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12914,"src":"6713:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6713:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":415,"modifierName":{"argumentTypes":null,"id":412,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6704:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6704:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"6694:2:0"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"6725:0:0"},"scope":823,"src":"6680:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":437,"nodeType":"Block","src":"6899:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":434,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"6932:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":431,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"6909:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":8716,"src":"6909:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6909:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"ExpressionStatement","src":"6909:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":438,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":427,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12914,"src":"6887:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6887:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":429,"modifierName":{"argumentTypes":null,"id":426,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"6872:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6872:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"6862:2:0"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"6899:0:0"},"scope":823,"src":"6847:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":463,"nodeType":"Block","src":"7404:89:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":457,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"7455:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":458,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7462:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":459,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"7471:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":460,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"7481:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":454,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"7414:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6043_$","typeString":"type(library TaskImpl)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4248,"src":"7414:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,bytes memory)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7414:72:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"ExpressionStatement","src":"7414:72:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":464,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":447,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12914,"src":"7357:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7357:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":449,"modifierName":{"argumentTypes":null,"id":446,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"7342:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7342:26:0"},{"arguments":[{"argumentTypes":null,"id":451,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7391:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":452,"modifierName":{"argumentTypes":null,"id":450,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7373:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"7373:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"name":"_taskId","nodeType":"VariableDeclaration","scope":464,"src":"7253:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7253:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":442,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":464,"src":"7278:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":441,"name":"uint64","nodeType":"ElementaryTypeName","src":"7278:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":444,"name":"_sig","nodeType":"VariableDeclaration","scope":464,"src":"7303:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":443,"name":"bytes","nodeType":"ElementaryTypeName","src":"7303:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"7243:83:0"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"7404:0:0"},"scope":823,"src":"7207:286:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"8546:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":493,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"8590:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":494,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"8597:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":495,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"8606:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":496,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"8620:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":497,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"8631:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":498,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"8664:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":499,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"8687:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":500,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"8721:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":501,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"8731:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":490,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"8556:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6043_$","typeString":"type(library TaskImpl)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4618,"src":"8556:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8556:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"8556:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":505,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":483,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12914,"src":"8499:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8499:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":485,"modifierName":{"argumentTypes":null,"id":482,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"8484:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8484:26:0"},{"arguments":[{"argumentTypes":null,"id":487,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"8533:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":488,"modifierName":{"argumentTypes":null,"id":486,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"8515:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8515:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"name":"_taskId","nodeType":"VariableDeclaration","scope":505,"src":"8207:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8207:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":468,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":505,"src":"8232:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8232:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":470,"name":"_codeHash","nodeType":"VariableDeclaration","scope":505,"src":"8262:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8262:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":472,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":505,"src":"8289:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8289:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":474,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":505,"src":"8326:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":473,"name":"bytes","nodeType":"ElementaryTypeName","src":"8326:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":476,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":505,"src":"8370:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"8370:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":478,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":505,"src":"8420:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":477,"name":"uint64","nodeType":"ElementaryTypeName","src":"8420:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":480,"name":"_sig","nodeType":"VariableDeclaration","scope":505,"src":"8445:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":479,"name":"bytes","nodeType":"ElementaryTypeName","src":"8445:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8197:271:0"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[],"src":"8546:0:0"},"scope":823,"src":"8168:575:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":515,"nodeType":"Block","src":"8945:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":512,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"9006:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":510,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"8962:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3802_$","typeString":"type(library SecretContractImpl)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3734,"src":"8962:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2461_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8962:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":509,"id":514,"nodeType":"Return","src":"8955:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":516,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"8899:2:0"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"name":"","nodeType":"VariableDeclaration","scope":516,"src":"8935:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint","nodeType":"ElementaryTypeName","src":"8935:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8934:6:0"},"scope":823,"src":"8870:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":533,"nodeType":"Block","src":"9348:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":528,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"9415:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":529,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"9422:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":530,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9430:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":526,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"9365:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3802_$","typeString":"type(library SecretContractImpl)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3801,"src":"9365:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2461_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9365:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":525,"id":532,"nodeType":"Return","src":"9358:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":534,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"name":"_start","nodeType":"VariableDeclaration","scope":534,"src":"9268:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint","nodeType":"ElementaryTypeName","src":"9268:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":520,"name":"_stop","nodeType":"VariableDeclaration","scope":534,"src":"9281:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":519,"name":"uint","nodeType":"ElementaryTypeName","src":"9281:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9267:25:0"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"name":"","nodeType":"VariableDeclaration","scope":534,"src":"9326:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9326:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":523,"length":null,"nodeType":"ArrayTypeName","src":"9326:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"9325:18:0"},"scope":823,"src":"9232:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":558,"nodeType":"Block","src":"10480:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":550,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"10530:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":551,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"10537:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":552,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"10550:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":553,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"10561:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":554,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"10569:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":555,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"10588:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":547,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"10490:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6043_$","typeString":"type(library TaskImpl)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4095,"src":"10490:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint256,uint256,uint256,uint256)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10490:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":557,"nodeType":"ExpressionStatement","src":"10490:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":559,"implemented":true,"kind":"function","modifiers":[],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":559,"src":"10341:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10341:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":538,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":559,"src":"10370:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint","nodeType":"ElementaryTypeName","src":"10370:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":540,"name":"_gasPx","nodeType":"VariableDeclaration","scope":559,"src":"10394:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":539,"name":"uint","nodeType":"ElementaryTypeName","src":"10394:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":542,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":559,"src":"10415:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint","nodeType":"ElementaryTypeName","src":"10415:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":544,"name":"_nonce","nodeType":"VariableDeclaration","scope":559,"src":"10447:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint","nodeType":"ElementaryTypeName","src":"10447:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10331:133:0"},"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[],"src":"10480:0:0"},"scope":823,"src":"10296:306:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":580,"nodeType":"Block","src":"11330:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":573,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"11370:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":574,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"11377:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":575,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"11390:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":576,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"11401:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":577,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"11409:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":570,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"11340:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6043_$","typeString":"type(library TaskImpl)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4853,"src":"11340:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint256,uint256,uint256)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11340:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":579,"nodeType":"ExpressionStatement","src":"11340:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":581,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":581,"src":"11212:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11212:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":563,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":581,"src":"11241:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":562,"name":"uint","nodeType":"ElementaryTypeName","src":"11241:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":565,"name":"_gasPx","nodeType":"VariableDeclaration","scope":581,"src":"11265:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint","nodeType":"ElementaryTypeName","src":"11265:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":567,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":581,"src":"11286:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":566,"name":"uint","nodeType":"ElementaryTypeName","src":"11286:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11202:112:0"},"returnParameters":{"id":569,"nodeType":"ParameterList","parameters":[],"src":"11330:0:0"},"scope":823,"src":"11177:257:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":605,"nodeType":"Block","src":"12230:109:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":598,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"12271:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":599,"name":"_inputsHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"12278:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"argumentTypes":null,"id":600,"name":"_gasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"12293:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"argumentTypes":null,"id":601,"name":"_gasPxs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"12305:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"argumentTypes":null,"id":602,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"12314:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":595,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"12240:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6043_$","typeString":"type(library TaskImpl)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordsImpl","nodeType":"MemberAccess","referencedDeclaration":5683,"src":"12240:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32[] memory,uint256[] memory,uint256[] memory,uint256)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12240:92:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"ExpressionStatement","src":"12240:92:0"}]},"documentation":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\ntransferring task fee from sender to contract, generating the unique taskId, saving the block number\\nwhen the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimits ENG gas limit\\n@param _gasPxs ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":606,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecords","nodeType":"FunctionDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"name":"_inputsHashes","nodeType":"VariableDeclaration","scope":606,"src":"12081:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12081:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":583,"length":null,"nodeType":"ArrayTypeName","src":"12081:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":587,"name":"_gasLimits","nodeType":"VariableDeclaration","scope":606,"src":"12121:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":585,"name":"uint","nodeType":"ElementaryTypeName","src":"12121:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":586,"length":null,"nodeType":"ArrayTypeName","src":"12121:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":590,"name":"_gasPxs","nodeType":"VariableDeclaration","scope":606,"src":"12155:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":588,"name":"uint","nodeType":"ElementaryTypeName","src":"12155:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":589,"length":null,"nodeType":"ArrayTypeName","src":"12155:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":592,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":606,"src":"12186:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint","nodeType":"ElementaryTypeName","src":"12186:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12071:143:0"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[],"src":"12230:0:0"},"scope":823,"src":"12045:294:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":646,"nodeType":"Block","src":"13306:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":635,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"13343:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":636,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"13350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":637,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"13359:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":638,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"13368:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":639,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"13385:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":640,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"13398:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":641,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"13433:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":642,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"13467:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":643,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"13477:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":632,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"13316:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6043_$","typeString":"type(library TaskImpl)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5485,"src":"13316:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13316:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"13316:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":647,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":625,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12914,"src":"13260:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13260:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":627,"modifierName":{"argumentTypes":null,"id":624,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"13245:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13245:26:0"},{"arguments":[{"argumentTypes":null,"id":629,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"13293:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":630,"modifierName":{"argumentTypes":null,"id":628,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"13276:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13276:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"name":"_scAddr","nodeType":"VariableDeclaration","scope":647,"src":"12975:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12975:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":610,"name":"_taskId","nodeType":"VariableDeclaration","scope":647,"src":"13000:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13000:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":612,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":647,"src":"13025:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13025:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":614,"name":"_outputHash","nodeType":"VariableDeclaration","scope":647,"src":"13058:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13058:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":616,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":647,"src":"13087:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":615,"name":"bytes","nodeType":"ElementaryTypeName","src":"13087:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":618,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":647,"src":"13131:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"13131:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":620,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":647,"src":"13181:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":619,"name":"uint64","nodeType":"ElementaryTypeName","src":"13181:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":622,"name":"_sig","nodeType":"VariableDeclaration","scope":647,"src":"13206:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":621,"name":"bytes","nodeType":"ElementaryTypeName","src":"13206:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"12965:264:0"},"returnParameters":{"id":631,"nodeType":"ParameterList","parameters":[],"src":"13306:0:0"},"scope":823,"src":"12943:546:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":675,"nodeType":"Block","src":"14048:88:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":668,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"14089:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":669,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"14096:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":670,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"14105:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":671,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"14114:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":672,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"14124:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":665,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"14058:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6043_$","typeString":"type(library TaskImpl)"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"14058:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14058:71:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":674,"nodeType":"ExpressionStatement","src":"14058:71:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":676,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":658,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12914,"src":"14002:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14002:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":660,"modifierName":{"argumentTypes":null,"id":657,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"13987:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13987:26:0"},{"arguments":[{"argumentTypes":null,"id":662,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"14035:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":663,"modifierName":{"argumentTypes":null,"id":661,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"14018:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14018:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"name":"_scAddr","nodeType":"VariableDeclaration","scope":676,"src":"13873:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13873:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":651,"name":"_taskId","nodeType":"VariableDeclaration","scope":676,"src":"13898:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13898:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":653,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":676,"src":"13923:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":652,"name":"uint64","nodeType":"ElementaryTypeName","src":"13923:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":655,"name":"_sig","nodeType":"VariableDeclaration","scope":676,"src":"13948:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":654,"name":"bytes","nodeType":"ElementaryTypeName","src":"13948:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13863:108:0"},"returnParameters":{"id":664,"nodeType":"ParameterList","parameters":[],"src":"14048:0:0"},"scope":823,"src":"13837:299:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":691,"nodeType":"Block","src":"14387:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":687,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"14428:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":688,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"14435:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":684,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"14397:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6043_$","typeString":"type(library TaskImpl)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6042,"src":"14397:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14397:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":690,"nodeType":"ExpressionStatement","src":"14397:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":692,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":681,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"14374:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":682,"modifierName":{"argumentTypes":null,"id":680,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"14362:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14362:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"name":"_taskId","nodeType":"VariableDeclaration","scope":692,"src":"14330:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14330:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14329:17:0"},"returnParameters":{"id":683,"nodeType":"ParameterList","parameters":[],"src":"14387:0:0"},"scope":823,"src":"14303:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":714,"nodeType":"Block","src":"14910:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":708,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"14955:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":709,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"14962:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":710,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"14976:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":711,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"14983:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":705,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"14920:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3162_$","typeString":"type(library PrincipalImpl)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":2991,"src":"14920:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14920:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"14920:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":715,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":701,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12914,"src":"14894:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14894:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":703,"modifierName":{"argumentTypes":null,"id":700,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"14877:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14877:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":715,"src":"14812:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint","nodeType":"ElementaryTypeName","src":"14812:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":696,"name":"_seed","nodeType":"VariableDeclaration","scope":715,"src":"14831:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint","nodeType":"ElementaryTypeName","src":"14831:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":698,"name":"_sig","nodeType":"VariableDeclaration","scope":715,"src":"14843:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":697,"name":"bytes","nodeType":"ElementaryTypeName","src":"14843:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14811:50:0"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[],"src":"14910:0:0"},"scope":823,"src":"14786:209:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":732,"nodeType":"Block","src":"15231:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":728,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"15283:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":729,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"15290:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":726,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"15248:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3162_$","typeString":"type(library PrincipalImpl)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3161,"src":"15248:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2461_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15248:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":725,"id":731,"nodeType":"Return","src":"15241:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":733,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":733,"src":"15142:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint","nodeType":"ElementaryTypeName","src":"15142:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15141:19:0"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":721,"name":"","nodeType":"VariableDeclaration","scope":733,"src":"15194:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"15194:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":720,"length":null,"nodeType":"ArrayTypeName","src":"15194:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":724,"name":"","nodeType":"VariableDeclaration","scope":733,"src":"15212:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":722,"name":"uint","nodeType":"ElementaryTypeName","src":"15212:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":723,"length":null,"nodeType":"ArrayTypeName","src":"15212:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15193:33:0"},"scope":823,"src":"15116:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":746,"nodeType":"Block","src":"15572:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":742,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"15625:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":743,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"15632:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":740,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"15589:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":8950,"src":"15589:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2461_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15589:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":739,"id":745,"nodeType":"Return","src":"15582:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":747,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":747,"src":"15514:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":734,"name":"uint","nodeType":"ElementaryTypeName","src":"15514:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15513:19:0"},"returnParameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"name":"","nodeType":"VariableDeclaration","scope":747,"src":"15566:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint","nodeType":"ElementaryTypeName","src":"15566:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15565:6:0"},"scope":823,"src":"15485:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":768,"nodeType":"Block","src":"16058:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":764,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"16107:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":765,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"16114:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":762,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"16075:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":8987,"src":"16075:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2461_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16075:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":761,"id":767,"nodeType":"Return","src":"16068:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":769,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":769,"src":"15961:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":748,"name":"uint","nodeType":"ElementaryTypeName","src":"15961:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15960:19:0"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"name":"","nodeType":"VariableDeclaration","scope":769,"src":"16013:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint","nodeType":"ElementaryTypeName","src":"16013:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":754,"name":"","nodeType":"VariableDeclaration","scope":769,"src":"16019:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":753,"name":"uint","nodeType":"ElementaryTypeName","src":"16019:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":757,"name":"","nodeType":"VariableDeclaration","scope":769,"src":"16025:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"16025:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":756,"length":null,"nodeType":"ArrayTypeName","src":"16025:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":760,"name":"","nodeType":"VariableDeclaration","scope":769,"src":"16043:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":758,"name":"uint","nodeType":"ElementaryTypeName","src":"16043:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":759,"length":null,"nodeType":"ArrayTypeName","src":"16043:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16012:45:0"},"scope":823,"src":"15936:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":786,"nodeType":"Block","src":"16586:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":781,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"16634:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":782,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"16641:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":783,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"16655:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":779,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"16603:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":9251,"src":"16603:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2461_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16603:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":778,"id":785,"nodeType":"Return","src":"16596:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":787,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":787,"src":"16495:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint","nodeType":"ElementaryTypeName","src":"16495:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":773,"name":"_scAddr","nodeType":"VariableDeclaration","scope":787,"src":"16514:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16514:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16494:36:0"},"returnParameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"name":"","nodeType":"VariableDeclaration","scope":787,"src":"16564:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"16564:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":776,"length":null,"nodeType":"ArrayTypeName","src":"16564:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"16563:18:0"},"scope":823,"src":"16471:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":805,"nodeType":"Block","src":"16940:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":801,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"16983:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":802,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"16990:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":799,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"16957:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":8608,"src":"16957:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2461_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16957:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":798,"id":804,"nodeType":"Return","src":"16950:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":806,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":792,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"16888:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":793,"modifierName":{"argumentTypes":null,"id":791,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"16871:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"16871:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"name":"_custodian","nodeType":"VariableDeclaration","scope":806,"src":"16827:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"16827:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"16826:20:0"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"name":"","nodeType":"VariableDeclaration","scope":806,"src":"16913:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"16913:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":797,"name":"","nodeType":"VariableDeclaration","scope":806,"src":"16922:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":796,"name":"bytes","nodeType":"ElementaryTypeName","src":"16922:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"16912:23:0"},"scope":823,"src":"16808:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":821,"nodeType":"Block","src":"17323:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":817,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"17369:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":818,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"17376:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":815,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"17340:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":8634,"src":"17340:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17340:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":814,"id":820,"nodeType":"Return","src":"17333:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":822,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"name":"_data","nodeType":"VariableDeclaration","scope":822,"src":"17235:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":807,"name":"bytes","nodeType":"ElementaryTypeName","src":"17235:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":810,"name":"_signature","nodeType":"VariableDeclaration","scope":822,"src":"17255:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":809,"name":"bytes","nodeType":"ElementaryTypeName","src":"17255:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17234:45:0"},"returnParameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"name":"","nodeType":"VariableDeclaration","scope":822,"src":"17313:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":812,"name":"uint","nodeType":"ElementaryTypeName","src":"17313:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17312:6:0"},"scope":823,"src":"17213:181:0","stateMutability":"view","superFunction":null,"visibility":"public"}],"scope":824,"src":"767:16629:0"}],"src":"0:17397:0"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[823]},"id":824,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":824,"sourceUnit":12341,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":824,"sourceUnit":12213,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":5,"nodeType":"ImportDirective","scope":824,"sourceUnit":12132,"src":"184:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":7,"nodeType":"ImportDirective","scope":824,"sourceUnit":9305,"src":"220:53:0","symbolAliases":[{"foreign":6,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":9,"nodeType":"ImportDirective","scope":824,"sourceUnit":3163,"src":"274:57:0","symbolAliases":[{"foreign":8,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":11,"nodeType":"ImportDirective","scope":824,"sourceUnit":6044,"src":"332:47:0","symbolAliases":[{"foreign":10,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":13,"nodeType":"ImportDirective","scope":824,"sourceUnit":3803,"src":"380:67:0","symbolAliases":[{"foreign":12,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":15,"nodeType":"ImportDirective","scope":824,"sourceUnit":2277,"src":"448:55:0","symbolAliases":[{"foreign":14,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":17,"nodeType":"ImportDirective","scope":824,"sourceUnit":2463,"src":"504:53:0","symbolAliases":[{"foreign":16,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":19,"nodeType":"ImportDirective","scope":824,"sourceUnit":2416,"src":"558:55:0","symbolAliases":[{"foreign":18,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":21,"nodeType":"ImportDirective","scope":824,"sourceUnit":2471,"src":"614:57:0","symbolAliases":[{"foreign":20,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":23,"nodeType":"ImportDirective","scope":824,"sourceUnit":2636,"src":"672:45:0","symbolAliases":[{"foreign":22,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":25,"nodeType":"ImportDirective","scope":824,"sourceUnit":10290,"src":"718:47:0","symbolAliases":[{"foreign":24,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":26,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2470,"src":"786:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2470","typeString":"contract EnigmaStorage"}},"id":27,"nodeType":"InheritanceSpecifier","src":"786:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":28,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2415,"src":"801:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2415","typeString":"contract EnigmaEvents"}},"id":29,"nodeType":"InheritanceSpecifier","src":"801:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":30,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2635,"src":"815:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2635","typeString":"contract Getters"}},"id":31,"nodeType":"InheritanceSpecifier","src":"815:7:0"}],"contractDependencies":[2415,2470,2635],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":823,"linearizedBaseContracts":[823,2635,2415,2470],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":34,"libraryName":{"contractScope":null,"id":32,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":12340,"src":"835:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$12340","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"829:27:0","typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":37,"libraryName":{"contractScope":null,"id":35,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":12212,"src":"867:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$12212","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"861:24:0","typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":84,"nodeType":"Block","src":"1076:238:0","statements":[{"expression":{"argumentTypes":null,"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":46,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"1086:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":48,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2424,"src":"1086:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10289","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":50,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1109:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10289,"src":"1103:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$10289_$","typeString":"type(contract ERC20)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1103:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10289","typeString":"contract ERC20"}},"src":"1086:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10289","typeString":"contract ERC20"}},"id":53,"nodeType":"ExpressionStatement","src":"1086:37:0"},{"expression":{"argumentTypes":null,"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":54,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"1133:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":56,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2426,"src":"1133:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":57,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"1151:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1133:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":59,"nodeType":"ExpressionStatement","src":"1133:28:0"},{"expression":{"argumentTypes":null,"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":60,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"1171:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":62,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2428,"src":"1171:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"323030","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1195:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"src":"1171:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":65,"nodeType":"ExpressionStatement","src":"1171:27:0"},{"expression":{"argumentTypes":null,"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":66,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"1208:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":68,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2430,"src":"1208:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":69,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"1226:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1208:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":71,"nodeType":"ExpressionStatement","src":"1208:28:0"},{"expression":{"argumentTypes":null,"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":72,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"1246:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"1246:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1271:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1246:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":77,"nodeType":"ExpressionStatement","src":"1246:26:0"},{"expression":{"argumentTypes":null,"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":78,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"1282:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":80,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2460,"src":"1282:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1306:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1282:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":83,"nodeType":"ExpressionStatement","src":"1282:25:0"}]},"documentation":null,"id":85,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":85,"src":"1009:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":41,"name":"_principal","nodeType":"VariableDeclaration","scope":85,"src":"1032:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40,"name":"address","nodeType":"ElementaryTypeName","src":"1032:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":43,"name":"_epochSize","nodeType":"VariableDeclaration","scope":85,"src":"1052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint","nodeType":"ElementaryTypeName","src":"1052:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1008:60:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"1076:0:0"},"scope":823,"src":"997:317:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":109,"nodeType":"Block","src":"1604:181:0","statements":[{"assignments":[92],"declarations":[{"constant":false,"id":92,"name":"worker","nodeType":"VariableDeclaration","scope":109,"src":"1614:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":91,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2124,"src":"1614:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":97,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":93,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"1650:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":94,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2444,"src":"1650:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2124_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":96,"indexExpression":{"argumentTypes":null,"id":95,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"1664:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1650:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1614:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":99,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"1688:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"1688:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":101,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"1705:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"1705:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2165_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1705:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1688:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1745:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":98,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"1680:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1680:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":107,"nodeType":"ExpressionStatement","src":"1680:87:0"},{"id":108,"nodeType":"PlaceholderStatement","src":"1777:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":110,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"name":"_user","nodeType":"VariableDeclaration","scope":110,"src":"1589:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"1589:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1588:15:0"},"src":"1563:222:0","visibility":"internal"},{"body":{"id":134,"nodeType":"Block","src":"1968:178:0","statements":[{"assignments":[117],"declarations":[{"constant":false,"id":117,"name":"worker","nodeType":"VariableDeclaration","scope":134,"src":"1978:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":116,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2124,"src":"1978:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":122,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":118,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2014:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2444,"src":"2014:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2124_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":121,"indexExpression":{"argumentTypes":null,"id":120,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2028:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2014:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1978:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":124,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2052:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"2052:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":126,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"2069:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"2069:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2165_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2069:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2052:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2105:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"2044:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2044:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":132,"nodeType":"ExpressionStatement","src":"2044:84:0"},{"id":133,"nodeType":"PlaceholderStatement","src":"2138:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":135,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"name":"_user","nodeType":"VariableDeclaration","scope":135,"src":"1953:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"1953:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1952:15:0"},"src":"1929:217:0","visibility":"internal"},{"body":{"id":159,"nodeType":"Block","src":"2331:180:0","statements":[{"assignments":[142],"declarations":[{"constant":false,"id":142,"name":"worker","nodeType":"VariableDeclaration","scope":159,"src":"2341:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":141,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2124,"src":"2341:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":147,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":143,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2377:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2444,"src":"2377:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2124_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":146,"indexExpression":{"argumentTypes":null,"id":145,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2391:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2377:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2341:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":149,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2415:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"2415:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":151,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"2432:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"2432:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2165_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2432:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2415:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2469:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"2407:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2407:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":157,"nodeType":"ExpressionStatement","src":"2407:86:0"},{"id":158,"nodeType":"PlaceholderStatement","src":"2503:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":160,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"name":"_user","nodeType":"VariableDeclaration","scope":160,"src":"2316:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2315:15:0"},"src":"2291:220:0","visibility":"internal"},{"body":{"id":203,"nodeType":"Block","src":"2660:395:0","statements":[{"assignments":[167],"declarations":[{"constant":false,"id":167,"name":"worker","nodeType":"VariableDeclaration","scope":203,"src":"2670:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":166,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2124,"src":"2670:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":172,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":168,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2706:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2444,"src":"2706:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2124_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":171,"indexExpression":{"argumentTypes":null,"id":170,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2720:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2706:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2670:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":175,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12904,"src":"2764:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2764:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":174,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"2744:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2744:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2781:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2744:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2784:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":173,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"2736:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":182,"nodeType":"ExpressionStatement","src":"2736:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":184,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2844:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"2844:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":186,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"2861:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"2861:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2165_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2861:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2844:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2898:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"2836:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2836:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":192,"nodeType":"ExpressionStatement","src":"2836:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":194,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2958:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2120,"src":"2958:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":196,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2976:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"2976:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2958:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3000:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"2950:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2950:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"ExpressionStatement","src":"2950:87:0"},{"id":202,"nodeType":"PlaceholderStatement","src":"3047:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":204,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"name":"_user","nodeType":"VariableDeclaration","scope":204,"src":"2645:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"2645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2644:15:0"},"src":"2627:428:0","visibility":"internal"},{"body":{"id":260,"nodeType":"Block","src":"3213:580:0","statements":[{"assignments":[211],"declarations":[{"constant":false,"id":211,"name":"worker","nodeType":"VariableDeclaration","scope":260,"src":"3223:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":210,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2124,"src":"3223:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":216,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":212,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"3259:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2444,"src":"3259:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2124_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":215,"indexExpression":{"argumentTypes":null,"id":214,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"3273:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3259:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3223:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":218,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3297:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"3297:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":220,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"3314:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"3314:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2165_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3314:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2165","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3297:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3351:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"3289:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3289:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":226,"nodeType":"ExpressionStatement","src":"3289:104:0"},{"assignments":[230],"declarations":[{"constant":false,"id":230,"name":"workerLog","nodeType":"VariableDeclaration","scope":260,"src":"3403:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2142_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":229,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2142,"src":"3403:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2142_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":237,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":233,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3480:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":234,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12904,"src":"3488:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3488:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2124_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":231,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"3445:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":9303,"src":"3445:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2124_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2142_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3445:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2142_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3403:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2173","typeString":"enum EnigmaCommon.WorkerLogType"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":239,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3519:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2142_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2137,"src":"3519:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2173","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":241,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"3548:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2173,"src":"3548:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2173_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3548:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2173","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3519:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3595:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"3511:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3511:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"ExpressionStatement","src":"3511:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":250,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12904,"src":"3675:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3675:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":249,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"3655:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3655:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":253,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3691:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2142_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"3691:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3655:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3726:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"3647:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3647:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":258,"nodeType":"ExpressionStatement","src":"3647:128:0"},{"id":259,"nodeType":"PlaceholderStatement","src":"3785:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":261,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"name":"_user","nodeType":"VariableDeclaration","scope":261,"src":"3198:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"3198:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3197:15:0"},"src":"3177:616:0","visibility":"internal"},{"body":{"id":279,"nodeType":"Block","src":"3960:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2168","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":266,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"3978:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"3978:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2154_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":269,"indexExpression":{"argumentTypes":null,"id":268,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3994:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3978:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2154_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2153,"src":"3978:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2168","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":271,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"4013:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2168,"src":"4013:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2168_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4013:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2168","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"3978:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4058:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"3970:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3970:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":277,"nodeType":"ExpressionStatement","src":"3970:123:0"},{"id":278,"nodeType":"PlaceholderStatement","src":"4103:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":280,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"name":"_scAddr","nodeType":"VariableDeclaration","scope":280,"src":"3943:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3943:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3942:17:0"},"src":"3916:195:0","visibility":"internal"},{"body":{"id":298,"nodeType":"Block","src":"4273:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2168","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":285,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4291:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"4291:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2154_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":288,"indexExpression":{"argumentTypes":null,"id":287,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"4307:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4291:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2154_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2153,"src":"4291:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2168","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":290,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"4326:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2168,"src":"4326:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2168_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4326:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2168","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4291:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4370:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"4283:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4283:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":296,"nodeType":"ExpressionStatement","src":"4283:118:0"},{"id":297,"nodeType":"PlaceholderStatement","src":"4411:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":299,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"name":"_scAddr","nodeType":"VariableDeclaration","scope":299,"src":"4256:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4256:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4255:17:0"},"src":"4230:189:0","visibility":"internal"},{"body":{"id":317,"nodeType":"Block","src":"4584:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2161","typeString":"enum EnigmaCommon.TaskStatus"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":304,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4602:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2448,"src":"4602:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2112_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":307,"indexExpression":{"argumentTypes":null,"id":306,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"4614:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4602:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2112_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2109,"src":"4602:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2161","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":309,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"4633:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2276_$","typeString":"type(library EnigmaCommon)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2161,"src":"4633:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2161_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4633:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2161","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4602:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"4594:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4594:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":315,"nodeType":"ExpressionStatement","src":"4594:100:0"},{"id":316,"nodeType":"PlaceholderStatement","src":"4704:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":318,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"name":"_taskId","nodeType":"VariableDeclaration","scope":318,"src":"4567:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4567:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4566:17:0"},"src":"4546:166:0","visibility":"internal"},{"body":{"id":351,"nodeType":"Block","src":"4874:202:0","statements":[{"body":{"id":348,"nodeType":"Block","src":"4940:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":335,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4962:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2444,"src":"4962:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2124_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":341,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":337,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4976:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2437,"src":"4976:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":340,"indexExpression":{"argumentTypes":null,"id":339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4998:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4976:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4962:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2124_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2114,"src":"4962:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":343,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"5012:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4962:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5021:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":334,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12917,12918],"referencedDeclaration":12918,"src":"4954:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4954:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"ExpressionStatement","src":"4954:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":326,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4901:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":327,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4905:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},"id":328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2437,"src":"4905:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4905:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4901:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":349,"initializationExpression":{"assignments":[323],"declarations":[{"constant":false,"id":323,"name":"i","nodeType":"VariableDeclaration","scope":349,"src":"4889:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint","nodeType":"ElementaryTypeName","src":"4889:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":325,"initialValue":{"argumentTypes":null,"hexValue":"30","id":324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4898:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4889:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4935:3:0","subExpression":{"argumentTypes":null,"id":331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4935:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":333,"nodeType":"ExpressionStatement","src":"4935:3:0"},"nodeType":"ForStatement","src":"4884:175:0"},{"id":350,"nodeType":"PlaceholderStatement","src":"5068:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":352,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"name":"_signer","nodeType":"VariableDeclaration","scope":352,"src":"4857:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"4857:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4856:17:0"},"src":"4829:247:0","visibility":"internal"},{"body":{"id":373,"nodeType":"Block","src":"5697:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":367,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"5732:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":368,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5739:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":369,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"5748:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":370,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5757:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":364,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"5707:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":8571,"src":"5707:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5707:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"5707:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":374,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":361,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":362,"modifierName":{"argumentTypes":null,"id":360,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"5665:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"5665:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"name":"_signer","nodeType":"VariableDeclaration","scope":374,"src":"5586:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"5586:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":356,"name":"_report","nodeType":"VariableDeclaration","scope":374,"src":"5603:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":355,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":358,"name":"_signature","nodeType":"VariableDeclaration","scope":374,"src":"5625:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":357,"name":"bytes","nodeType":"ElementaryTypeName","src":"5625:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"5585:64:0"},"returnParameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"5697:0:0"},"scope":823,"src":"5568:207:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":392,"nodeType":"Block","src":"6119:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":387,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"6153:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":388,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6160:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":389,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"6172:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":384,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"6129:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":8777,"src":"6129:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6129:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"6129:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":393,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":381,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6103:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":382,"modifierName":{"argumentTypes":null,"id":380,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"6086:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6086:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"name":"_custodian","nodeType":"VariableDeclaration","scope":393,"src":"6037:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"6037:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":378,"name":"_amount","nodeType":"VariableDeclaration","scope":393,"src":"6057:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint","nodeType":"ElementaryTypeName","src":"6057:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6036:34:0"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"6119:0:0"},"scope":823,"src":"6020:167:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":409,"nodeType":"Block","src":"6460:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":405,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"6495:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":406,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":402,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"6470:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":8830,"src":"6470:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6470:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":408,"nodeType":"ExpressionStatement","src":"6470:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":410,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":398,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12914,"src":"6444:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6444:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":400,"modifierName":{"argumentTypes":null,"id":397,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6432:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6432:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"name":"_amount","nodeType":"VariableDeclaration","scope":410,"src":"6403:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint","nodeType":"ElementaryTypeName","src":"6403:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6402:14:0"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"6460:0:0"},"scope":823,"src":"6385:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":423,"nodeType":"Block","src":"6725:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":420,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"6757:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":417,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"6735:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":8675,"src":"6735:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6735:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"ExpressionStatement","src":"6735:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":424,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12914,"src":"6713:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6713:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":415,"modifierName":{"argumentTypes":null,"id":412,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6704:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6704:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"6694:2:0"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"6725:0:0"},"scope":823,"src":"6680:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":437,"nodeType":"Block","src":"6899:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":434,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"6932:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":431,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"6909:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":8716,"src":"6909:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6909:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"ExpressionStatement","src":"6909:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":438,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":427,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12914,"src":"6887:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6887:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":429,"modifierName":{"argumentTypes":null,"id":426,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"6872:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6872:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"6862:2:0"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"6899:0:0"},"scope":823,"src":"6847:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":463,"nodeType":"Block","src":"7404:89:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":457,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"7455:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":458,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7462:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":459,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"7471:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":460,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"7481:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":454,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"7414:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6043_$","typeString":"type(library TaskImpl)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4248,"src":"7414:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,bytes memory)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7414:72:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"ExpressionStatement","src":"7414:72:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":464,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":447,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12914,"src":"7357:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7357:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":449,"modifierName":{"argumentTypes":null,"id":446,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"7342:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7342:26:0"},{"arguments":[{"argumentTypes":null,"id":451,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7391:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":452,"modifierName":{"argumentTypes":null,"id":450,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7373:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"7373:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"name":"_taskId","nodeType":"VariableDeclaration","scope":464,"src":"7253:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7253:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":442,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":464,"src":"7278:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":441,"name":"uint64","nodeType":"ElementaryTypeName","src":"7278:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":444,"name":"_sig","nodeType":"VariableDeclaration","scope":464,"src":"7303:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":443,"name":"bytes","nodeType":"ElementaryTypeName","src":"7303:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"7243:83:0"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"7404:0:0"},"scope":823,"src":"7207:286:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"8546:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":493,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"8590:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":494,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"8597:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":495,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"8606:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":496,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"8620:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":497,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"8631:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":498,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"8664:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":499,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"8687:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":500,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"8721:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":501,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"8731:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":490,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"8556:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6043_$","typeString":"type(library TaskImpl)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4618,"src":"8556:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8556:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"8556:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":505,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":483,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12914,"src":"8499:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8499:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":485,"modifierName":{"argumentTypes":null,"id":482,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"8484:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8484:26:0"},{"arguments":[{"argumentTypes":null,"id":487,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"8533:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":488,"modifierName":{"argumentTypes":null,"id":486,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"8515:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8515:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"name":"_taskId","nodeType":"VariableDeclaration","scope":505,"src":"8207:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8207:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":468,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":505,"src":"8232:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8232:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":470,"name":"_codeHash","nodeType":"VariableDeclaration","scope":505,"src":"8262:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8262:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":472,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":505,"src":"8289:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8289:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":474,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":505,"src":"8326:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":473,"name":"bytes","nodeType":"ElementaryTypeName","src":"8326:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":476,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":505,"src":"8370:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"8370:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":478,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":505,"src":"8420:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":477,"name":"uint64","nodeType":"ElementaryTypeName","src":"8420:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":480,"name":"_sig","nodeType":"VariableDeclaration","scope":505,"src":"8445:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":479,"name":"bytes","nodeType":"ElementaryTypeName","src":"8445:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8197:271:0"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[],"src":"8546:0:0"},"scope":823,"src":"8168:575:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":515,"nodeType":"Block","src":"8945:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":512,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"9006:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":510,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"8962:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3802_$","typeString":"type(library SecretContractImpl)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3734,"src":"8962:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2461_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8962:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":509,"id":514,"nodeType":"Return","src":"8955:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":516,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"8899:2:0"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"name":"","nodeType":"VariableDeclaration","scope":516,"src":"8935:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint","nodeType":"ElementaryTypeName","src":"8935:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8934:6:0"},"scope":823,"src":"8870:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":533,"nodeType":"Block","src":"9348:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":528,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"9415:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":529,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"9422:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":530,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9430:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":526,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"9365:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3802_$","typeString":"type(library SecretContractImpl)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3801,"src":"9365:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2461_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9365:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":525,"id":532,"nodeType":"Return","src":"9358:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":534,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"name":"_start","nodeType":"VariableDeclaration","scope":534,"src":"9268:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint","nodeType":"ElementaryTypeName","src":"9268:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":520,"name":"_stop","nodeType":"VariableDeclaration","scope":534,"src":"9281:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":519,"name":"uint","nodeType":"ElementaryTypeName","src":"9281:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9267:25:0"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"name":"","nodeType":"VariableDeclaration","scope":534,"src":"9326:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9326:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":523,"length":null,"nodeType":"ArrayTypeName","src":"9326:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"9325:18:0"},"scope":823,"src":"9232:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":558,"nodeType":"Block","src":"10480:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":550,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"10530:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":551,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"10537:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":552,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"10550:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":553,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"10561:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":554,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"10569:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":555,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"10588:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":547,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"10490:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6043_$","typeString":"type(library TaskImpl)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4095,"src":"10490:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint256,uint256,uint256,uint256)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10490:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":557,"nodeType":"ExpressionStatement","src":"10490:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":559,"implemented":true,"kind":"function","modifiers":[],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":559,"src":"10341:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10341:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":538,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":559,"src":"10370:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint","nodeType":"ElementaryTypeName","src":"10370:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":540,"name":"_gasPx","nodeType":"VariableDeclaration","scope":559,"src":"10394:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":539,"name":"uint","nodeType":"ElementaryTypeName","src":"10394:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":542,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":559,"src":"10415:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint","nodeType":"ElementaryTypeName","src":"10415:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":544,"name":"_nonce","nodeType":"VariableDeclaration","scope":559,"src":"10447:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint","nodeType":"ElementaryTypeName","src":"10447:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10331:133:0"},"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[],"src":"10480:0:0"},"scope":823,"src":"10296:306:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":580,"nodeType":"Block","src":"11330:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":573,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"11370:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":574,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"11377:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":575,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"11390:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":576,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"11401:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":577,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"11409:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":570,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"11340:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6043_$","typeString":"type(library TaskImpl)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4853,"src":"11340:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint256,uint256,uint256)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11340:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":579,"nodeType":"ExpressionStatement","src":"11340:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":581,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":581,"src":"11212:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11212:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":563,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":581,"src":"11241:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":562,"name":"uint","nodeType":"ElementaryTypeName","src":"11241:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":565,"name":"_gasPx","nodeType":"VariableDeclaration","scope":581,"src":"11265:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint","nodeType":"ElementaryTypeName","src":"11265:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":567,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":581,"src":"11286:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":566,"name":"uint","nodeType":"ElementaryTypeName","src":"11286:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11202:112:0"},"returnParameters":{"id":569,"nodeType":"ParameterList","parameters":[],"src":"11330:0:0"},"scope":823,"src":"11177:257:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":605,"nodeType":"Block","src":"12230:109:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":598,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"12271:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":599,"name":"_inputsHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"12278:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"argumentTypes":null,"id":600,"name":"_gasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"12293:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"argumentTypes":null,"id":601,"name":"_gasPxs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"12305:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"argumentTypes":null,"id":602,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"12314:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":595,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"12240:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6043_$","typeString":"type(library TaskImpl)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordsImpl","nodeType":"MemberAccess","referencedDeclaration":5683,"src":"12240:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32[] memory,uint256[] memory,uint256[] memory,uint256)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12240:92:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"ExpressionStatement","src":"12240:92:0"}]},"documentation":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\ntransferring task fee from sender to contract, generating the unique taskId, saving the block number\\nwhen the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimits ENG gas limit\\n@param _gasPxs ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":606,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecords","nodeType":"FunctionDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"name":"_inputsHashes","nodeType":"VariableDeclaration","scope":606,"src":"12081:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12081:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":583,"length":null,"nodeType":"ArrayTypeName","src":"12081:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":587,"name":"_gasLimits","nodeType":"VariableDeclaration","scope":606,"src":"12121:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":585,"name":"uint","nodeType":"ElementaryTypeName","src":"12121:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":586,"length":null,"nodeType":"ArrayTypeName","src":"12121:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":590,"name":"_gasPxs","nodeType":"VariableDeclaration","scope":606,"src":"12155:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":588,"name":"uint","nodeType":"ElementaryTypeName","src":"12155:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":589,"length":null,"nodeType":"ArrayTypeName","src":"12155:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":592,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":606,"src":"12186:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint","nodeType":"ElementaryTypeName","src":"12186:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12071:143:0"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[],"src":"12230:0:0"},"scope":823,"src":"12045:294:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":646,"nodeType":"Block","src":"13306:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":635,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"13343:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":636,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"13350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":637,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"13359:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":638,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"13368:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":639,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"13385:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":640,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"13398:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":641,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"13433:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":642,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"13467:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":643,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"13477:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":632,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"13316:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6043_$","typeString":"type(library TaskImpl)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5485,"src":"13316:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13316:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"13316:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":647,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":625,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12914,"src":"13260:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13260:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":627,"modifierName":{"argumentTypes":null,"id":624,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"13245:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13245:26:0"},{"arguments":[{"argumentTypes":null,"id":629,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"13293:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":630,"modifierName":{"argumentTypes":null,"id":628,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"13276:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13276:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"name":"_scAddr","nodeType":"VariableDeclaration","scope":647,"src":"12975:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12975:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":610,"name":"_taskId","nodeType":"VariableDeclaration","scope":647,"src":"13000:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13000:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":612,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":647,"src":"13025:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13025:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":614,"name":"_outputHash","nodeType":"VariableDeclaration","scope":647,"src":"13058:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13058:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":616,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":647,"src":"13087:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":615,"name":"bytes","nodeType":"ElementaryTypeName","src":"13087:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":618,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":647,"src":"13131:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"13131:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":620,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":647,"src":"13181:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":619,"name":"uint64","nodeType":"ElementaryTypeName","src":"13181:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":622,"name":"_sig","nodeType":"VariableDeclaration","scope":647,"src":"13206:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":621,"name":"bytes","nodeType":"ElementaryTypeName","src":"13206:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"12965:264:0"},"returnParameters":{"id":631,"nodeType":"ParameterList","parameters":[],"src":"13306:0:0"},"scope":823,"src":"12943:546:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":675,"nodeType":"Block","src":"14048:88:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":668,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"14089:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":669,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"14096:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":670,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"14105:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":671,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"14114:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":672,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"14124:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":665,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"14058:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6043_$","typeString":"type(library TaskImpl)"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"14058:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14058:71:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":674,"nodeType":"ExpressionStatement","src":"14058:71:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":676,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":658,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12914,"src":"14002:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14002:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":660,"modifierName":{"argumentTypes":null,"id":657,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"13987:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13987:26:0"},{"arguments":[{"argumentTypes":null,"id":662,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"14035:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":663,"modifierName":{"argumentTypes":null,"id":661,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"14018:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14018:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"name":"_scAddr","nodeType":"VariableDeclaration","scope":676,"src":"13873:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13873:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":651,"name":"_taskId","nodeType":"VariableDeclaration","scope":676,"src":"13898:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13898:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":653,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":676,"src":"13923:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":652,"name":"uint64","nodeType":"ElementaryTypeName","src":"13923:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":655,"name":"_sig","nodeType":"VariableDeclaration","scope":676,"src":"13948:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":654,"name":"bytes","nodeType":"ElementaryTypeName","src":"13948:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13863:108:0"},"returnParameters":{"id":664,"nodeType":"ParameterList","parameters":[],"src":"14048:0:0"},"scope":823,"src":"13837:299:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":691,"nodeType":"Block","src":"14387:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":687,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"14428:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":688,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"14435:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":684,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"14397:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6043_$","typeString":"type(library TaskImpl)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6042,"src":"14397:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14397:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":690,"nodeType":"ExpressionStatement","src":"14397:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":692,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":681,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"14374:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":682,"modifierName":{"argumentTypes":null,"id":680,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"14362:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14362:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"name":"_taskId","nodeType":"VariableDeclaration","scope":692,"src":"14330:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14330:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14329:17:0"},"returnParameters":{"id":683,"nodeType":"ParameterList","parameters":[],"src":"14387:0:0"},"scope":823,"src":"14303:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":714,"nodeType":"Block","src":"14910:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":708,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"14955:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":709,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"14962:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":710,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"14976:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":711,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"14983:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":705,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"14920:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3162_$","typeString":"type(library PrincipalImpl)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":2991,"src":"14920:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2461_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14920:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"14920:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":715,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":701,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12914,"src":"14894:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14894:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":703,"modifierName":{"argumentTypes":null,"id":700,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"14877:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14877:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":715,"src":"14812:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint","nodeType":"ElementaryTypeName","src":"14812:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":696,"name":"_seed","nodeType":"VariableDeclaration","scope":715,"src":"14831:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint","nodeType":"ElementaryTypeName","src":"14831:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":698,"name":"_sig","nodeType":"VariableDeclaration","scope":715,"src":"14843:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":697,"name":"bytes","nodeType":"ElementaryTypeName","src":"14843:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14811:50:0"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[],"src":"14910:0:0"},"scope":823,"src":"14786:209:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":732,"nodeType":"Block","src":"15231:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":728,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"15283:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":729,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"15290:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":726,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"15248:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3162_$","typeString":"type(library PrincipalImpl)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3161,"src":"15248:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2461_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15248:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":725,"id":731,"nodeType":"Return","src":"15241:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":733,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":733,"src":"15142:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint","nodeType":"ElementaryTypeName","src":"15142:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15141:19:0"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":721,"name":"","nodeType":"VariableDeclaration","scope":733,"src":"15194:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"15194:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":720,"length":null,"nodeType":"ArrayTypeName","src":"15194:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":724,"name":"","nodeType":"VariableDeclaration","scope":733,"src":"15212:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":722,"name":"uint","nodeType":"ElementaryTypeName","src":"15212:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":723,"length":null,"nodeType":"ArrayTypeName","src":"15212:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15193:33:0"},"scope":823,"src":"15116:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":746,"nodeType":"Block","src":"15572:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":742,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"15625:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":743,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"15632:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":740,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"15589:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":8950,"src":"15589:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2461_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15589:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":739,"id":745,"nodeType":"Return","src":"15582:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":747,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":747,"src":"15514:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":734,"name":"uint","nodeType":"ElementaryTypeName","src":"15514:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15513:19:0"},"returnParameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"name":"","nodeType":"VariableDeclaration","scope":747,"src":"15566:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint","nodeType":"ElementaryTypeName","src":"15566:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15565:6:0"},"scope":823,"src":"15485:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":768,"nodeType":"Block","src":"16058:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":764,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"16107:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":765,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"16114:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":762,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"16075:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":8987,"src":"16075:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2461_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16075:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":761,"id":767,"nodeType":"Return","src":"16068:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":769,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":769,"src":"15961:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":748,"name":"uint","nodeType":"ElementaryTypeName","src":"15961:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15960:19:0"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"name":"","nodeType":"VariableDeclaration","scope":769,"src":"16013:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint","nodeType":"ElementaryTypeName","src":"16013:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":754,"name":"","nodeType":"VariableDeclaration","scope":769,"src":"16019:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":753,"name":"uint","nodeType":"ElementaryTypeName","src":"16019:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":757,"name":"","nodeType":"VariableDeclaration","scope":769,"src":"16025:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"16025:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":756,"length":null,"nodeType":"ArrayTypeName","src":"16025:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":760,"name":"","nodeType":"VariableDeclaration","scope":769,"src":"16043:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":758,"name":"uint","nodeType":"ElementaryTypeName","src":"16043:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":759,"length":null,"nodeType":"ArrayTypeName","src":"16043:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16012:45:0"},"scope":823,"src":"15936:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":786,"nodeType":"Block","src":"16586:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":781,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"16634:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":782,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"16641:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":783,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"16655:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":779,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"16603:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":9251,"src":"16603:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2461_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16603:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":778,"id":785,"nodeType":"Return","src":"16596:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":787,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":787,"src":"16495:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint","nodeType":"ElementaryTypeName","src":"16495:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":773,"name":"_scAddr","nodeType":"VariableDeclaration","scope":787,"src":"16514:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16514:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16494:36:0"},"returnParameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"name":"","nodeType":"VariableDeclaration","scope":787,"src":"16564:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"16564:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":776,"length":null,"nodeType":"ArrayTypeName","src":"16564:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"16563:18:0"},"scope":823,"src":"16471:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":805,"nodeType":"Block","src":"16940:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":801,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"16983:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":802,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"16990:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2461_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":799,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"16957:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":8608,"src":"16957:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2461_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16957:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":798,"id":804,"nodeType":"Return","src":"16950:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":806,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":792,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"16888:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":793,"modifierName":{"argumentTypes":null,"id":791,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"16871:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"16871:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"name":"_custodian","nodeType":"VariableDeclaration","scope":806,"src":"16827:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"16827:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"16826:20:0"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"name":"","nodeType":"VariableDeclaration","scope":806,"src":"16913:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"16913:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":797,"name":"","nodeType":"VariableDeclaration","scope":806,"src":"16922:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":796,"name":"bytes","nodeType":"ElementaryTypeName","src":"16922:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"16912:23:0"},"scope":823,"src":"16808:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":821,"nodeType":"Block","src":"17323:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":817,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"17369:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":818,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"17376:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":815,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"17340:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9304_$","typeString":"type(library WorkersImpl)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":8634,"src":"17340:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17340:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":814,"id":820,"nodeType":"Return","src":"17333:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":822,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"name":"_data","nodeType":"VariableDeclaration","scope":822,"src":"17235:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":807,"name":"bytes","nodeType":"ElementaryTypeName","src":"17235:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":810,"name":"_signature","nodeType":"VariableDeclaration","scope":822,"src":"17255:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":809,"name":"bytes","nodeType":"ElementaryTypeName","src":"17255:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17234:45:0"},"returnParameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"name":"","nodeType":"VariableDeclaration","scope":822,"src":"17313:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":812,"name":"uint","nodeType":"ElementaryTypeName","src":"17313:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17312:6:0"},"scope":823,"src":"17213:181:0","stateMutability":"view","superFunction":null,"visibility":"public"}],"scope":824,"src":"767:16629:0"}],"src":"0:17397:0"},"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"4447":{"events":{"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event","signature":"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"},"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55":{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event","signature":"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55"},"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb":{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event","signature":"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb"},"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd":{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event","signature":"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd"},"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint256"},{"indexed":false,"name":"gasPx","type":"uint256"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7"},"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint256[]"},{"indexed":false,"name":"gasPxs","type":"uint256[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7"},"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142"},"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event","signature":"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f"},"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event","signature":"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454"},"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event","signature":"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f"},"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event","signature":"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f"},"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5":{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event","signature":"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5"},"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9":{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event","signature":"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9"},"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158":{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event","signature":"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158"},"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint64"},{"indexed":false,"name":"gasPx","type":"uint64"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d"},"0x5b00db39a072b9c10ede0c598bf9c262cd8e40a7057c19e3691a7d38dfa2c84e":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint64[]"},{"indexed":false,"name":"gasPxs","type":"uint64[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0x5b00db39a072b9c10ede0c598bf9c262cd8e40a7057c19e3691a7d38dfa2c84e"},"0x4bd41c1b1fe5d4fab28fe14a580082e19937fe7f97068b2bd8424abe636220a9":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"workerAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0x4bd41c1b1fe5d4fab28fe14a580082e19937fe7f97068b2bd8424abe636220a9"}},"links":{"WorkersImpl":"0xC5d669649A06b2E82A598285c616E908380bb0D9","PrincipalImpl":"0x347862b8b93fda47075a97256DC3B22895966BF1","TaskImpl":"0x8f655fE4eEA47ed71FABc98a4dfaF8511422C5c4","SecretContractImpl":"0x5aeb4FF552f91dDF1eeb1a7548ba42cF7b5F8A7f","UpgradeImpl":"0x3B888868CDD69126999F613Ef083314708D8eB68"},"address":"0x870af3c22488acFCf5961e3cD1cd0c2008C7B5A1","transactionHash":"0x55fc0633fc6f242a6a61e5ed1d1e93642264c285155202f99e665c1fd415708a"}},"schemaVersion":"3.0.10","updatedAt":"2019-10-15T06:34:20.374Z","devdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_optionalEthereumContractAddress":"Output state hash","_optionalEthereumData":"Output state hash","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_stateDeltaHash":"Input state delta hash","_taskId":"Unique taskId"}},"commitTaskFailure(bytes32,bytes32,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_taskId":"Unique taskId"}},"countSecretContracts()":{"return":"Number of deployed secret contracts"},"createDeploymentTaskRecord(bytes32,uint256,uint256,uint256,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash","_nonce":"Locally-computed nonce value for this deployment"}},"createTaskRecord(bytes32,uint256,uint256,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"createTaskRecords(bytes32[],uint256[],uint256[],uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimits":"ENG gas limit","_gasPxs":"ENG gas price in grains format (10 ** 8)","_inputsHashes":"Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_initStateDeltaHash":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumContractAddress":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumData":"Initial state delta hash as a result of the contract\'s constructor","_preCodeHash":"Predeployed bytecode hash","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deploySecretContractFailure(bytes32,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deposit(address,uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit","_custodian":"The worker\'s ETH address"}},"getActiveWorkers(uint256)":{"params":{"_blockNumber":"Block number"}},"getAllSecretContractAddresses()":{"return":"Array of secret contract addresses"},"getEpochSize()":{"return":"Epoch size"},"getFirstBlockNumber(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Block number"},"getReport(address)":{"params":{"_custodian":"The worker\'s custodian address"}},"getSecretContract(bytes32)":{"params":{"_scAddr":"Secret contract address"},"return":"SecretContract struct"},"getSecretContractAddresses(uint256,uint256)":{"params":{"_start":"Start of range","_stop":"End of range"},"return":"Subset of deployed secret contract addresses"},"getSigningAddress()":{"return":"Signing address"},"getTaskRecord(bytes32)":{"params":{"_taskId":"Unique identifier for a given task"},"return":"TaskRecord struct"},"getUserTaskDeployments(address)":{"params":{"_sender":"Task sender\'s ethereum address"},"return":"Current number for task deployments for user"},"getWorker(address)":{"params":{"_worker":"Worker\'s ethereum address"},"return":"Worker struct"},"getWorkerFromSigningAddress(address)":{"params":{"_signer":"Worker\'s signing address"},"return":"Ethereum addressWorker struct"},"getWorkerGroup(uint256,bytes32)":{"params":{"_blockNumber":"Block number the task record was mined","_scAddr":"Secret contract address"},"return":"Selected workers\' addresses"},"getWorkerParams(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes"},"getWorkersParams()":{"return":"Array of WorkersParams structs"},"register(address,bytes,bytes)":{"params":{"_report":"The RLP encoded report returned by the IAS","_signature":"Signature","_signer":"The signer address, derived from the enclave public key"}},"returnFeesForTask(bytes32)":{"params":{"_taskId":"Unique taskId"}},"setWorkersParams(uint256,uint256,bytes)":{"params":{"_blockNumber":"Block number principal node is attempting to set worker params","_seed":"The random integer generated by the enclave","_sig":"Principal node\'s signature"}},"verifyReport(bytes,bytes)":{"params":{"_data":"The report itself","_signature":"The signature of the report"}},"withdraw(uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit"}}}},"userdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee."},"commitTaskFailure(bytes32,bytes32,uint64,bytes)":{"notice":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure."},"countSecretContracts()":{"notice":"Check if secret contract has been deployed"},"createDeploymentTaskRecord(bytes32,uint256,uint256,uint256,uint256)":{"notice":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid."},"createTaskRecord(bytes32,uint256,uint256,uint256)":{"notice":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"createTaskRecords(bytes32[],uint256[],uint256[],uint256)":{"notice":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deploySecretContractFailure(bytes32,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deposit(address,uint256)":{"notice":"Deposits ENG stake into contract from worker. Worker must be registered to do so."},"getActiveWorkers(uint256)":{"notice":"Get active workers before a certain block number"},"getAllSecretContractAddresses()":{"notice":"Get all secret contract addresses"},"getEpochSize()":{"notice":"Get the epoch block size"},"getFirstBlockNumber(uint256)":{"notice":"Get the first block number of an epoch that a given block number belongs to"},"getReport(address)":{"notice":"The RLP encoded report returned by the IAS server"},"getSecretContract(bytes32)":{"notice":"Get a SecretContract struct given a particular secret contract address"},"getSecretContractAddresses(uint256,uint256)":{"notice":"Get deployed secret contract addresses within a range"},"getSigningAddress()":{"notice":"Get signing address of calling worker"},"getTaskRecord(bytes32)":{"notice":"Get a TaskRecord struct given a particular task\'s ID"},"getUserTaskDeployments(address)":{"notice":"Get the current number/index (used as unique nonce value) of task deployments for a given user user"},"getWorker(address)":{"notice":"Get Worker struct from a given worker\'s ethereum address"},"getWorkerFromSigningAddress(address)":{"notice":"Get Worker struct from a given worker\'s signing address"},"getWorkerGroup(uint256,bytes32)":{"notice":"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address."},"getWorkerParams(uint256)":{"notice":"Get worker params for an epoch given a particular block number"},"getWorkersParams()":{"notice":"Get epoch-based history of worker params information"},"login()":{"notice":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process."},"logout()":{"notice":"Logout worker. Worker must be logged in to do so."},"register(address,bytes,bytes)":{"notice":"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks."},"returnFeesForTask(bytes32)":{"notice":"Return the task fee to the task creator when too many blocks have elapsed without task resolution."},"setWorkersParams(uint256,uint256,bytes)":{"notice":"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node"},"verifyReport(bytes,bytes)":{"notice":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate."},"withdraw(uint256)":{"notice":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so."}}}}')},function(e){e.exports=JSON.parse('{"contractName":"EnigmaToken","abi":[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"INITIAL_SUPPLY","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.8+commit.23d335f2\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_from\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"INITIAL_SUPPLY\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"addedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"increaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"subtractedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"decreaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"details\\":\\"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. \\",\\"methods\\":{\\"approve(address,uint256)\\":{\\"details\\":\\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\",\\"params\\":{\\"_spender\\":\\"The address which will spend the funds.\\",\\"_value\\":\\"The amount of tokens to be spent.\\"}},\\"balanceOf(address)\\":{\\"details\\":\\"Gets the balance of the specified address.\\",\\"params\\":{\\"owner\\":\\"The address to query the balance of.\\"},\\"return\\":\\"An uint256 representing the amount owned by the passed address.\\"},\\"constructor\\":{\\"details\\":\\"EnigmaToken Constructor Runs only on initial contract creation.\\"},\\"decimals()\\":{\\"return\\":\\"the number of decimals of the token.\\"},\\"decreaseAllowance(address,uint256)\\":{\\"details\\":\\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"spender\\":\\"The address which will spend the funds.\\",\\"subtractedValue\\":\\"The amount of tokens to decrease the allowance by.\\"}},\\"increaseAllowance(address,uint256)\\":{\\"details\\":\\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"addedValue\\":\\"The amount of tokens to increase the allowance by.\\",\\"spender\\":\\"The address which will spend the funds.\\"}},\\"name()\\":{\\"return\\":\\"the name of the token.\\"},\\"symbol()\\":{\\"return\\":\\"the symbol of the token.\\"},\\"totalSupply()\\":{\\"details\\":\\"Total number of tokens in existence\\"},\\"transfer(address,uint256)\\":{\\"details\\":\\"Transfer token for a specified address when not paused\\",\\"params\\":{\\"_to\\":\\"The address to transfer to.\\",\\"_value\\":\\"The amount to be transferred.\\"}},\\"transferFrom(address,address,uint256)\\":{\\"details\\":\\"Transfer tokens from one address to another when not paused\\",\\"params\\":{\\"_from\\":\\"address The address which you want to send tokens from\\",\\"_to\\":\\"address The address which you want to transfer to\\",\\"_value\\":\\"uint256 the amount of tokens to be transferred\\"}}},\\"title\\":\\"Enigma Token\\"},\\"userdoc\\":{\\"methods\\":{}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":\\"EnigmaToken\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":{\\"keccak256\\":\\"0x1d072d408420008c3d39b1006b9adbbe472f55fc314a8eb80d9861edfeb54c73\\",\\"urls\\":[\\"bzzr://9ec40fae3d143258454c5d7c25811f7969f1ef64abbf88ab96d753d6322906a4\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\":{\\"keccak256\\":\\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\\",\\"urls\\":[\\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\":{\\"keccak256\\":\\"0xe195405e9993d575173cdb5dd408db7459a026b9a98085c1a3b676f020f46584\\",\\"urls\\":[\\"bzzr://4463a0d4f49767f59c02f2a987b90d48e0d31b3ed3424f3e743496f102f96044\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\":{\\"keccak256\\":\\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\\",\\"urls\\":[\\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b506040518060400160405280600681526020017f456e69676d6100000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f454e470000000000000000000000000000000000000000000000000000000000815250600882600390805190602001906100959291906101a9565b5081516100a99060049060208501906101a9565b506005805460ff191660ff92909216919091179055506100d990503366354a6ba7a180006100de602090811b901c565b610244565b6001600160a01b0382166100f157600080fd5b61010a8160025461019060201b6106741790919060201c565b6002556001600160a01b0382166000908152602081815260409091205461013a918390610674610190821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156101a257600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101ea57805160ff1916838001178555610217565b82800160010185558215610217579182015b828111156102175782518255916020019190600101906101fc565b50610223929150610227565b5090565b61024191905b80821115610223576000815560010161022d565b90565b6107d3806102536000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610452565b6100c161046d565b6101626004803603604081101561025c57600080fd5b506001600160a01b0381351690602001356104ce565b6101626004803603604081101561028857600080fd5b506001600160a01b038135169060200135610517565b61017e600480360360408110156102b457600080fd5b506001600160a01b0381358116916020013516610523565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e838361052f565b9392505050565b60025490565b60006103888484846105ab565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006001600160a01b0383166103b957600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61067416565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006001600160a01b0383166104e357600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61068616565b600061036e838361069b565b600061036e83836106b1565b60006001600160a01b03831661054457600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b6001600160a01b03831660009081526001602090815260408083203384529091528120546105df908363ffffffff61068616565b6001600160a01b038516600090815260016020908152604080832033845290915290205561060e8484846106dc565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561036e57600080fd5b60008282111561069557600080fd5b50900390565b60006106a83384846106dc565b50600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0382166106ef57600080fd5b6001600160a01b038316600090815260208190526040902054610718908263ffffffff61068616565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461074d908263ffffffff61067416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a72305820cd0470b2dddcc56c882132081664f5106c4c77a70e625dbc86f5a15d248f86ec0029","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610452565b6100c161046d565b6101626004803603604081101561025c57600080fd5b506001600160a01b0381351690602001356104ce565b6101626004803603604081101561028857600080fd5b506001600160a01b038135169060200135610517565b61017e600480360360408110156102b457600080fd5b506001600160a01b0381358116916020013516610523565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e838361052f565b9392505050565b60025490565b60006103888484846105ab565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006001600160a01b0383166103b957600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61067416565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006001600160a01b0383166104e357600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61068616565b600061036e838361069b565b600061036e83836106b1565b60006001600160a01b03831661054457600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b6001600160a01b03831660009081526001602090815260408083203384529091528120546105df908363ffffffff61068616565b6001600160a01b038516600090815260016020908152604080832033845290915290205561060e8484846106dc565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561036e57600080fd5b60008282111561069557600080fd5b50900390565b60006106a83384846106dc565b50600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0382166106ef57600080fd5b6001600160a01b038316600090815260208190526040902054610718908263ffffffff61068616565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461074d908263ffffffff61067416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a72305820cd0470b2dddcc56c882132081664f5106c4c77a70e625dbc86f5a15d248f86ec0029","sourceMap":"660:1642:2:-;;;913:105;8:9:-1;5:2;;;30:1;27;20:12;5:2;913:105:2;405:163:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:1:2;501:4:28;493:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;515:16:28;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:28;:20;;-1:-1:-1;;541:20:28;;;;;;;;;;;;-1:-1:-1;978:33:2;;-1:-1:-1;984:10:2;753:17;978:5;;;;;:33;;:::i;:::-;660:1642;;6198:263:27;-1:-1:-1;;;;;6272:21:27;;6264:30;;;;;;6320:23;6337:5;6320:12;;:16;;;;;;:23;;;;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:27;;:9;:18;;;;;;;;;;;;:29;;6397:5;;6374:22;;;;;:29;;:::i;:::-;-1:-1:-1;;;;;6353:18:27;;:9;:18;;;;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;:9;;6418:36;;;;;;;;;;6198:263;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:26:o;660:1642:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;660:1642:2;;;-1:-1:-1;660:1642:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","deployedSourceMap":"660:1642:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;660:1642:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:128:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2026:128:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;936:89:27;;;:::i;:::-;;;;;;;;;;;;;;;;1620:150:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1620:150:2;;;;;;;;;;;;;;;;;:::i;712:58::-;;;:::i;930:81:28:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4233:317:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:27;;;;;;;;:::i;1234:104::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:27;-1:-1:-1;;;;;1234:104:27;;:::i;771:85:28:-;;;:::i;5058:327:27:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:27;;;;;;;;:::i;1200:120:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1200:120:2;;;;;;;;:::i;2160:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2160:139:2;;;;;;;;;;:::i;628:81:28:-;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2026:128:2:-;2093:4;2116:31;2130:8;2140:6;2116:13;:31::i;:::-;2109:38;2026:128;-1:-1:-1;;;2026:128:2:o;936:89:27:-;1006:12;;936:89;:::o;1620:150:2:-;1702:4;1725:38;1744:5;1751:3;1756:6;1725:18;:38::i;:::-;1718:45;1620:150;-1:-1:-1;;;;1620:150:2:o;712:58::-;753:17;712:58;:::o;930:81:28:-;995:9;;;;930:81;:::o;4233:317:27:-;4313:4;-1:-1:-1;;;;;4337:21:27;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:27;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:27;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;4462:60;;;;;;;;;;;-1:-1:-1;4539:4:27;4233:317;;;;:::o;1234:104::-;-1:-1:-1;;;;;1315:16:27;1289:7;1315:16;;;;;;;;;;;;1234:104::o;771:85:28:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;5058:327:27;5143:4;-1:-1:-1;;;;;5167:21:27;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:27;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;1200:120:2:-;1263:4;1286:27;1301:3;1306:6;1286:14;:27::i;2160:139::-;2234:7;2260:32;2276:6;2283:8;2260:15;:32::i;2735:238:27:-;2800:4;-1:-1:-1;;;;;2824:21:27;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:27;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;2909:36;;;;;;;;;;;-1:-1:-1;2962:4:27;2735:238;;;;:::o;3436:294::-;-1:-1:-1;;;;;3560:14:27;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:27;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:27;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;;;;;;;;;;;;-1:-1:-1;3719:4:27;3436:294;;;;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;1205:145;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:26;;;1205:145::o;1962:137:27:-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;:::-;-1:-1:-1;2088:4:27;1962:137;;;;:::o;1669:129::-;-1:-1:-1;;;;;1767:15:27;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;5599:256::-;-1:-1:-1;;;;;5686:16:27;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:27;;:9;:15;;;;;;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:27;;;:9;:15;;;;;;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:27;;;:9;:13;;;;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o","source":"pragma solidity ^0.5.0;\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\";\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\";\\n\\n/**\\n * @title Enigma Token\\n * @dev ERC20 Enigma Token (ENG)\\n *\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\n * units referred to as \'Grains\'.\\n *\\n * ENG are displayed using 8 decimal places of precision.\\n *\\n * 1 ENG is equivalent to:\\n *   100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n *\\n * 150 million ENG (total supply) is equivalent to:\\n *   15000000000000000 == 150000000 * 10**8 == 1e17\\n *\\n * All initial ENG Grains are assigned to the creator of\\n * this contract.\\n *\\n */\\ncontract EnigmaToken is ERC20, ERC20Detailed {\\n\\n    uint256 public constant INITIAL_SUPPLY = 150000000 * 10**8;  // 150 million ENG specified in Grains\\n\\n    /**\\n    * @dev EnigmaToken Constructor\\n    * Runs only on initial contract creation.\\n    */\\n    constructor() public ERC20Detailed(\\"Enigma\\", \\"ENG\\", 8) {\\n        _mint(msg.sender, INITIAL_SUPPLY);\\n    }\\n\\n    /**\\n    * @dev Transfer token for a specified address when not paused\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint256 _value) public returns (bool) {\\n        return super.transfer(_to, _value);\\n    }\\n\\n    /**\\n    * @dev Transfer tokens from one address to another when not paused\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint256 the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\\n        return super.transferFrom(_from, _to, _value);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint256 _value) public returns (bool) {\\n        return super.approve(_spender, _value);\\n    }\\n\\n    function allowance(address _owner, address _spender) public view returns (uint256) {\\n        return super.allowance(_owner,_spender);\\n    }\\n\\n}","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1745]},"id":1746,"nodeType":"SourceUnit","nodes":[{"id":1649,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1650,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12706,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1651,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12764,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1652,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":12705,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$12705","typeString":"contract ERC20"}},"id":1653,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1654,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":12763,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$12763","typeString":"contract ERC20Detailed"}},"id":1655,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[12705,12763,12832],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1745,"linearizedBaseContracts":[1745,12763,12705,12832],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1662,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1745,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1676,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12847,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1673,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1670,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12620,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1677,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1668,"modifierName":{"argumentTypes":null,"id":1664,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12763,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$12763_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1745,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1692,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1688,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1689,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1686,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12349,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1685,"id":1691,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"name":"_to","nodeType":"VariableDeclaration","scope":1693,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1681,"name":"_value","nodeType":"VariableDeclaration","scope":1693,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"name":"","nodeType":"VariableDeclaration","scope":1693,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1683,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1745,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12349,"visibility":"public"},{"body":{"id":1711,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1706,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1707,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1708,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1704,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":12434,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1703,"id":1710,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"name":"_from","nodeType":"VariableDeclaration","scope":1712,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1697,"name":"_to","nodeType":"VariableDeclaration","scope":1712,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1699,"name":"_value","nodeType":"VariableDeclaration","scope":1712,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"name":"","nodeType":"VariableDeclaration","scope":1712,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1701,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1745,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":12434,"visibility":"public"},{"body":{"id":1727,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1723,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1724,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1721,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":12385,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1720,"id":1726,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"name":"_spender","nodeType":"VariableDeclaration","scope":1728,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1716,"name":"_value","nodeType":"VariableDeclaration","scope":1728,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"name":"","nodeType":"VariableDeclaration","scope":1728,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1718,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1745,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":12385,"visibility":"public"},{"body":{"id":1743,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1739,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1740,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1737,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12330,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1736,"id":1742,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"name":"_owner","nodeType":"VariableDeclaration","scope":1744,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1732,"name":"_spender","nodeType":"VariableDeclaration","scope":1744,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"name":"","nodeType":"VariableDeclaration","scope":1744,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1745,"src":"2160:139:2","stateMutability":"view","superFunction":12330,"visibility":"public"}],"scope":1746,"src":"660:1642:2"}],"src":"0:2302:2"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1745]},"id":1746,"nodeType":"SourceUnit","nodes":[{"id":1649,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1650,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12706,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1651,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12764,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1652,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":12705,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$12705","typeString":"contract ERC20"}},"id":1653,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1654,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":12763,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$12763","typeString":"contract ERC20Detailed"}},"id":1655,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[12705,12763,12832],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1745,"linearizedBaseContracts":[1745,12763,12705,12832],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1662,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1745,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1676,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12847,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1673,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1670,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12620,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1677,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1668,"modifierName":{"argumentTypes":null,"id":1664,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12763,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$12763_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1745,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1692,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1688,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1689,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1686,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12349,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1685,"id":1691,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"name":"_to","nodeType":"VariableDeclaration","scope":1693,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1681,"name":"_value","nodeType":"VariableDeclaration","scope":1693,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"name":"","nodeType":"VariableDeclaration","scope":1693,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1683,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1745,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12349,"visibility":"public"},{"body":{"id":1711,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1706,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1707,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1708,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1704,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":12434,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1703,"id":1710,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"name":"_from","nodeType":"VariableDeclaration","scope":1712,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1697,"name":"_to","nodeType":"VariableDeclaration","scope":1712,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1699,"name":"_value","nodeType":"VariableDeclaration","scope":1712,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"name":"","nodeType":"VariableDeclaration","scope":1712,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1701,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1745,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":12434,"visibility":"public"},{"body":{"id":1727,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1723,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1724,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1721,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":12385,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1720,"id":1726,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"name":"_spender","nodeType":"VariableDeclaration","scope":1728,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1716,"name":"_value","nodeType":"VariableDeclaration","scope":1728,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"name":"","nodeType":"VariableDeclaration","scope":1728,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1718,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1745,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":12385,"visibility":"public"},{"body":{"id":1743,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1739,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1740,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1737,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12330,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1736,"id":1742,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"name":"_owner","nodeType":"VariableDeclaration","scope":1744,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1732,"name":"_spender","nodeType":"VariableDeclaration","scope":1744,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"name":"","nodeType":"VariableDeclaration","scope":1744,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1745,"src":"2160:139:2","stateMutability":"view","superFunction":12330,"visibility":"public"}],"scope":1746,"src":"660:1642:2"}],"src":"0:2302:2"},"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"4447":{"events":{"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}},"links":{},"address":"0x7A7cc0EB73A85348d9F277AA5E432463c4c62690","transactionHash":"0xcea7fe8410df4fa6d88448b91cd78dd08f65cdf14e70296e74ccebfa3dabcce0"}},"schemaVersion":"3.0.10","updatedAt":"2019-10-15T06:34:20.322Z","devdoc":{"details":"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. ","methods":{"approve(address,uint256)":{"details":"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.","params":{"_spender":"The address which will spend the funds.","_value":"The amount of tokens to be spent."}},"balanceOf(address)":{"details":"Gets the balance of the specified address.","params":{"owner":"The address to query the balance of."},"return":"An uint256 representing the amount owned by the passed address."},"constructor":{"details":"EnigmaToken Constructor Runs only on initial contract creation."},"decimals()":{"return":"the number of decimals of the token."},"decreaseAllowance(address,uint256)":{"details":"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"spender":"The address which will spend the funds.","subtractedValue":"The amount of tokens to decrease the allowance by."}},"increaseAllowance(address,uint256)":{"details":"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"addedValue":"The amount of tokens to increase the allowance by.","spender":"The address which will spend the funds."}},"name()":{"return":"the name of the token."},"symbol()":{"return":"the symbol of the token."},"totalSupply()":{"details":"Total number of tokens in existence"},"transfer(address,uint256)":{"details":"Transfer token for a specified address when not paused","params":{"_to":"The address to transfer to.","_value":"The amount to be transferred."}},"transferFrom(address,address,uint256)":{"details":"Transfer tokens from one address to another when not paused","params":{"_from":"address The address which you want to send tokens from","_to":"address The address which you want to transfer to","_value":"uint256 the amount of tokens to be transferred"}}},"title":"Enigma Token"},"userdoc":{"methods":{}}}')},function(e,t){e.exports=require("jayson/lib/client/browser")},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("ethereumjs-abi")},function(e,t,n){e.exports=n(16)},function(e,t){e.exports=require("core-js/stable")},function(e,t){e.exports=require("regenerator-runtime/runtime")},function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"ERROR",function(){return h}),n.d(r,"DEPOSIT_TRANSACTION_HASH",function(){return v}),n.d(r,"DEPOSIT_CONFIRMATION",function(){return C}),n.d(r,"DEPOSIT_RECEIPT",function(){return E}),n.d(r,"WITHDRAW_TRANSACTION_HASH",function(){return V}),n.d(r,"WITHDRAW_CONFIRMATION",function(){return x}),n.d(r,"WITHDRAW_RECEIPT",function(){return L}),n.d(r,"LOGIN_TRANSACTION_HASH",function(){return N}),n.d(r,"LOGIN_CONFIRMATION",function(){return P}),n.d(r,"LOGIN_RECEIPT",function(){return w}),n.d(r,"LOGOUT_TRANSACTION_HASH",function(){return R}),n.d(r,"LOGOUT_CONFIRMATION",function(){return A}),n.d(r,"LOGOUT_RECEIPT",function(){return W}),n.d(r,"DEPLOY_SC_ADDR_RESULT",function(){return q}),n.d(r,"DEPLOY_SC_ETH_TRANSACTION_HASH",function(){return M}),n.d(r,"DEPLOY_SC_ETH_CONFIRMATION",function(){return F}),n.d(r,"DEPLOY_SC_ETH_RECEIPT",function(){return B}),n.d(r,"DEPLOY_SC_ENG_RECEIPT",function(){return H}),n.d(r,"CREATE_TASK",function(){return U}),n.d(r,"CREATE_TASK_INPUT",function(){return G}),n.d(r,"CREATE_TASK_RECORD_TRANSACTION_HASH",function(){return O}),n.d(r,"CREATE_TASK_RECORD_CONFIRMATION",function(){return z}),n.d(r,"CREATE_TASK_RECORD_RECEIPT",function(){return K}),n.d(r,"CREATE_TASK_RECORD",function(){return j}),n.d(r,"CREATE_TASK_RECORDS_TRANSACTION_HASH",function(){return Y}),n.d(r,"CREATE_TASK_RECORDS_CONFIRMATION",function(){return J}),n.d(r,"CREATE_TASK_RECORDS_RECEIPT",function(){return Z}),n.d(r,"CREATE_TASK_RECORDS",function(){return X}),n.d(r,"SEND_TASK_INPUT_RESULT",function(){return Q}),n.d(r,"POLL_TASK_STATUS_RESULT",function(){return ee}),n.d(r,"GET_TASK_RESULT_RESULT",function(){return te}),n.d(r,"DEPLOY_SECRET_CONTRACT_RESULT",function(){return ne}),n.d(r,"POLL_TASK_ETH_RESULT",function(){return re});n(14),n(15);var a=n(2),i=n.n(a),s=n(3),o=n.n(s),d=n(0),p=n.n(d),l=n(7),c=n.n(l),y=n(4),u=n(5),m=n.n(u);p.a.options.usePureJavaScript=!0;var f=c.a.ec;function _(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2]?"00":"",r=!0,a=!1,s=void 0;try{for(var o,d=t[Symbol.iterator]();!(r=(o=d.next()).done);r=!0){var p=o.value;p=g(p),e+=n+i.a.BigInt(p.length/2).toString(16).padStart(16,"0")+p}}catch(e){a=!0,s=e}finally{try{r||null==d.return||d.return()}finally{if(a)throw s}}return e}function b(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=n?"01":"",a=!0,s=!1,o=void 0;try{for(var d,p=t[Symbol.iterator]();!(a=(d=p.next()).done);a=!0){var l=d.value;e=_(e+=r+i.a.BigInt(l[0].length*(l[1]+9)).toString(16).padStart(16,"0"),l[0],n)}}catch(e){s=!0,o=e}finally{try{a||null==p.return||p.return()}finally{if(s)throw o}}return e}function g(e){return"0x"==e.substring(0,2)?e.substring(2):e}var T={test:function(){return"hello2"},generateScAddr:function(e,t){return o.a.soliditySha3({t:"bytes",v:e},{t:"uint",v:t})},hash:function(e){var t=_("",e);return o.a.soliditySha3({t:"bytes",v:t})},principalHash:function(e,t,n,r){var a="";return a=b(a=_(a,[e,t],!0),[[n,20],[r,32]],!0),o.a.soliditySha3({t:"bytes",v:a})},commitReceiptsHash:function(e,t,n,r,a,i,s,d,p){var l="";return l=_(l,[e]),l=_(l=b(l,[t]),[n]),l=_(l=b(l,[r,a,i]),[s,d,p]),o.a.soliditySha3({t:"bytes",v:l})},getDerivedKey:function(e,t){var n=new f("secp256k1");128==e.length&&(e="04"+e);var r=n.keyFromPrivate(t,"hex"),a=n.keyFromPublic(e,"hex").getPublic().mul(r.getPrivate()),i=2|(a.getY().isOdd()?1:0),s=a.getX(),o=y.Buffer.from([i]),d=s.toArrayLike(y.Buffer,"be",32),l=p.a.md.sha256.create();return l.update(o.toString("binary")),l.update(d.toString("binary")),l.digest().toHex()},encryptMessage:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:p.a.random.getBytesSync(12),r=p.a.util.hexToBytes(e),a=p.a.cipher.createCipher("AES-GCM",r);return a.start({iv:n}),a.update(p.a.util.createBuffer(t)),a.finish(),a.output.putBuffer(a.mode.tag).putBytes(n).toHex()},decryptMessage:function(e,t){var n=p.a.util.hexToBytes(e),r=y.Buffer.from(t,"hex"),a=p.a.util.createBuffer(r.slice(-12)),i=p.a.util.createBuffer(r.slice(-28,-12)),s=p.a.cipher.createDecipher("AES-GCM",n);if(s.start({iv:a,tag:i}),s.update(p.a.util.createBuffer(r.slice(0,-28))),s.finish())return s.output.toHex();throw new Error("decipher did not finish")},toGrains:function(e){return e*Math.pow(10,8)}};T.remove0x=g,T.hexToAscii=function(e){if("number"!=typeof e&&"string"!=typeof e)return"";e=e.toString().replace(/\s+/gi,"");for(var t=[],n=0;n<e.length;n+=2){var r=parseInt(e.substr(n,2),16);isNaN(r)||0===r||t.push(String.fromCharCode(r))}return t.join("")},T.sleep=function(e){return new Promise(function(t){return setTimeout(t,e)})},T.gzip=function(e){return new Promise(function(t,n){m.a.gzip(e,function(e,r){e?n(e):t(r)})})},T.gunzip=function(e){return new Promise(function(t,n){m.a.gunzip(e,function(e,r){e?n(e):t(r)})})};var D=T,S=n(8),I=n(9),k=n(1),$=n.n(k),h="error",v="depositTransactionHash",C="depositConfirmation",E="depositReceipt",V="withdrawTransactionHash",x="withdrawConfirmation",L="withdrawReceipt",N="loginTransactionHash",P="loginConfirmation",w="loginReceipt",R="logoutTransactionHash",A="logoutConfirmation",W="logoutReceipt",q="deploySCAddrResult",M="deploySCEthTransactionHash",F="deploySCEthConfirmation",B="deploySCEthReceipt",H="deploySCEngReceipt",U="createTask",G="createTaskInput",O="createTaskRecordTransactionHash",z="createTaskRecordConfirmation",K="createTaskRecordReceipt",j="createTaskRecord",Y="createTaskRecordsTransactionHash",J="createTaskRecordsConfirmation",Z="createTaskRecordsReceipt",X="createTaskRecords",Q="sendTaskInputResult",ee="pollTaskStatusResult",te="getTaskResultResult",ne="deploySecretContractResult",re="pollTaskETHResult";function ae(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function ie(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){ae(i,r,a,s,o,"next",e)}function o(e){ae(i,r,a,s,o,"throw",e)}s(void 0)})}}function se(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var oe=function(){function e(t,n,r,a,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.enigmaContract=n,this.tokenContract=r,this.txDefaults=a,this.enigma=i}var t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,_;return t=e,(n=[{key:"findBySigningAddress",value:(_=ie(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorkerFromSigningAddress(t).call();case 2:return n=e.sent,e.abrupt("return",{account:n[0],status:parseInt(n[1][1]),report:n[1][2],balance:parseInt(n[1][3]),logs:n[1][4]});case 4:case"end":return e.stop()}},e,this)})),function(e){return _.apply(this,arguments)})},{key:"getWorkerStatus",value:(f=ie(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return n=e.sent,e.abrupt("return",parseInt(n.status));case 4:case"end":return e.stop()}},e,this)})),function(e){return f.apply(this,arguments)})},{key:"isDeployed",value:(m=ie(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getSecretContract(t).call();case 3:return e.t1=e.sent.status,e.t2=(0,e.t0)(e.t1),e.abrupt("return",1===e.t2);case 6:case"end":return e.stop()}},e,this)})),function(e){return m.apply(this,arguments)})},{key:"countSecretContracts",value:(u=ie(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.countSecretContracts().call();case 3:return e.t1=e.sent,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(){return u.apply(this,arguments)})},{key:"getSecretContractAddresses",value:(y=ie(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContractAddresses(t,n).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e,t){return y.apply(this,arguments)})},{key:"getAllSecretContractAddresses",value:(c=ie(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getAllSecretContractAddresses().call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(){return c.apply(this,arguments)})},{key:"getCodeHash",value:(l=ie(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.codeHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"countStateDeltas",value:(p=ie(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.stateDeltaHashes.length);case 3:case"end":return e.stop()}},e,this)})),function(e){return p.apply(this,arguments)})},{key:"getStateDeltaHash",value:(d=ie(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes[e.t0]);case 4:case"end":return e.stop()}},e,this)})),function(e,t){return d.apply(this,arguments)})},{key:"getStateDeltaHashes",value:(o=ie(regeneratorRuntime.mark(function e(t,n,r){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.t1=r,e.abrupt("return",e.sent.stateDeltaHashes.slice(e.t0,e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e,t,n){return o.apply(this,arguments)})},{key:"isValidDeltaHash",value:(s=ie(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes.includes(e.t0));case 4:case"end":return e.stop()}},e,this)})),function(e,t){return s.apply(this,arguments)})},{key:"login",value:function(e){var t=this,n=new $.a;return ie(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.login().send({from:e}).on("transactionHash",function(e){n.emit(N,e)}).on("confirmation",function(e,t){n.emit(P,e,t)}).on("receipt",function(e){n.emit(w,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(h,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"logout",value:function(e){var t=this,n=new $.a;return ie(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.logout().send({from:e}).on("transactionHash",function(e){n.emit(R,e)}).on("confirmation",function(e,t){n.emit(A,e,t)}).on("receipt",function(e){n.emit(W,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(h,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"deposit",value:function(e,t){var n=this,r=new $.a;return ie(regeneratorRuntime.mark(function a(){var i;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,n.tokenContract.methods.balanceOf(e).call();case 2:if(!(a.sent<t)){a.next=7;break}return"Not enough tokens in wallet",r.emit("error",{name:"NotEnoughTokens",message:"Not enough tokens in wallet"}),a.abrupt("return");case 7:return a.next=9,n.tokenContract.methods.approve(n.enigmaContract.options.address,t).send({from:e});case 9:return a.prev=9,a.next=12,n.enigmaContract.methods.deposit(e,t).send({from:e}).on("transactionHash",function(e){r.emit(v,e)}).on("confirmation",function(e,t){r.emit(C,e,t)});case 12:i=a.sent,r.emit(E,i),a.next=19;break;case 16:a.prev=16,a.t0=a.catch(9),r.emit(h,a.t0.message);case 19:case"end":return a.stop()}},a,null,[[9,16]])}))(),r}},{key:"withdraw",value:function(e,t){var n=this,r=new $.a;return ie(regeneratorRuntime.mark(function a(){return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,n.enigmaContract.methods.withdraw(t).send({from:e}).on("transactionHash",function(e){r.emit(V,e)}).on("confirmation",function(e,t){r.emit(x,e,t)}).on("receipt",function(e){r.emit(L,e)});case 3:a.next=8;break;case 5:a.prev=5,a.t0=a.catch(0),r.emit(h,a.t0.message);case 8:case"end":return a.stop()}},a,null,[[0,5]])}))(),r}},{key:"getBalance",value:(i=ie(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getWorker(t).call();case 3:return e.t1=e.sent.balance,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e){return i.apply(this,arguments)})},{key:"getWorkerSignerAddr",value:(a=ie(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return e.abrupt("return",e.sent.signer);case 3:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})}])&&se(t.prototype,n),r&&se(t,r),e}();var de=function e(t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,_){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.inputsHash=D.hash([n,r,_?f:t,o]),this.scAddr=t,this.encryptedFn=n,this.encryptedAbiEncodedArgs=r,this.gasLimit=a,this.gasPx=i,this.msgId=s,this.userPubKey=o,this.firstBlockNumber=d,this.workerAddress=p,this.workerEncryptionKey=l,this.sender=c,this.userTaskSig=y,this.nonce=u,this.preCode=m,this.preCodeHash=f,this.isContractDeploymentTask=_,this.transactionHash="",this.taskId="",this.receipt="",this.ethStatus=0,this.proof="",this.creationBlockNumber=-1,this.encryptedAbiEncodedOutputs="",this.delta="",this.usedGas="",this.ethereumPayload="",this.ethereumAddress="",this.workerTaskSig="",this.engStatus="null",this.decryptedOutput=""},pe=n(10),le=n.n(pe),ce=n(11),ye=n.n(ce),ue=n(12),me=n(6),fe=n.n(me);function _e(e){return(_e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function be(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function ge(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){be(i,r,a,s,o,"next",e)}function o(e){be(i,r,a,s,o,"throw",e)}s(void 0)})}}function Te(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var De=function(){function e(t,n,r,a){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.txDefaults=i;this.client=le()(function(e,t){ye.a.post(a,JSON.parse(e),{headers:{"Content-Type":"application/json",credentials:"include"}}).then(function(e){if(h in e.data)t(e.data.error,null);else{var n=JSON.stringify(e.data.result);t(null,n)}}).catch(function(e){t({code:-32e3,message:e.message},null)})},{}),this.workerParamsCache={},this.selectedWorkerGroupCache={},this.taskKeyLocalStorage={},this.createContracts(n,r)}var t,n,r,a,s,d,l,c,y;return t=e,n=[{key:"admin",value:function(){this.admin=new oe(this.web3,this.enigmaContract,this.tokenContract,this.txDefaults,this)}},{key:"createContracts",value:function(e,t){this.enigmaContract=new this.web3.eth.Contract(S.abi,e,this.txDefaults),this.tokenContract=new this.web3.eth.Contract(I.abi,t,this.txDefaults)}},{key:"createTask",value:function(e,t,n,r,a,i,s){var o=this,d=new $.a;return ge(regeneratorRuntime.mark(function p(){var l,c,y,u,m,f,_,b,g,T,S,I,k,$,v,C,E,V,x,L,N,P,w,R,A,W,q,M;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:return p.t0=parseInt,p.next=3,o.enigmaContract.methods.getUserTaskDeployments(a).call();case 3:if(p.t1=p.sent,l=(0,p.t0)(p.t1),c=s?D.generateScAddr(a,l):i,!s){p.next=17;break}if(!Buffer.isBuffer(i)){p.next=14;break}return y=i,p.next=11,D.gzip(y);case 11:u=p.sent,p.next=15;break;case 14:throw Error("PreCode expected to be a Buffer, instead got "+_e(i));case 15:p.next=19;break;case 17:y="",u="";case 19:for(m=s?o.web3.utils.soliditySha3({t:"bytes",value:y.toString("hex")}):"",f=void 0===t||0===t.length?[[],[]]:t[0].map(function(e,n){return t.map(function(e){return e[n]})}),_=D.remove0x(o.web3.eth.abi.encodeParameters(f[1],f[0])),b=[],g=0;g<_.length;g+=2)b.push(parseInt(_.substr(g,2),16));return p.next=26,o.web3.eth.getBlockNumber();case 26:return T=p.sent,p.next=29,o.getWorkerParams(T);case 29:return S=p.sent,I=S.firstBlockNumber,p.next=33,o.selectWorkerGroup(c,S,1)[0];case 33:return k=(k=p.sent).toLowerCase().slice(-40),$=o.obtainTaskKeyPair(),v=$.publicKey,C=$.privateKey,p.prev=36,p.next=39,new Promise(function(e,t){o.client.request("getWorkerEncryptionKey",{workerAddress:k,userPubKey:v},function(n,r){n?t(n):e(r)})});case 39:if(E=p.sent,V=E.result,x=E.id,L=V.workerEncryptionKey,N=V.workerSig,P="0x0000000000000013456e69676d612055736572204d6573736167650000000000000040"+L,w=(w=fe.a.recover("0x"+N,o.web3.utils.soliditySha3({t:"bytes",value:P}))).toLowerCase().slice(-40),k===w){p.next=50;break}console.error("Worker address",k,"!= recovered address",w),d.emit(h,{name:"InvalidWorker",message:"Invalid worker encryption key + signature combo ".concat(k," != ").concat(w)}),p.next=58;break;case 50:return R=D.getDerivedKey(L,C),A=D.encryptMessage(R,e),W=D.encryptMessage(R,Buffer.from(b)),q=o.web3.utils.soliditySha3({t:"bytes",v:A},{t:"bytes",v:W}),p.next=56,o.web3.eth.sign(q,a);case 56:M=p.sent,d.emit(U,new de(c,A,W,n,r,x,v,I,k,L,a,M,l,u.toString("base64"),m,s));case 58:p.next=63;break;case 60:p.prev=60,p.t2=p.catch(36),d.emit(h,p.t2);case 63:case"end":return p.stop()}},p,null,[[36,60]])}))(),d}},{key:"createTaskRecord",value:function(e){var t=this,n=new $.a;return ge(regeneratorRuntime.mark(function r(){var a;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,t.tokenContract.methods.balanceOf(e.sender).call();case 2:if(!(r.sent<e.gasLimit*e.gasPx)){r.next=6;break}return n.emit(h,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),r.abrupt("return");case 6:return r.next=8,t.tokenContract.methods.approve(t.enigmaContract.options.address,e.gasLimit*e.gasPx).send({from:e.sender});case 8:if(r.prev=8,!e.isContractDeploymentTask){r.next=15;break}return r.next=12,t.enigmaContract.methods.createDeploymentTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber,e.nonce).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(O,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 12:r.t0=r.sent,r.next=18;break;case 15:return r.next=17,t.enigmaContract.methods.createTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(O,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 17:r.t0=r.sent;case 18:a=r.t0,e.taskId=a.events.TaskRecordCreated.returnValues.taskId,e.receipt=a,e.ethStatus=1,e.creationBlockNumber=a.blockNumber,n.emit(K,a),n.emit(j,e),r.next=30;break;case 27:r.prev=27,r.t1=r.catch(8),n.emit(h,r.t1.message);case 30:case"end":return r.stop()}},r,null,[[8,27]])}))(),n}},{key:"createTaskRecords",value:function(e){var t=this,n=new $.a;return ge(regeneratorRuntime.mark(function r(){var a,i,s,o,d,p;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return a=e.map(function(e){return e.inputsHash}),i=e.map(function(e){return e.gasLimit}),s=e.map(function(e){return e.gasPx}),o=e.map(function(e){return e.gasLimit*e.gasPx}),r.next=6,t.tokenContract.methods.balanceOf(e[0].sender).call();case 6:if(d=r.sent,p=o.reduce(function(e,t){return e+t},0),!(d<p)){r.next=11;break}return n.emit(h,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),r.abrupt("return");case 11:return r.next=13,t.tokenContract.methods.approve(t.enigmaContract.options.address,p).send({from:e[0].sender});case 13:return r.next=15,t.enigmaContract.methods.createTaskRecords(a,i,s,e[0].firstBlockNumber).send({from:e[0].sender}).on("transactionHash",function(t){for(var r=0;r<e.length;r++)e[r].transactionHash=t;n.emit(Y,t)}).on("confirmation",function(e,t){n.emit(J,e,t)}).then(function(t){for(var r=t.events.TaskRecordsCreated.returnValues.taskIds,a=0;a<e.length;a++)e[a].taskId=r[a],e[a].receipt=t,e[a].ethStatus=1,e[a].creationBlockNumber=t.blockNumber;n.emit(Z,t),n.emit(X,e)});case 15:case"end":return r.stop()}},r)}))(),n}},{key:"getTaskRecordStatus",value:(y=ge(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return n=e.sent,t.ethStatus=parseInt(n.status),t.proof=n.proof,e.abrupt("return",t);case 6:case"end":return e.stop()}},e,this)})),function(e){return y.apply(this,arguments)})},{key:"getTaskOutputHash",value:(c=ge(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return e.abrupt("return",e.sent.outputHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return c.apply(this,arguments)})},{key:"getReport",value:(l=ge(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getReport(t).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"getWorkerParams",value:(d=ge(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(0===Object.keys(this.workerParamsCache).length||t-this.workerParamsCache.firstBlockNumber>=this.epochSize)){e.next=8;break}return e.next=3,this.enigmaContract.methods.getEpochSize().call();case 3:return this.epochSize=e.sent,e.next=6,this.enigmaContract.methods.getWorkerParams(t).call();case 6:n=e.sent,this.workerParamsCache={firstBlockNumber:parseInt(n[0]),seed:i.a.BigInt(n[1]),workers:n[2],stakes:n[3].map(function(e){return i.a.BigInt(e)})};case 8:return e.abrupt("return",this.workerParamsCache);case 9:case"end":return e.stop()}},e,this)})),function(e){return d.apply(this,arguments)})},{key:"selectWorkerGroup",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5,r=t.stakes.reduce(function(e,t){return i.a.add(e,t)},i.a.BigInt(0)),a=0,s=[];do{for(var d=ue.rawEncode(["uint256","bytes32","uint256"],[t.seed.toString(10),e,a]),p=o.a.keccak256(d),l=i.a.remainder(i.a.BigInt(p),r),c=t.workers[t.workers.length-1],y=0;y<t.workers.length;y++)if((l=i.a.subtract(l,t.stakes[y]))<=0){c=t.workers[y];break}s.includes(c)||s.push(c),a++}while(s.length<n);return s}},{key:"sendTaskInput",value:function(t){var n=this,r=new $.a;return ge(regeneratorRuntime.mark(function a(){var i,s;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return i="sendTaskInput",s=Q,t.isContractDeploymentTask&&(i="deploySecretContract",s=ne),a.prev=3,a.next=6,new Promise(function(r,a){n.client.request(i,e.serializeTask(t),function(e,t){e?a(e):r(t)})});case 6:r.emit(s,t),a.next=12;break;case 9:a.prev=9,a.t0=a.catch(3),r.emit(h,a.t0);case 12:case"end":return a.stop()}},a,null,[[3,9]])}))(),r}},{key:"getTaskResult",value:function(e){var t=this,n=new $.a;return ge(regeneratorRuntime.mark(function r(){var a;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,new Promise(function(n,r){t.client.request("getTaskResult",{taskId:D.remove0x(e.taskId)},function(e,t){e?r(e):n(t)})});case 3:if(!(a=r.sent).result){r.next=20;break}r.t0=a.result.status,r.next="SUCCESS"===r.t0?8:"FAILED"===r.t0?12:"UNVERIFIED"===r.t0?15:"INPROGRESS"===r.t0?15:17;break;case 8:e.delta=a.result.delta,e.ethereumPayload=a.result.ethereumPayload,e.ethereumAddress=a.result.ethereumAddress,e.preCodeHash=a.result.preCodeHash;case 12:e.encryptedAbiEncodedOutputs=a.result.output,e.usedGas=a.result.usedGas,e.workerTaskSig=a.result.signature;case 15:return e.engStatus=a.result.status,r.abrupt("break",18);case 17:throw new Error("Invalid task result status").message;case 18:r.next=21;break;case 20:e.engStatus=null;case 21:n.emit(te,e),r.next=27;break;case 24:r.prev=24,r.t1=r.catch(0),n.emit(h,r.t1);case 27:case"end":return r.stop()}},r,null,[[0,24]])}))(),n}},{key:"decryptTaskResult",value:(s=ge(regeneratorRuntime.mark(function e(t){var n,r,a;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n=this.obtainTaskKeyPair(),r=n.privateKey,a=D.getDerivedKey(t.workerEncryptionKey,r),t.decryptedOutput=D.decryptMessage(a,t.encryptedAbiEncodedOutputs),e.abrupt("return",t);case 4:case"end":return e.stop()}},e,this)})),function(e){return s.apply(this,arguments)})},{key:"pollTaskStatusGen",value:regeneratorRuntime.mark(function e(t,n){var r=this;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,new Promise(function(e,a){r.client.request("getTaskStatus",{taskId:D.remove0x(t.taskId),workerAddress:t.workerAddress,withResult:n},function(r,i){r?a(r):(t.engStatus=i.result.status,n&&(t.encryptedAbiEncodedOutputs=i.result.output),e(t))})});case 3:e.next=0;break;case 5:case"end":return e.stop()}},e)})},{key:"innerPollTaskStatus",value:function(e,t,n){var r=this;t.next().value.then(function(a){n.emit(ee,a),"SUCCESS"!==a.engStatus&&"FAILED"!==a.engStatus&&r.innerPollTaskStatus(e,t,n)}).catch(function(e){n.emit(h,e)})}},{key:"pollTaskStatus",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=new $.a,r=this.pollTaskStatusGen(e,t);return this.innerPollTaskStatus(e,r,n),n}},{key:"pollTaskETH",value:(a=ge(regeneratorRuntime.mark(function e(t){var n,r=arguments;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=r.length>1&&void 0!==r[1]?r[1]:1e3;case 1:if(1!==t.ethStatus){e.next=9;break}return e.next=4,this.getTaskRecordStatus(t);case 4:return t=e.sent,e.next=7,D.sleep(n);case 7:e.next=1;break;case 9:return e.abrupt("return",t);case 10:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})},{key:"obtainTaskKeyPair",value:function(){var e,t="undefined"!=typeof window,n=t?window.localStorage.getItem("encodedPrivateKey"):this.taskKeyLocalStorage.encodedPrivateKey;if(null==n){var r=p.a.random.createInstance();r.seedFileSync=function(e){return p.a.util.fillString("cupcake",e)},e=p.a.util.bytesToHex(r.getBytes(32)),t?window.localStorage.setItem("encodedPrivateKey",btoa(e)):this.taskKeyLocalStorage.encodedPrivateKey=Buffer.from(e,"binary").toString("base64")}else e=t?atob(n):Buffer.from(n,"base64").toString("binary");return{publicKey:fe.a.publicKeyByPrivateKey(e),privateKey:e}}},{key:"deploySecretContract",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new $.a;return ge(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!0).on(U,function(e){return o(e)}).on(h,function(e){return d(e)})});case 2:return p=o.sent,d.emit(U,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on(h,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(ne,function(t){return e(t)}).on(h,function(e){return t(e)})});case 10:return d.emit(ne,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit(h,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}},{key:"computeTask",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new $.a;return ge(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!1).on(U,function(e){return o(e)}).on(h,function(e){return d(e)})});case 2:return p=o.sent,d.emit(U,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on(h,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(Q,function(t){return e(t)}).on(h,function(e){return t(e)})});case 10:return d.emit(Q,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit(h,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}}],r=[{key:"serializeTask",value:function(e){return e.isContractDeploymentTask?{preCode:e.preCode,encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),encryptedFn:D.remove0x(e.encryptedFn),userDHKey:D.remove0x(e.userPubKey),contractAddress:D.remove0x(e.scAddr),workerAddress:e.workerAddress}:{taskId:D.remove0x(e.taskId),workerAddress:e.workerAddress,encryptedFn:D.remove0x(e.encryptedFn),encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),contractAddress:D.remove0x(e.scAddr),userDHKey:D.remove0x(e.userPubKey)}}},{key:"version",value:function(){return"0.0.1"}}],n&&Te(t.prototype,n),r&&Te(t,r),e}();n.d(t,"Enigma",function(){return De}),n.d(t,"utils",function(){return D}),n.d(t,"eeConstants",function(){return r})}])});
//# sourceMappingURL=enigma-js.node.min.js.map